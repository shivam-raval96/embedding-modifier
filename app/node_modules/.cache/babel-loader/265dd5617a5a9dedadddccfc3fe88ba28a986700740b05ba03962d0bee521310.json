{"ast":null,"code":"/* global AFRAME */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\nvar accessorFn = require('accessor-fn');\nif ('default' in accessorFn) {\n  // unwrap default export\n  accessorFn = accessorFn.default;\n}\nvar ThreeForceGraph = require('three-forcegraph');\nif ('default' in ThreeForceGraph) {\n  // unwrap default export\n  ThreeForceGraph = ThreeForceGraph.default;\n}\nvar parseJson = function parseJson(prop) {\n  return typeof prop === 'string' ? JSON.parse(prop) : prop; // already parsed\n};\n\nvar parseFn = function parseFn(prop) {\n  if (typeof prop === 'function') return prop; // already a function\n  var geval = eval; // Avoid using eval directly https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval\n  try {\n    var evalled = geval('(' + prop + ')');\n    return evalled;\n  } catch (e) {} // Can't eval, not a function\n  return null;\n};\nvar parseAccessor = function parseAccessor(prop) {\n  if (!isNaN(parseFloat(prop))) {\n    return parseFloat(prop);\n  } // parse numbers\n  if (parseFn(prop)) {\n    return parseFn(prop);\n  } // parse functions\n  return prop; // strings\n};\n\n/**\n * 3D Force-Directed Graph component for A-Frame.\n */\nAFRAME.registerComponent('forcegraph', {\n  schema: {\n    jsonUrl: {\n      type: 'string',\n      default: ''\n    },\n    nodes: {\n      parse: parseJson,\n      default: []\n    },\n    links: {\n      parse: parseJson,\n      default: []\n    },\n    numDimensions: {\n      type: 'number',\n      default: 3\n    },\n    dagMode: {\n      type: 'string',\n      default: ''\n    },\n    dagLevelDistance: {\n      type: 'number',\n      default: 0\n    },\n    dagNodeFilter: {\n      parse: parseFn,\n      default: function _default() {\n        return true;\n      }\n    },\n    onDagError: {\n      parse: parseFn,\n      default: undefined\n    },\n    nodeRelSize: {\n      type: 'number',\n      default: 4\n    },\n    // volume per val unit\n    nodeId: {\n      type: 'string',\n      default: 'id'\n    },\n    nodeVal: {\n      parse: parseAccessor,\n      default: 'val'\n    },\n    nodeResolution: {\n      type: 'number',\n      default: 8\n    },\n    // how many slice segments in the sphere's circumference\n    nodeVisibility: {\n      parse: parseAccessor,\n      default: true\n    },\n    nodeColor: {\n      parse: parseAccessor,\n      default: 'color'\n    },\n    nodeAutoColorBy: {\n      parse: parseAccessor,\n      default: ''\n    },\n    // color nodes with the same field equally\n    nodeOpacity: {\n      type: 'number',\n      default: 0.75\n    },\n    nodeThreeObject: {\n      parse: parseAccessor,\n      default: null\n    },\n    nodeThreeObjectExtend: {\n      parse: parseAccessor,\n      default: false\n    },\n    linkSource: {\n      type: 'string',\n      default: 'source'\n    },\n    linkTarget: {\n      type: 'string',\n      default: 'target'\n    },\n    linkVisibility: {\n      parse: parseAccessor,\n      default: true\n    },\n    linkColor: {\n      parse: parseAccessor,\n      default: 'color'\n    },\n    linkAutoColorBy: {\n      parse: parseAccessor,\n      default: ''\n    },\n    // color links with the same field equally\n    linkOpacity: {\n      type: 'number',\n      default: 0.2\n    },\n    linkWidth: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkResolution: {\n      type: 'number',\n      default: 6\n    },\n    // how many radial segments in each line cylinder's geometry\n    linkCurvature: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkCurveRotation: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkMaterial: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkThreeObject: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkThreeObjectExtend: {\n      parse: parseAccessor,\n      default: false\n    },\n    linkPositionUpdate: {\n      parse: parseFn,\n      default: null\n    },\n    linkDirectionalArrowLength: {\n      parse: parseAccessor,\n      default: 0\n    },\n    linkDirectionalArrowColor: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkDirectionalArrowRelPos: {\n      parse: parseAccessor,\n      default: 0.5\n    },\n    // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: {\n      type: 'number',\n      default: 8\n    },\n    // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: {\n      parse: parseAccessor,\n      default: 0\n    },\n    // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: {\n      parse: parseAccessor,\n      default: 0.01\n    },\n    // in link length ratio per frame\n    linkDirectionalParticleWidth: {\n      parse: parseAccessor,\n      default: 0.5\n    },\n    linkDirectionalParticleColor: {\n      parse: parseAccessor,\n      default: null\n    },\n    linkDirectionalParticleResolution: {\n      type: 'number',\n      default: 4\n    },\n    // how many slice segments in the particle sphere's circumference\n    onNodeHover: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onLinkHover: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onNodeClick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onLinkClick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    forceEngine: {\n      type: 'string',\n      default: 'd3'\n    },\n    // 'd3' or 'ngraph'\n    d3AlphaMin: {\n      type: 'number',\n      default: 0\n    },\n    d3AlphaDecay: {\n      type: 'number',\n      default: 0.0228\n    },\n    d3VelocityDecay: {\n      type: 'number',\n      default: 0.4\n    },\n    ngraphPhysics: {\n      parse: parseJson,\n      default: null\n    },\n    warmupTicks: {\n      type: 'int',\n      default: 0\n    },\n    // how many times to tick the force engine at init before starting to render\n    cooldownTicks: {\n      type: 'int',\n      default: 1e18\n    },\n    // Simulate infinity (int parser doesn't accept Infinity object)\n    cooldownTime: {\n      type: 'int',\n      default: 15000\n    },\n    // ms\n    onEngineTick: {\n      parse: parseFn,\n      default: function _default() {}\n    },\n    onEngineStop: {\n      parse: parseFn,\n      default: function _default() {}\n    }\n  },\n  // Bind component methods\n  getGraphBbox: function getGraphBbox() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n    return this.forceGraph.getGraphBbox();\n  },\n  emitParticle: function emitParticle() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n    var forceGraph = this.forceGraph;\n    var returnVal = forceGraph.emitParticle.apply(forceGraph, arguments);\n    return returnVal === forceGraph ? this // return self, not the inner forcegraph component\n    : returnVal;\n  },\n  d3Force: function d3Force() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n    var forceGraph = this.forceGraph;\n    var returnVal = forceGraph.d3Force.apply(forceGraph, arguments);\n    return returnVal === forceGraph ? this // return self, not the inner forcegraph component\n    : returnVal;\n  },\n  d3ReheatSimulation: function d3ReheatSimulation() {\n    this.forceGraph && this.forceGraph.d3ReheatSimulation();\n    return this;\n  },\n  refresh: function refresh() {\n    this.forceGraph && this.forceGraph.refresh();\n    return this;\n  },\n  init: function init() {\n    var _this = this;\n    var state = this.state = {}; // Internal state\n\n    // Add info msg\n    state.infoEl = document.createElement('a-text');\n    state.infoEl.setAttribute('position', '0 -0.1 -1'); // Canvas center\n    state.infoEl.setAttribute('width', 1);\n    state.infoEl.setAttribute('align', 'center');\n    state.infoEl.setAttribute('color', 'lavender');\n\n    // Get camera dom element and attach fixed view elements to camera\n    var cameraEl = document.querySelector('a-entity[camera], a-camera');\n    cameraEl.appendChild(state.infoEl);\n\n    // Keep reference to Three camera object\n    state.cameraObj = cameraEl.object3D.children.filter(function (child) {\n      return child.type === 'PerspectiveCamera';\n    })[0];\n\n    // On camera switch\n    this.el.sceneEl.addEventListener('camera-set-active', function (evt) {\n      // Switch camera reference\n      state.cameraObj = evt.detail.cameraEl.components.camera.camera;\n    });\n\n    // setup FG object\n    if (!this.forceGraph) this.forceGraph = new ThreeForceGraph(); // initialize forceGraph if it doesn't exist yet\n    this.forceGraph.onFinishUpdate(function () {\n      return _this.el.setObject3D('forcegraphGroup', _this.forceGraph);\n    }) // Bind forcegraph to elem\n    .onLoading(function () {\n      return state.infoEl.setAttribute('value', 'Loading...');\n    }) // Add loading msg\n    .onFinishLoading(function () {\n      return state.infoEl.setAttribute('value', '');\n    });\n\n    // prefer raycaster events over mouseenter/mouseleave because they expose immediately available intersection data via detail.getIntersection()\n    this.el.addEventListener('raycaster-intersected', function (ev) {\n      return state.hoverDetail = ev.detail;\n    });\n    this.el.addEventListener('raycaster-intersected-cleared', function (ev) {\n      return state.hoverDetail = ev.detail;\n    });\n    this.el.addEventListener('click', function () {\n      return state.hoverObj && _this.data['on' + (state.hoverObj.__graphObjType === 'node' ? 'Node' : 'Link') + 'Click'](state.hoverObj.__data);\n    });\n  },\n  remove: function remove() {\n    // Clean-up elems\n    this.state.infoEl.remove();\n    this.el.removeObject3D('forcegraphGroup');\n  },\n  update: function update(oldData) {\n    var comp = this;\n    var elData = this.data;\n    var diff = AFRAME.utils.diff(elData, oldData);\n    var fgProps = ['jsonUrl', 'numDimensions', 'dagMode', 'dagLevelDistance', 'dagNodeFilter', 'onDagError', 'nodeRelSize', 'nodeId', 'nodeVal', 'nodeResolution', 'nodeVisibility', 'nodeColor', 'nodeAutoColorBy', 'nodeOpacity', 'nodeThreeObject', 'nodeThreeObjectExtend', 'linkSource', 'linkTarget', 'linkVisibility', 'linkColor', 'linkAutoColorBy', 'linkOpacity', 'linkWidth', 'linkResolution', 'linkCurvature', 'linkCurveRotation', 'linkMaterial', 'linkThreeObject', 'linkThreeObjectExtend', 'linkPositionUpdate', 'linkDirectionalArrowLength', 'linkDirectionalArrowColor', 'linkDirectionalArrowRelPos', 'linkDirectionalArrowResolution', 'linkDirectionalParticles', 'linkDirectionalParticleSpeed', 'linkDirectionalParticleWidth', 'linkDirectionalParticleColor', 'linkDirectionalParticleResolution', 'forceEngine', 'd3AlphaMin', 'd3AphaDecay', 'd3VelocityDecay', 'ngraphPhysics', 'warmupTicks', 'cooldownTicks', 'cooldownTime', 'onEngineTick', 'onEngineStop'];\n    fgProps.filter(function (p) {\n      return p in diff;\n    }).forEach(function (p) {\n      comp.forceGraph[p](elData[p] !== '' ? elData[p] : null);\n    }); // Convert blank values into nulls\n\n    if ('nodes' in diff || 'links' in diff) {\n      comp.forceGraph.graphData({\n        nodes: elData.nodes,\n        links: elData.links\n      });\n    }\n  },\n  tick: function tick(t, td) {\n    var state = this.state;\n    var props = this.data;\n\n    // Update hover (intersected) object\n    var intersection = state.hoverDetail ? state.hoverDetail.getIntersection ? state.hoverDetail.getIntersection(this.el) // available in raycaster-intersected events\n    : state.hoverDetail.intersection || undefined // available in mouseenter/mouseleave events (with delayed update)\n    : undefined;\n\n    // Note:\n    // Unfortunately we only have access to the intersected object closer to the camera (1st element in the raycaster intersectObjects result),\n    // there is no \".getIntersections()\" method available in the event details. Therefore, we can't prioritize hover on nodes over links, or even exclude\n    // objects that are neither nodes or links. This makes the interaction a bit erratic if nodes have a lot of links in front.\n    // Configuring the raycaster.params.Line.threshold might help with this somewhat, but that config is also not available via the a-frame raycaster component.\n\n    // recurse up until forcegraph obj is found\n    var topObject = intersection ? intersection.object : undefined;\n    while (topObject && !topObject.hasOwnProperty('__graphObjType')) topObject = topObject.parent;\n    if (topObject !== state.hoverObj) {\n      var prevObjType = state.hoverObj ? state.hoverObj.__graphObjType : null;\n      var prevObjData = state.hoverObj ? state.hoverObj.__data : null;\n      var objType = topObject ? topObject.__graphObjType : null;\n      var objData = topObject ? topObject.__data : null;\n      if (prevObjType && prevObjType !== objType) {\n        // Hover out\n        props['on' + (prevObjType === 'node' ? 'Node' : 'Link') + 'Hover'](null, prevObjData);\n      }\n      if (objType) {\n        // Hover in\n        props['on' + (objType === 'node' ? 'Node' : 'Link') + 'Hover'](objData, prevObjType === objType ? prevObjData : null);\n      }\n      state.hoverObj = topObject;\n    }\n\n    // Run force-graph ticker\n    this.forceGraph.tickFrame();\n  }\n});","map":{"version":3,"names":["AFRAME","Error","accessorFn","require","default","ThreeForceGraph","parseJson","prop","JSON","parse","parseFn","geval","eval","evalled","e","parseAccessor","isNaN","parseFloat","registerComponent","schema","jsonUrl","type","nodes","links","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","_default","onDagError","undefined","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeVisibility","nodeColor","nodeAutoColorBy","nodeOpacity","nodeThreeObject","nodeThreeObjectExtend","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","onNodeHover","onLinkHover","onNodeClick","onLinkClick","forceEngine","d3AlphaMin","d3AlphaDecay","d3VelocityDecay","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop","getGraphBbox","forceGraph","emitParticle","returnVal","apply","arguments","d3Force","d3ReheatSimulation","refresh","init","_this","state","infoEl","document","createElement","setAttribute","cameraEl","querySelector","appendChild","cameraObj","object3D","children","filter","child","el","sceneEl","addEventListener","evt","detail","components","camera","onFinishUpdate","setObject3D","onLoading","onFinishLoading","ev","hoverDetail","hoverObj","data","__graphObjType","__data","remove","removeObject3D","update","oldData","comp","elData","diff","utils","fgProps","p","forEach","graphData","tick","t","td","props","intersection","getIntersection","topObject","object","hasOwnProperty","parent","prevObjType","prevObjData","objType","objData","tickFrame"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/aframe-forcegraph-component/index.js"],"sourcesContent":["/* global AFRAME */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nlet accessorFn = require('accessor-fn');\nif ('default' in accessorFn) {\n  // unwrap default export\n  accessorFn = accessorFn.default;\n}\n\nlet ThreeForceGraph = require('three-forcegraph');\nif ('default' in ThreeForceGraph) {\n  // unwrap default export\n  ThreeForceGraph = ThreeForceGraph.default;\n}\n\nconst parseJson = function (prop) {\n  return (typeof prop === 'string')\n    ? JSON.parse(prop)\n    : prop; // already parsed\n};\n\nconst parseFn = function (prop) {\n  if (typeof prop === 'function') return prop; // already a function\n  const geval = eval; // Avoid using eval directly https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval\n  try {\n    const evalled = geval('(' + prop + ')');\n    return evalled;\n  } catch (e) {} // Can't eval, not a function\n  return null;\n};\n\nconst parseAccessor = function (prop) {\n  if (!isNaN(parseFloat(prop))) { return parseFloat(prop); } // parse numbers\n  if (parseFn(prop)) { return parseFn(prop); } // parse functions\n  return prop; // strings\n};\n\n/**\n * 3D Force-Directed Graph component for A-Frame.\n */\nAFRAME.registerComponent('forcegraph', {\n  schema: {\n    jsonUrl: { type: 'string', default: '' },\n    nodes: { parse: parseJson, default: [] },\n    links: { parse: parseJson, default: [] },\n    numDimensions: { type: 'number', default: 3 },\n    dagMode: { type: 'string', default: '' },\n    dagLevelDistance: { type: 'number', default: 0 },\n    dagNodeFilter: { parse: parseFn, default: function() { return true; }},\n    onDagError: { parse: parseFn, default: undefined },\n    nodeRelSize: { type: 'number', default: 4 }, // volume per val unit\n    nodeId: { type: 'string', default: 'id' },\n    nodeVal: { parse: parseAccessor, default: 'val' },\n    nodeResolution: { type: 'number', default: 8 }, // how many slice segments in the sphere's circumference\n    nodeVisibility: { parse: parseAccessor, default: true },\n    nodeColor: { parse: parseAccessor, default: 'color' },\n    nodeAutoColorBy: { parse: parseAccessor, default: '' }, // color nodes with the same field equally\n    nodeOpacity: { type: 'number', default: 0.75 },\n    nodeThreeObject: { parse: parseAccessor, default: null },\n    nodeThreeObjectExtend: { parse: parseAccessor, default: false },\n    linkSource: { type: 'string', default: 'source' },\n    linkTarget: { type: 'string', default: 'target' },\n    linkVisibility: { parse: parseAccessor, default: true },\n    linkColor: { parse: parseAccessor, default: 'color' },\n    linkAutoColorBy: { parse: parseAccessor, default: '' }, // color links with the same field equally\n    linkOpacity: { type: 'number', default: 0.2 },\n    linkWidth: { parse: parseAccessor, default: 0 },\n    linkResolution: { type: 'number', default: 6 }, // how many radial segments in each line cylinder's geometry\n    linkCurvature: { parse: parseAccessor, default: 0 },\n    linkCurveRotation: { parse: parseAccessor, default: 0 },\n    linkMaterial: { parse: parseAccessor, default: null },\n    linkThreeObject: { parse: parseAccessor, default: null },\n    linkThreeObjectExtend: { parse: parseAccessor, default: false },\n    linkPositionUpdate: { parse: parseFn, default: null },\n    linkDirectionalArrowLength: { parse: parseAccessor, default: 0 },\n    linkDirectionalArrowColor: { parse: parseAccessor, default: null },\n    linkDirectionalArrowRelPos: { parse: parseAccessor, default: 0.5 }, // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: { type: 'number', default: 8 }, // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: { parse: parseAccessor, default: 0 }, // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: { parse: parseAccessor, default: 0.01 }, // in link length ratio per frame\n    linkDirectionalParticleWidth: { parse: parseAccessor, default: 0.5 },\n    linkDirectionalParticleColor: { parse: parseAccessor, default: null },\n    linkDirectionalParticleResolution: { type: 'number', default: 4 }, // how many slice segments in the particle sphere's circumference\n    onNodeHover: { parse: parseFn, default: () => {} },\n    onLinkHover: { parse: parseFn, default: () => {} },\n    onNodeClick: { parse: parseFn, default: () => {} },\n    onLinkClick: { parse: parseFn, default: () => {} },\n    forceEngine: { type: 'string', default: 'd3' }, // 'd3' or 'ngraph'\n    d3AlphaMin: { type: 'number', default: 0 },\n    d3AlphaDecay: { type: 'number', default: 0.0228 },\n    d3VelocityDecay: { type: 'number', default: 0.4 },\n    ngraphPhysics: { parse: parseJson, default: null },\n    warmupTicks: { type: 'int', default: 0 }, // how many times to tick the force engine at init before starting to render\n    cooldownTicks: { type: 'int', default: 1e18 }, // Simulate infinity (int parser doesn't accept Infinity object)\n    cooldownTime: { type: 'int', default: 15000 }, // ms\n    onEngineTick: { parse: parseFn, default: function () {} },\n    onEngineStop: { parse: parseFn, default: function () {} }\n  },\n\n  // Bind component methods\n  getGraphBbox: function() {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    return this.forceGraph.getGraphBbox();\n  },\n  emitParticle: function () {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    const forceGraph = this.forceGraph;\n    const returnVal = forceGraph.emitParticle.apply(forceGraph, arguments);\n\n    return returnVal === forceGraph\n      ? this // return self, not the inner forcegraph component\n      : returnVal;\n  },\n\n  d3Force: function () {\n    if (!this.forceGraph) {\n      // Got here before component init -> initialize forceGraph\n      this.forceGraph = new ThreeForceGraph();\n    }\n\n    const forceGraph = this.forceGraph;\n    const returnVal = forceGraph.d3Force.apply(forceGraph, arguments);\n\n    return returnVal === forceGraph\n      ? this // return self, not the inner forcegraph component\n      : returnVal;\n  },\n\n  d3ReheatSimulation: function () {\n    this.forceGraph && this.forceGraph.d3ReheatSimulation();\n    return this;\n  },\n\n  refresh: function () {\n    this.forceGraph && this.forceGraph.refresh();\n    return this;\n  },\n\n  init: function () {\n    const state = this.state = {}; // Internal state\n\n    // Add info msg\n    state.infoEl = document.createElement('a-text');\n    state.infoEl.setAttribute('position', '0 -0.1 -1'); // Canvas center\n    state.infoEl.setAttribute('width', 1);\n    state.infoEl.setAttribute('align', 'center');\n    state.infoEl.setAttribute('color', 'lavender');\n\n    // Get camera dom element and attach fixed view elements to camera\n    const cameraEl = document.querySelector('a-entity[camera], a-camera');\n    cameraEl.appendChild(state.infoEl);\n\n    // Keep reference to Three camera object\n    state.cameraObj = cameraEl.object3D.children\n      .filter(function (child) { return child.type === 'PerspectiveCamera'; })[0];\n\n    // On camera switch\n    this.el.sceneEl.addEventListener('camera-set-active', function (evt) {\n      // Switch camera reference\n      state.cameraObj = evt.detail.cameraEl.components.camera.camera;\n    });\n\n    // setup FG object\n    if (!this.forceGraph) this.forceGraph = new ThreeForceGraph(); // initialize forceGraph if it doesn't exist yet\n    this.forceGraph\n      .onFinishUpdate(() => this.el.setObject3D('forcegraphGroup', this.forceGraph)) // Bind forcegraph to elem\n      .onLoading(() => state.infoEl.setAttribute('value', 'Loading...')) // Add loading msg\n      .onFinishLoading(() => state.infoEl.setAttribute('value', ''));\n\n    // prefer raycaster events over mouseenter/mouseleave because they expose immediately available intersection data via detail.getIntersection()\n    this.el.addEventListener('raycaster-intersected', ev => state.hoverDetail = ev.detail);\n    this.el.addEventListener('raycaster-intersected-cleared', ev => state.hoverDetail = ev.detail);\n\n    this.el.addEventListener('click', () =>\n      state.hoverObj && this.data['on' + (state.hoverObj.__graphObjType === 'node' ? 'Node' : 'Link') + 'Click'](state.hoverObj.__data)\n    );\n  },\n\n  remove: function () {\n    // Clean-up elems\n    this.state.infoEl.remove();\n    this.el.removeObject3D('forcegraphGroup');\n  },\n\n  update: function (oldData) {\n    const comp = this;\n    const elData = this.data;\n    const diff = AFRAME.utils.diff(elData, oldData);\n\n    const fgProps = [\n      'jsonUrl',\n      'numDimensions',\n      'dagMode',\n      'dagLevelDistance',\n      'dagNodeFilter',\n      'onDagError',\n      'nodeRelSize',\n      'nodeId',\n      'nodeVal',\n      'nodeResolution',\n      'nodeVisibility',\n      'nodeColor',\n      'nodeAutoColorBy',\n      'nodeOpacity',\n      'nodeThreeObject',\n      'nodeThreeObjectExtend',\n      'linkSource',\n      'linkTarget',\n      'linkVisibility',\n      'linkColor',\n      'linkAutoColorBy',\n      'linkOpacity',\n      'linkWidth',\n      'linkResolution',\n      'linkCurvature',\n      'linkCurveRotation',\n      'linkMaterial',\n      'linkThreeObject',\n      'linkThreeObjectExtend',\n      'linkPositionUpdate',\n      'linkDirectionalArrowLength',\n      'linkDirectionalArrowColor',\n      'linkDirectionalArrowRelPos',\n      'linkDirectionalArrowResolution',\n      'linkDirectionalParticles',\n      'linkDirectionalParticleSpeed',\n      'linkDirectionalParticleWidth',\n      'linkDirectionalParticleColor',\n      'linkDirectionalParticleResolution',\n      'forceEngine',\n      'd3AlphaMin',\n      'd3AphaDecay',\n      'd3VelocityDecay',\n      'ngraphPhysics',\n      'warmupTicks',\n      'cooldownTicks',\n      'cooldownTime',\n      'onEngineTick',\n      'onEngineStop'\n    ];\n\n    fgProps\n      .filter(function (p) { return p in diff; })\n      .forEach(function (p) { comp.forceGraph[p](elData[p] !== '' ? elData[p] : null); }); // Convert blank values into nulls\n\n    if ('nodes' in diff || 'links' in diff) {\n      comp.forceGraph.graphData({\n        nodes: elData.nodes,\n        links: elData.links\n      });\n    }\n  },\n\n  tick: function (t, td) {\n    const state = this.state;\n    const props = this.data;\n\n    // Update hover (intersected) object\n    const intersection = state.hoverDetail\n      ? state.hoverDetail.getIntersection\n        ? state.hoverDetail.getIntersection(this.el) // available in raycaster-intersected events\n        : state.hoverDetail.intersection || undefined // available in mouseenter/mouseleave events (with delayed update)\n      : undefined;\n\n    // Note:\n    // Unfortunately we only have access to the intersected object closer to the camera (1st element in the raycaster intersectObjects result),\n    // there is no \".getIntersections()\" method available in the event details. Therefore, we can't prioritize hover on nodes over links, or even exclude\n    // objects that are neither nodes or links. This makes the interaction a bit erratic if nodes have a lot of links in front.\n    // Configuring the raycaster.params.Line.threshold might help with this somewhat, but that config is also not available via the a-frame raycaster component.\n\n    // recurse up until forcegraph obj is found\n    let topObject = intersection ? intersection.object : undefined;\n    while (topObject && !topObject.hasOwnProperty('__graphObjType'))\n      topObject = topObject.parent;\n\n    if (topObject !== state.hoverObj) {\n      const prevObjType = state.hoverObj ? state.hoverObj.__graphObjType : null;\n      const prevObjData = state.hoverObj ? state.hoverObj.__data : null;\n      const objType = topObject ? topObject.__graphObjType : null;\n      const objData = topObject ? topObject.__data : null;\n\n      if (prevObjType && prevObjType !== objType) {\n        // Hover out\n        props['on' + (prevObjType === 'node' ? 'Node' : 'Link') + 'Hover'](null, prevObjData);\n      }\n      if (objType) {\n        // Hover in\n        props['on' + (objType === 'node' ? 'Node' : 'Link') + 'Hover'](objData, prevObjType === objType ? prevObjData : null);\n      }\n\n      state.hoverObj = topObject;\n    }\n\n    // Run force-graph ticker\n    this.forceGraph.tickFrame();\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}