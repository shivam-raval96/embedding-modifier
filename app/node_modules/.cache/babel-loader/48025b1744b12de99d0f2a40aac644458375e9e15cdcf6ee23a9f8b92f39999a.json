{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#F9F6EE\", \"#808080\", \"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#25cfad\", \"#e377c2\", \"#8c564b\", \"#C28C9D\", \"#3498db\", \"#96FF2C\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#4F0000\", \"#C3BE7C\", \"#c0392b\", \"#2980b9\", \"#27ae60\", \"#8e44ad\", \"#f39c12\", \"#16a085\", \"#2c3e50\", \"#7d3c98\", \"#c0392b\", \"#f7dc6f\", \"#48c9b0\", \"#f1948a\", \"#bb8fce\", \"#73c6b6\", \"#f0b27a\", \"#85c1e9\", \"#f7f9f9\", \"#720000\", \"#76448a\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nfunction getPieDistribution(data, labels) {\n  let distribution = {};\n  for (let i = 0; i < labels.length; i++) {\n    let label = labels[i];\n    let item = data[i];\n    if (!distribution[label]) {\n      distribution[label] = {};\n    }\n    if (!distribution[label][item]) {\n      distribution[label][item] = 0;\n    }\n    distribution[label][item]++;\n  }\n  return distribution;\n}\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    searchQuery,\n    attributes\n  } = props;\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([]);\n  const defaultLasso = [[0, 0]];\n  const [prevData, setPrevData] = useState(null);\n  const [tooltipIndices, setTooltipIndices] = useState([]);\n  const [stringToNumberMap, setStringToNumberMap] = useState({\n    '0': 'none'\n  });\n  function selectIndices(data, gridRows, gridCols) {\n    // Calculate grid cell size based on data bounds and desired grid dimensions\n    const xMin = d3.min(data, d => d[0]);\n    const xMax = d3.max(data, d => d[0]);\n    const yMin = d3.min(data, d => d[1]);\n    const yMax = d3.max(data, d => d[1]);\n    const cellWidth = (xMax - xMin) / gridCols;\n    const cellHeight = (yMax - yMin) / gridRows;\n\n    // Initialize an empty grid\n    let grid = Array.from({\n      length: gridRows\n    }, () => Array.from({\n      length: gridCols\n    }, () => []));\n\n    // Assign points to the appropriate grid cells\n    data.forEach((point, index) => {\n      const col = Math.min(Math.floor((point[0] - xMin) / cellWidth), gridCols - 1);\n      const row = Math.min(Math.floor((point[1] - yMin) / cellHeight), gridRows - 1);\n      grid[row][col].push(index); // Store the index of the point\n    });\n\n    // Select one point from each occupied cell\n    const selectedIndices = [];\n    grid.forEach(row => row.forEach(cell => {\n      if (cell.length > 0) {\n        const randomIndex = cell[Math.floor(Math.random() * cell.length)];\n        selectedIndices.push(randomIndex);\n      }\n    }));\n    return selectedIndices;\n  }\n  useEffect(() => {\n    if (data && data !== prevData) {\n      setPrevData(data); // Save the current data as previous before it changes\n    }\n\n    data.forEach((d, i) => {\n      d.id = i;\n    });\n    const svg = d3.select(ref.current);\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    d3.selectAll(\".line\").remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n    function draw(polygon, data, attributes) {\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\";\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n      const selected = [];\n\n      // Select or identify the data points within the polygon\n      circles.classed(\"selected\", polygon.length > 2 ? d => {\n        if (d3.polygonContains(polygon, [xScale(d[0]), yScale(d[1])])) {\n          selected.push(d);\n          return true;\n        }\n        return false;\n      } : false);\n      if (selected.length === 0) {\n        // If no selection, show all data\n        selected.push(...data);\n      }\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border = '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          return d.id === id ? r_big : r_small;\n        });\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n      }\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        let rowData = `<td>${d[2].slice(0, 250)}</td>`; // Original data point name or identifier\n\n        // Append attribute values for this data point\n        Object.keys(attributes).forEach(attr => {\n          rowData += `<td>${attributes[attr][d.id]}</td>`; // Assumes `d.id` is a valid index for attribute arrays\n        });\n\n        tr.innerHTML = rowData;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]], 0.4);\n        tr.addEventListener('mouseover', () => {\n          ChangeBackgroundColor(tr, d.id);\n        });\n        tr.addEventListener('mouseout', () => {\n          RestoreBackgroundColor(tr);\n        });\n        table.appendChild(tr);\n      });\n      svg.value = {\n        polygon,\n        selected\n      };\n    }\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n    data = data.map(d => ({\n      ...d,\n      // Spread the rest of the data object to retain other properties\n      scaledX: xScale(d[0]),\n      // Apply xScale to the original x value\n      scaledY: yScale(d[1]) // Apply yScale to the original y value\n    }));\n\n    if (tooltipIndices.length == 0) {\n      var indices = selectIndices(data, 3, 2);\n      console.log('hello', indices);\n      setTooltipIndices(indices);\n    }\n\n    // Select random points using the indices\n    const randomDataPoints = tooltipIndices.map(index => data[index]);\n    console.log(randomDataPoints);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    //console.log(data)\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    if (false) {\n      const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(20).thresholds(5)(data);\n\n      //console.log(contours)\n\n      // Append the contours.\n      var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\").attr(\"stroke\", 'black').data(contours).join(\"path\").style(\"opacity\", 0).attr(\"fill\", (d, i) => 'gray').attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n      //.attr(\"stroke\", 'red')\n      .style(\"z-index\", -2).attr(\"d\", d3.geoPath());\n      contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2);\n    }\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      var stringToNumberMap = encodeArray(array);\n      var color_idx = getEncodedArray(array, stringToNumberMap).map(number => number + 2);\n    } else {\n      var color_idx = getColumn(data, 3);\n    }\n\n    // Bind data to circles\n    const circles = svg.selectAll('circle').data(data);\n\n    // Enter new circles\n    circles.enter().append('circle').attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1])).attr('r', (d, i) => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small).style(\"opacity\", 0.9).attr('fill', (d, i) => colors[color_idx[i] % 40]).attr('stroke', 'black') // Add this line for the boundary color\n    .attr('stroke-width', 0.5) // Add this line for the boundary width\n    .style(\"z-index\", 2).on(\"mouseover\", (event, d) => {\n      svg.selectAll('circle').transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5);\n      //.attr('r', r_small);\n      d3.select(event.currentTarget).transition().duration(100).style(\"opacity\", 1).attr('stroke-width', 4); // Add this line for the boundary width\n      //.attr('r', r_small);\n\n      let highlightedText = d[2];\n      if (searchQuery) {\n        const regex = new RegExp(`(${searchQuery})`, 'gi');\n        highlightedText = highlightedText.replace(regex, \"<span style='background-color: yellow;'>$1</span>\");\n      }\n      tooltip.transition().duration(100).style(\"opacity\", .9);\n      tooltip.html(highlightedText.slice(0, 700)).style(\"left\", event.pageX + 5 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", (event, d) => {\n      svg.selectAll('circle').transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5);\n\n      // Show tooltips for random points again\n      //d3.selectAll(\".tooltip\").remove(); // First remove all existing tooltips\n\n      d3.select(event.currentTarget).transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5); // Add this line for the boundary width*/\n\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    });\n    circles.attr('r', d => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small); // Adjust the dot size based on the search query\n\n    // Update existing circles\n    circles.attr('fill', (d, i) => colors[color_idx[i] % 40]).transition().ease(d3.easeLinear).duration(1500).attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1]));\n\n    // Remove old circles\n    circles.exit().remove();\n\n    // Define the arrow marker\n    if (null) {\n      console.log(prevData, data);\n      // Define the arrow marker\n      svg.append('defs').append('marker').attr('id', 'arrowhead').attr('viewBox', '-0 -5 10 10').attr('refX', 5).attr('refY', 0).attr('orient', 'auto').attr('markerWidth', 12).attr('markerHeight', 12).attr('zIndex', -2).attr('xoverflow', 'visible').append('svg:path').attr('d', 'M 0,-5 L 10 ,0 L 0,5').attr('fill', '#999').style('stroke', 'none');\n\n      // Create a mapping from id to previous data point\n      const idToPrevDataPoint = new Map(prevData.map(d => [d.id, d]));\n\n      // Filter out any data points that don't have a previous position\n      const dataWithPrevPosition = data.filter(d => idToPrevDataPoint.has(d.id));\n\n      // Draw the difference vectors\n      svg.selectAll('line').data(dataWithPrevPosition).enter().append('line').attr('x1', d => idToPrevDataPoint.get(d.id).scaledX).attr('y1', d => idToPrevDataPoint.get(d.id).scaledY).attr('x2', d => xScale(d[0])).attr('y2', d => yScale(d[1])).attr('stroke', '#999').attr('opacity', (d, i) => i % 15 == 0 ? 1 : 0).attr('stroke-width', 1.5).attr('marker-end', 'url(#arrowhead)');\n    }\n    svg.call(lasso().on(\"start lasso end\", function (event) {\n      draw(event, data, attributes);\n    }));\n    //draw(defaultLasso);\n\n    // Bind data to text elements and add labels\n    /*if(labels){\n      svg.selectAll('text.label')\n      .data(labels)\n      .enter()\n      .append('text')\n      .attr('class', 'label')\n      .attr('fill', 'black')  \n      .attr('x', d => xScale(d[0])) \n      .attr('y', d => yScale(d[1]))\n      .attr('dy', '.35em')  \n      .attr('text-anchor', 'middle')\n      .attr('opacity', 0)\n      .text((d,i) => d[2])//`Cluster ${i}`\n      .attr('stroke', 'black')  \n      .attr('stroke-width', '0.3px') \n      .attr('font-size', '28px')\n      .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n      ;\n    }*/\n  }, [data, labels, colorCol, width, height, searchQuery, tooltipIndices, attributes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Scatterplot, \"1iFp/soXyc/jdwbm9vypRQ0NAtY=\");\n_c = Scatterplot;\nexport default Scatterplot;\n//            //<div style={{ width:'150px',}}>{pieCharts}</div>\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","getPieDistribution","data","labels","distribution","i","length","label","item","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","width","height","colorCol","searchQuery","attributes","margin","top","left","right","bottom","ref","pieCharts","setPieCharts","defaultLasso","prevData","setPrevData","tooltipIndices","setTooltipIndices","setStringToNumberMap","selectIndices","gridRows","gridCols","xMin","d","xMax","yMin","yMax","cellWidth","cellHeight","grid","Array","from","index","col","floor","row","push","selectedIndices","cell","randomIndex","random","svg","current","lasso","dispatch","selection","node","polygon","preventDefault","p","call","type","_","arguments","selectAll","remove","path","geoPath","l","append","attr","text","draw","table","document","getElementById","innerHTML","datum","coordinates","style","selected","circles","classed","polygonContains","xScale","yScale","TableBackgroundNormalColor","TableBackgroundMouseoverColor","ChangeBackgroundColor","backgroundColor","replace","border","transition","RestoreBackgroundColor","tr","createElement","rowData","Object","keys","color_idx","addEventListener","appendChild","value","scaleLinear","domain","range","scaledX","scaledY","indices","console","log","randomDataPoints","tooltip","contours","contourDensity","y","size","bandwidth","thresholds","contourPaths","join","duration","enter","toLowerCase","includes","event","currentTarget","highlightedText","regex","RegExp","html","pageX","pageY","ease","easeLinear","exit","idToPrevDataPoint","Map","dataWithPrevPosition","filter","has","get","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n    \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \n    \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \n    \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \n    \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\"#F9F6EE\",\"#808080\",\n\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\",\n\"#9467bd\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#25cfad\",\n\"#e377c2\", \"#8c564b\", \"#C28C9D\", \"#3498db\", \"#96FF2C\",\n\"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#4F0000\", \"#C3BE7C\",\n\"#c0392b\", \"#2980b9\", \"#27ae60\", \"#8e44ad\", \"#f39c12\",\n\"#16a085\", \"#2c3e50\", \"#7d3c98\", \"#c0392b\", \"#f7dc6f\",\n\"#48c9b0\", \"#f1948a\", \"#bb8fce\", \"#73c6b6\", \"#f0b27a\",\n\"#85c1e9\", \"#f7f9f9\", \"#720000\", \"#76448a\"\n]\nfunction addAlpha(color, opacity) {\n    // coerce values so ti is between 0 and 1.\n    var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n    return color.slice(0,7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n    // Step 1: Identify unique strings\n    const uniqueStrings = new Set(array);\n\n\n    // Step 2: Map strings to numbers\n    const stringToNumberMap = {};\n    let number = 0;\n    uniqueStrings.forEach(str => {\n        stringToNumberMap[str] = number++;\n    });\n\n    // Step 3: Generate encoded array\n    return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap){\n\n    return array.map(str => stringToNumberMap[str]);\n\n}\n\nfunction getPieDistribution(data, labels) {\n    let distribution = {};\n\n    for (let i = 0; i < labels.length; i++) {\n        let label = labels[i];\n        let item = data[i];\n\n        if (!distribution[label]) {\n            distribution[label] = {};\n        }\n\n        if (!distribution[label][item]) {\n            distribution[label][item] = 0;\n        }\n\n        distribution[label][item]++;\n    }\n\n    return distribution;\n}\n\n\nfunction trackPointer(e, { start, move, out, end }) {\n    const tracker = {},\n      id = (tracker.id = e.pointerId),\n      target = e.target;\n    tracker.point = d3.pointer(e, target);\n    target.setPointerCapture(id);\n  \n    d3.select(target)\n      .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        d3.select(target).on(`.${id}`, null);\n        target.releasePointerCapture(id);\n        end && end(tracker);\n      })\n      .on(`pointermove.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.prev = tracker.point;\n        tracker.point = d3.pointer(e, target);\n        move && move(tracker);\n      })\n      .on(`pointerout.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.point = null;\n        out && out(tracker);\n      });\n  \n    start && start(tracker);\n  }\n\n\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data , labels, colorCol, searchQuery, attributes} = props;\n  const margin = {top:100, left:120, right:80, bottom:100}\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([])\n  const defaultLasso = [[0,0]]\n  const [prevData, setPrevData] = useState(null)\n  const [tooltipIndices, setTooltipIndices] = useState([]);\n\n\n  const [stringToNumberMap, setStringToNumberMap] = useState({'0':'none'});\n\n  function selectIndices(data, gridRows, gridCols) {\n    // Calculate grid cell size based on data bounds and desired grid dimensions\n    const xMin = d3.min(data, d => d[0]);\n    const xMax = d3.max(data, d => d[0]);\n    const yMin = d3.min(data, d => d[1]);\n    const yMax = d3.max(data, d => d[1]);\n    const cellWidth = (xMax - xMin) / gridCols;\n    const cellHeight = (yMax - yMin) / gridRows;\n  \n    // Initialize an empty grid\n    let grid = Array.from({ length: gridRows }, () => Array.from({ length: gridCols }, () => []));\n  \n    // Assign points to the appropriate grid cells\n    data.forEach((point, index) => {\n      const col = Math.min(Math.floor((point[0] - xMin) / cellWidth), gridCols - 1);\n      const row = Math.min(Math.floor((point[1] - yMin) / cellHeight), gridRows - 1);\n      grid[row][col].push(index); // Store the index of the point\n    });\n  \n    // Select one point from each occupied cell\n    const selectedIndices = [];\n    grid.forEach(row => row.forEach(cell => {\n      if (cell.length > 0) {\n        const randomIndex = cell[Math.floor(Math.random() * cell.length)];\n        selectedIndices.push(randomIndex);\n      }\n    }));\n  \n    return selectedIndices;\n  }\n  \n\n\n  useEffect(() => {\n    if (data && data !== prevData) {\n      setPrevData(data); // Save the current data as previous before it changes\n    }\n\n\n    data.forEach((d,i)=>{d.id = i})\n    const svg = d3.select(ref.current);\n\n\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function(selection) {\n        const node = selection.node();\n        const polygon = [];\n   \n        selection\n          .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n          .on(\"pointerdown\", e => {\n            trackPointer(e, {\n              start: p => {\n                polygon.length = 0;\n                dispatch.call(\"start\", node, polygon);\n              },\n              move: p => {\n                polygon.push(p.point);\n                dispatch.call(\"lasso\", node, polygon);\n              },\n              end: p => {\n                dispatch.call(\"end\", node, polygon);\n              }\n            });\n          });\n      };\n      lasso.on = function(type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n   \n      return lasso;\n    }\n\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n    d3.selectAll(\".line\").remove();\n\n    \n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n  function draw(polygon, data, attributes) {\n    let table = document.getElementById(\"myTable\");\n    table.innerHTML = \"\";\n\n    l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n    }).attr(\"d\", path).style('z-index',-10);\n\n    const selected = [];\n\n    // Select or identify the data points within the polygon\n    circles.classed(\n        \"selected\",\n        polygon.length > 2\n            ? d => {\n                if (d3.polygonContains(polygon, [xScale(d[0]),yScale(d[1])])) {\n                    selected.push(d);\n                    return true;\n                }\n                return false;\n            }\n            : false\n    );\n\n    if (selected.length === 0) {\n        // If no selection, show all data\n        selected.push(...data);\n    }\n\n    var TableBackgroundNormalColor = \"#ffffff\";\n    var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n    function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border= '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function(d) {\n            return d.id === id ? r_big : r_small;\n        });\n    }\n\n    function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n    }\n\n    selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        let rowData = `<td>${d[2].slice(0,250)}</td>`; // Original data point name or identifier\n\n        // Append attribute values for this data point\n        Object.keys(attributes).forEach(attr => {\n            rowData += `<td>${attributes[attr][d.id]}</td>`; // Assumes `d.id` is a valid index for attribute arrays\n        });\n\n        tr.innerHTML = rowData;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]],0.4);\n\n        tr.addEventListener('mouseover', () => {ChangeBackgroundColor(tr, d.id)});\n        tr.addEventListener('mouseout', () => {RestoreBackgroundColor(tr)});\n\n        table.appendChild(tr);\n    });\n\n    svg.value = { polygon, selected };\n}\n\n    \n\n    \n\n    \n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width-margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height-margin.bottom, margin.top]);\n\n      data = data.map(d => ({\n        ...d, // Spread the rest of the data object to retain other properties\n        scaledX: xScale(d[0]), // Apply xScale to the original x value\n        scaledY: yScale(d[1])  // Apply yScale to the original y value\n      }));\n\n\n      if (tooltipIndices.length == 0) {\n        var indices = selectIndices(data, 3, 2)\n        console.log('hello',indices)\n        setTooltipIndices(indices)}\n\n    // Select random points using the indices\n    const randomDataPoints = tooltipIndices.map(index => data[index]);\n    console.log(randomDataPoints)\n\n  \n\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"margin-right\", \"50px\")\n        .style(\"position\", \"absolute\");\n\n  //console.log(data)\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    if (false){\n\n    \n    const contours = d3.contourDensity()\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n    .size([width, height])\n    .bandwidth(20)\n    .thresholds(5)\n    (data);\n\n\n\n    //console.log(contours)\n    \n\n    // Append the contours.\n    var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -2)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)}\n\n    //SetcolorCol\n    if (colorCol!=-1){\n        var array = getColumn(data,colorCol)\n        var stringToNumberMap = encodeArray(array) ;\n        var color_idx = getEncodedArray(array, stringToNumberMap).map(number => number + 2);\n\n\n\n\n    }else{\n        var color_idx = getColumn(data,3)\n\n    }\n\n\n\n     // Bind data to circles\n     const circles = svg.selectAll('circle').data(data);\n\n     // Enter new circles\n     circles.enter().append('circle')\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]))\n         .attr('r', (d,i) => (d[2].toLowerCase().includes(searchQuery.toLowerCase())) ? r_big : r_small)\n         .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%40])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .style(\"z-index\", 2)\n        .on(\"mouseover\", (event, d) => {\n\n            svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            //.attr('r', r_small);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 4)  // Add this line for the boundary width\n                //.attr('r', r_small);\n\n            let highlightedText = d[2];\n            if (searchQuery) {\n                  const regex = new RegExp(`(${searchQuery})`, 'gi');\n                  highlightedText = highlightedText.replace(regex, \"<span style='background-color: yellow;'>$1</span>\");\n                }\n\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(highlightedText.slice(0, 700))\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (event,d) => {\n          svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n\n          // Show tooltips for random points again\n        //d3.selectAll(\".tooltip\").remove(); // First remove all existing tooltips\n\n\n\n\n           d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 0.9) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width*/\n\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        })\n\n      circles.attr('r', d => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small); // Adjust the dot size based on the search query\n\n     \n     // Update existing circles\n     circles.attr('fill', (d,i) =>  colors[color_idx[i]%40]).transition().ease(d3.easeLinear).duration(1500)\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]))\n\n      \n     // Remove old circles\n     circles.exit().remove();\n\n    // Define the arrow marker\n    if (null){\n      console.log(prevData,data)\n    // Define the arrow marker\n    svg.append('defs').append('marker')\n      .attr('id', 'arrowhead')\n      .attr('viewBox', '-0 -5 10 10')\n      .attr('refX', 5)\n      .attr('refY', 0)\n      .attr('orient', 'auto')\n      .attr('markerWidth', 12)\n      .attr('markerHeight', 12)\n      .attr('zIndex', -2)\n      .attr('xoverflow', 'visible')\n      .append('svg:path')\n      .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\n      .attr('fill', '#999')\n      .style('stroke','none');\n\n    // Create a mapping from id to previous data point\n    const idToPrevDataPoint = new Map(prevData.map(d => [d.id, d]));\n\n    // Filter out any data points that don't have a previous position\n    const dataWithPrevPosition = data.filter(d => idToPrevDataPoint.has(d.id));\n\n    // Draw the difference vectors\n    svg.selectAll('line')\n      .data(dataWithPrevPosition)\n      .enter()\n      .append('line')\n      .attr('x1', d => idToPrevDataPoint.get(d.id).scaledX)\n      .attr('y1', d => idToPrevDataPoint.get(d.id).scaledY)\n      .attr('x2', d => xScale(d[0]))\n      .attr('y2', d => yScale(d[1]))\n      .attr('stroke', '#999')\n      .attr('opacity',(d,i)=> (i%15==0)?1:0)\n      .attr('stroke-width', 1.5)\n      .attr('marker-end', 'url(#arrowhead)');}\n\n\n      svg.call(lasso().on(\"start lasso end\", function(event) {\n        draw(event, data, attributes);\n    }));\n    //draw(defaultLasso);\n    \n\n\n    // Bind data to text elements and add labels\n/*if(labels){\n  svg.selectAll('text.label')\n  .data(labels)\n  .enter()\n  .append('text')\n  .attr('class', 'label')\n  .attr('fill', 'black')  \n  .attr('x', d => xScale(d[0])) \n  .attr('y', d => yScale(d[1]))\n  .attr('dy', '.35em')  \n  .attr('text-anchor', 'middle')\n  .attr('opacity', 0)\n  .text((d,i) => d[2])//`Cluster ${i}`\n  .attr('stroke', 'black')  \n  .attr('stroke-width', '0.3px') \n  .attr('font-size', '28px')\n  .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n  ;\n}*/\n  \n\n  }, [data, labels,colorCol, width, height, searchQuery,tooltipIndices, attributes]);\n\n  return (\n    <>\n\n        <svg ref={ref} width={width} height={height}></svg>\n\n    </>\n  )\n}\n\nexport default Scatterplot;\n//            //<div style={{ width:'150px',}}>{pieCharts}</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}