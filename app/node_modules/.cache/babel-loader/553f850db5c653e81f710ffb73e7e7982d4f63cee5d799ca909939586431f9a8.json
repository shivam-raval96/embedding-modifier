{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nconst Legend = ({\n  stringToNumberMap,\n  colors\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      maxWidth: '200px',\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), Object.keys(stringToNumberMap).map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline-block',\n          width: '20px',\n          height: '20px',\n          borderRadius: '50%',\n          backgroundColor: colors[stringToNumberMap[label] % colors.length],\n          marginRight: '10px',\n          fontSize: '18px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = Legend;\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    jitter\n  } = props;\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([]);\n  const defaultLasso = [[0, 0]];\n  const [stringToNumberMap, setStringToNumberMap] = useState({\n    '0': 'none'\n  });\n  useEffect(() => {\n    data.forEach((d, i) => {\n      d.id = i;\n      d.image = 'art/img_' + i + '.jpg';\n    });\n    const svg = d3.select(ref.current);\n    // Define zoom behavior\n    const zoom = d3.zoom().scaleExtent([1, 10]) // Adjust scale extent to your needs\n    .on(\"zoom\", event => {\n      // This function is called when zooming or panning\n      // Transform the group containing your visual elements\n      svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n      // If you have axes, you would also update them here\n    });\n\n    // Apply the zoom behavior to the SVG element\n    svg.call(zoom);\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n    function draw(polygon) {\n      //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n      // selectioncontent\n      // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n      //var content = '<table>'\n\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\";\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n      const selected = [];\n\n      // note: d3.polygonContains uses the even-odd rule\n      // which is reflected in the CSS for the lasso shape\n\n      images.classed(\"selected\", polygon.length > 2 ? d => {\n        d3.polygonContains(polygon, [xScale(d[0]), yScale(d[1])]) && selected.push(d);\n      } //&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n      : false);\n      //content += '</table>'\n\n      /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n          console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n          content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n      }*/\n\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n      // These two functions need no customization.\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border = '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          var dIsInSubset = d.id == id;\n          return dIsInSubset ? r_big : r_small;\n        });\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        //row.style.backgroundColor = TableBackgroundNormalColor; \n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n      }\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = `<td>${d[2]}</td>`;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]], 0.4);\n\n        //tr.addEventListener('mouseover', () => console.log(d));\n        tr.addEventListener('mouseover', () => {\n          console.log(d);\n          ChangeBackgroundColor(tr, d.id);\n        });\n        tr.addEventListener('mouseout', () => {\n          console.log(d);\n          RestoreBackgroundColor(tr);\n        });\n        table.appendChild(tr);\n      });\n      svg.value = {\n        polygon,\n        selected\n      };\n\n      //selectioncontent.html(content)\n      //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n    }\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //console.log(contours)\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n     contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      setStringToNumberMap(encodeArray(array));\n    } else {\n      var array = getColumn(data, 3);\n      setStringToNumberMap(encodeArray(getColumn(data, 3)));\n    }\n    var color_idx = getEncodedArray(array, stringToNumberMap);\n    let result = getPieDistribution(getColumn(data, colorCol), getColumn(data, 3));\n    console.log(colorCol, stringToNumberMap);\n    let size = 30;\n    let enlargedSize = size * 6;\n\n    // Create a group for visual elements that should be zoomable and panable\n    const zoomableGroup = svg.append('g').classed('zoomable', true);\n\n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    let images = zoomableGroup.selectAll('image').data(data);\n\n    // Enter new images\n    images.enter().append('image').attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n    .merge(images).attr('x', d => xScale(d[0]) - size / 2).attr('y', d => yScale(d[1]) - size / 2).attr('width', size).attr('height', size).style(\"opacity\", .6).style(\"z-index\", 10).on(\"mouseover\", (event, d) => {\n      d3.select(event.currentTarget).transition().duration(100).attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n      .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n      .attr('width', enlargedSize).attr('height', enlargedSize).style(\"opacity\", .9).style(\"z-index\", 1);\n      tooltip.transition().duration(100).style(\"opacity\", 0);\n      tooltip.html(d[2]).style(\"left\", event.pageX + 5 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", (event, d) => {\n      tooltip.transition().duration(100).style(\"opacity\", 0);\n      d3.select(event.currentTarget).transition().duration(100).attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n      .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n      .attr('width', size).attr('height', size).style(\"z-index\", 1);\n    });\n\n    // Update existing circles\n    images.transition().ease(d3.easeLinear).duration(500).attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1]));\n    images.exit().remove();\n    svg.call(lasso().on(\"start lasso end\", draw));\n    draw(defaultLasso);\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n  }, [data, labels, width, height, colorCol, jitter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend\",\n      style: {\n        position: 'fixed',\n        top: '2%',\n        left: '86%',\n        width: '200px',\n        backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',\n        // Drop shadow\n        borderRadius: '20px',\n        // Curved edges\n        fontSize: '16px',\n        // Larger font size for better readability\n        fontFamily: 'Perpetua',\n        // Setting the font family\n        overflowY: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(Legend, {\n        stringToNumberMap: stringToNumberMap,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"KQPMLYZTgqaHE19wagETt2mBTdc=\");\n_c2 = Scatterplot;\nexport default Scatterplot;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","Legend","style","padding","border","borderRadius","backgroundColor","boxShadow","maxWidth","fontFamily","fontSize","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","label","index","display","alignItems","marginBottom","width","height","length","marginRight","_c","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","data","labels","colorCol","jitter","margin","top","left","right","bottom","ref","pieCharts","setPieCharts","defaultLasso","setStringToNumberMap","d","i","image","svg","current","zoom","scaleExtent","event","selectAll","attr","transform","call","lasso","dispatch","selection","node","polygon","preventDefault","p","push","type","_","arguments","remove","path","geoPath","l","append","text","draw","table","document","getElementById","innerHTML","datum","coordinates","selected","images","classed","polygonContains","xScale","yScale","TableBackgroundNormalColor","TableBackgroundMouseoverColor","ChangeBackgroundColor","row","replace","transition","dIsInSubset","RestoreBackgroundColor","tr","createElement","color_idx","addEventListener","console","log","appendChild","value","scaleLinear","domain","range","tooltip","contours","contourDensity","y","size","bandwidth","thresholds","result","getPieDistribution","enlargedSize","zoomableGroup","enter","process","env","PUBLIC_URL","merge","currentTarget","duration","html","pageX","pageY","ease","easeLinear","exit","position","overflowY","_c2","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n    \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \n    \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \n    \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \n    \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n    \"#d62728\", \"#bcbd22\",\"#000000\",\"#17becf\", \"#FFD700\",\"#9467bd\",\n     \"#808080\",\"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\",\"#e377c2\"\n]\nfunction addAlpha(color, opacity) {\n    // coerce values so ti is between 0 and 1.\n    var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n    return color.slice(0,7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n    // Step 1: Identify unique strings\n    const uniqueStrings = new Set(array);\n\n\n    // Step 2: Map strings to numbers\n    const stringToNumberMap = {};\n    let number = 0;\n    uniqueStrings.forEach(str => {\n        stringToNumberMap[str] = number++;\n    });\n\n    // Step 3: Generate encoded array\n    return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap){\n\n    return array.map(str => stringToNumberMap[str]);\n\n}\n\n\nconst Legend = ({ stringToNumberMap, colors }) => {\n  return (\n    <div style={{\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      maxWidth: '200px',\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '20px'\n    }}>\n      <h3 style={{ textAlign: 'center' }}>Legend</h3>\n      {Object.keys(stringToNumberMap).map((label, index) => (\n        <div key={index} style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '4px',\n        }}>\n          <span style={{\n            display: 'inline-block',\n            width: '20px',\n            height: '20px',\n            borderRadius: '50%',\n            backgroundColor: colors[stringToNumberMap[label] % colors.length],\n            marginRight: '10px',\n            fontSize: '18px'\n          }}></span>\n          <span>{label}</span>\n          <br/>\n          <br/>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\n\nfunction trackPointer(e, { start, move, out, end }) {\n    const tracker = {},\n      id = (tracker.id = e.pointerId),\n      target = e.target;\n    tracker.point = d3.pointer(e, target);\n    target.setPointerCapture(id);\n  \n    d3.select(target)\n      .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        d3.select(target).on(`.${id}`, null);\n        target.releasePointerCapture(id);\n        end && end(tracker);\n      })\n      .on(`pointermove.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.prev = tracker.point;\n        tracker.point = d3.pointer(e, target);\n        move && move(tracker);\n      })\n      .on(`pointerout.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.point = null;\n        out && out(tracker);\n      });\n  \n    start && start(tracker);\n  }\n\n\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data , labels, colorCol, jitter} = props;\n  const margin = {top:100, left:120, right:80, bottom:100}\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([])\n  const defaultLasso = [[0,0]]\n  const [stringToNumberMap, setStringToNumberMap] = useState({'0':'none'});\n\n  useEffect(() => {\n    data.forEach((d,i)=>{\n      d.id = i\n      d.image =  'art/img_'+i+'.jpg' \n    })\n    const svg = d3.select(ref.current);\n  // Define zoom behavior\n  const zoom = d3.zoom()\n    .scaleExtent([1, 10]) // Adjust scale extent to your needs\n    .on(\"zoom\", (event) => {\n      // This function is called when zooming or panning\n      // Transform the group containing your visual elements\n      svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n      // If you have axes, you would also update them here\n    });\n\n  // Apply the zoom behavior to the SVG element\n  svg.call(zoom);\n\n\n\n    function lasso() {\n        const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n        const lasso = function(selection) {\n          const node = selection.node();\n          const polygon = [];\n      \n          selection\n            .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n            .on(\"pointerdown\", e => {\n              trackPointer(e, {\n                start: p => {\n                  polygon.length = 0;\n                  dispatch.call(\"start\", node, polygon);\n                },\n                move: p => {\n                  polygon.push(p.point);\n                  dispatch.call(\"lasso\", node, polygon);\n                },\n                end: p => {\n                  dispatch.call(\"end\", node, polygon);\n                }\n              });\n            });\n        };\n        lasso.on = function(type, _) {\n          return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n        };\n      \n        return lasso;\n      }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n    \n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n    function draw(polygon) {\n        //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n        // selectioncontent\n       // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n        //var content = '<table>'\n\n        let table = document.getElementById(\"myTable\");\n        table.innerHTML = \"\";\n\n        l.datum({\n          type: \"LineString\",\n          coordinates: polygon\n        }).attr(\"d\", path).style('z-index',-10);\n    \n        const selected = [];\n    \n        // note: d3.polygonContains uses the even-odd rule\n        // which is reflected in the CSS for the lasso shape\n        \n        images.classed(\n          \"selected\",\n          polygon.length > 2\n            ? d => {d3.polygonContains(polygon, [xScale(d[0]),yScale(d[1])]) && selected.push(d) }//&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n            : false\n        );\n        //content += '</table>'\n\n        /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n            console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n            content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n        }*/\n\n        var TableBackgroundNormalColor = \"#ffffff\";\n        var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n        // These two functions need no customization.\n        function ChangeBackgroundColor(row,id) { \n            row.style.backgroundColor =  row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n\n            row.style.border= '1px solid black !important'\n\n            svg.selectAll('circle').transition(100).attr(\"r\", function(d) {\n                var dIsInSubset = d.id == id;\n                return dIsInSubset ? r_big : r_small\n              })\n        \n        }\n        function RestoreBackgroundColor(row) { \n            row.style.backgroundColor =  row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n            //row.style.backgroundColor = TableBackgroundNormalColor; \n            svg.selectAll('circle').transition(100).attr(\"r\", r_small)\n        }\n\n        selected.forEach(d=>{\n            let tr = document.createElement(\"tr\");\n            tr.innerHTML =`<td>${d[2]}</td>`;\n            tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]],0.4)\n\n            //tr.addEventListener('mouseover', () => console.log(d));\n            tr.addEventListener('mouseover', () => {console.log(d);ChangeBackgroundColor(tr,d.id)});\n            tr.addEventListener('mouseout', () => {console.log(d);RestoreBackgroundColor(tr)});\n\n            table.appendChild(tr);\n\n        })\n        svg.value = { polygon, selected };\n\n        //selectioncontent.html(content)\n        //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n\n\n\n      }\n    \n\n    \n\n    \n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width-margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height-margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"margin-right\", \"50px\")\n        .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n    .size([width, height])\n    .bandwidth(40)\n    .thresholds(3)\n    (data);\n\n\n\n    //console.log(contours)\n    \n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/ \n\n    //SetcolorCol\n    if (colorCol!=-1){\n      var array = getColumn(data,colorCol)\n      setStringToNumberMap(encodeArray(array)) ;\n\n\n\n  }else{\n      var array = getColumn(data,3)\n      setStringToNumberMap(encodeArray(getColumn(data,3)))\n  }\n\n\n\n    var color_idx = getEncodedArray(array, stringToNumberMap)\n\n    let result = getPieDistribution(getColumn(data,colorCol), getColumn(data,3));\n\n    console.log(colorCol,stringToNumberMap)\n\n  \n     let size = 30\n     let enlargedSize = size*6\n\n\n       // Create a group for visual elements that should be zoomable and panable\n      const zoomableGroup = svg.append('g').classed('zoomable', true);\n\n      \n      // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n      let images = zoomableGroup.selectAll('image').data(data);\n\n      \n      // Enter new images\n      images.enter().append('image')\n      .attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n      .merge(images)\n      .attr('x', d => xScale(d[0]) - size/2)\n      .attr('y', d => yScale(d[1]) - size/2)\n      .attr('width', size)\n      .attr('height', size)\n      .style(\"opacity\", .6)\n      .style(\"z-index\", 10)\n      .on(\"mouseover\", (event, d) => {\n\n        d3.select(event.currentTarget)\n        .transition().duration(100)\n        .attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n        .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n        .attr('width', enlargedSize)\n        .attr('height', enlargedSize)\n        .style(\"opacity\", .9)\n        .style(\"z-index\", 1);\n\n\n\n        tooltip.transition()\n            .duration(100)\n            .style(\"opacity\", 0);\n        tooltip.html(d[2])\n            .style(\"left\", (event.pageX + 5) + \"px\")\n            .style(\"top\", (event.pageY - 28) + \"px\");\n    })\n    .on(\"mouseout\", (event,d) => {\n        tooltip.transition()\n            .duration(100)\n            .style(\"opacity\", 0);\n      d3.select(event.currentTarget)\n      .transition().duration(100)\n      .attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n      .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n      .attr('width', size)\n      .attr('height', size)\n      .style(\"z-index\", 1);\n    })\n\n     // Update existing circles\n     images.transition().ease(d3.easeLinear).duration(500)\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]));\n\n    images.exit().remove()\n     svg.call(lasso().on(\"start lasso end\", draw));\n     draw(defaultLasso);\n    \n  \n\n\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n    \n\n\n  }, [data, labels, width, height, colorCol, jitter]);\n\n  return (\n    <>\n            \n        <svg ref={ref} width={width} height={height}></svg>\n        <div id = 'legend' style={{ position: 'fixed', top: '2%', left: '86%', width: '200px',backgroundColor: 'rgba(0, 0, 0, 0.02)',\n                 boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',  // Drop shadow\n                borderRadius: '20px' ,                         // Curved edges\n                fontSize: '16px', // Larger font size for better readability\n                fontFamily: 'Perpetua',  // Setting the font family\n                overflowY: 'scroll'\n                }}>\n        \n            <Legend stringToNumberMap={stringToNumberMap} colors={colors} />\n\n            \n            </div>;\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}