{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js\",\n  _s = $RefreshSig$();\nimport { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ForceGraph({\n  data\n}) {\n  _s();\n  let sim_th = data.sim_th;\n  data = data.data;\n  console.log(data['links']);\n\n  /*data['links'] = data['links'].filter(function(i) {\n    console.log(+i.value, sim_th)\n    return +i.value > sim_th*10;\n  });*/\n  data['links'] = [];\n  // gen a number persistent color from around the palette\n  const getColor = n => '#' + (n * 1234567 % Math.pow(2, 24)).toString(16).padStart(6, '0');\n  function nodePaint(node, color, ctx, size) {\n    ctx.fillStyle = color;\n    ctx.lineWidth = 0.3;\n    ctx.stroke();\n    ctx.globalAlpha = 0.5;\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, size, 0, 2 * Math.PI, false);\n    ctx.fill(); // circle\n    ctx.fillStyle = \"rgba(0,0,0, 0.2)\";\n    ctx.shadowColor = \"black\";\n    ctx.shadowBlur = 5;\n  }\n  function nodeLabel(node, ctx, globalScale) {\n    const label = node.label;\n    const fontSize = 80 * globalScale;\n    /*ctx.font = `${fontSize}px Sans-Serif`;\n    const textWidth = ctx.measureText(label).width;\n    const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n     ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n     ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = \"black\";\n    ctx.fillText(label, node.x, node.y);\n    ctx.shadowColor=\"black\";\n    ctx.shadowBlur=5;*/\n\n    let w = ctx.measureText(label).width;\n    ctx.font = \"15px verdana\";\n    ctx.shadowColor = \"black\";\n    ctx.shadowBlur = 10;\n    ctx.lineWidth = 2;\n    ctx.strokeText(label, node.x, node.y);\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = \"white\";\n    ctx.fillText(label, node.x, node.y);\n    node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n  }\n\n  let range = 1400;\n  let x = d3.scaleLinear().range([-range, range]),\n    y = d3.scaleLinear().range([-range, range]);\n  var d_extent_x = d3.extent(data['nodes'], d => +d['x']),\n    d_extent_y = d3.extent(data['nodes'], d => +d['y']);\n\n  // Draw axes\n  x.domain(d_extent_x);\n  y.domain(d_extent_y);\n  data['nodes'] = data['nodes'].map(function (e) {\n    e['x'] = x(+e['x']);\n    e['y'] = y(+e['y']);\n    return e;\n  });\n  data['links'] = data['links'].map(function (e) {\n    e['value'] = +e['value'];\n    return e;\n  });\n  const forceRef = useRef(null);\n  useEffect(() => {\n    forceRef.current.d3Force(\"charge\").strength(0);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: data,\n      nodeLabel: \"id\",\n      nodeAutoColorBy: \"group\",\n      nodeRelSize: 8,\n      d3VelocityDecay: 0.95,\n      nodeOpacity: 0.01,\n      nodeLabel: \"name\",\n      nodeDesc: \"id\",\n      linkWidth: 1.5\n      //linkDirectionalParticles={4}\n      //linkDirectionalParticleWidth={1}\n      ,\n      linkVisibility: true,\n      onNodeClick: node => {\n        console.log(node);\n      },\n      onLinkClick: link => {\n        console.log(link);\n      },\n      ref: forceRef,\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        if (node.group) {\n          nodePaint(node, getColor(node.group), ctx, 15);\n        } else {\n          nodeLabel(node, ctx, globalScale);\n        }\n      },\n      onNodeDragEnd: node => {\n        node.fx = node.x;\n        node.fy = node.y;\n        node.fz = node.z;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ForceGraph, \"TxYESRtw+XzKUI1LiKhMBv+9Ljk=\");\n_c = ForceGraph;\nexport default ForceGraph;\nvar _c;\n$RefreshReg$(_c, \"ForceGraph\");","map":{"version":3,"names":["ForceGraph2D","React","useContext","useState","useRef","useEffect","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","ForceGraph","data","_s","sim_th","console","log","getColor","n","Math","pow","toString","padStart","nodePaint","node","color","ctx","size","fillStyle","lineWidth","stroke","globalAlpha","beginPath","arc","x","y","PI","fill","shadowColor","shadowBlur","nodeLabel","globalScale","label","fontSize","w","measureText","width","font","strokeText","fillText","__bckgDimensions","bckgDimensions","range","scaleLinear","d_extent_x","extent","d","d_extent_y","domain","map","e","forceRef","current","d3Force","strength","children","graphData","nodeAutoColorBy","nodeRelSize","d3VelocityDecay","nodeOpacity","nodeDesc","linkWidth","linkVisibility","onNodeClick","onLinkClick","link","ref","nodeCanvasObject","group","onNodeDragEnd","fx","fy","fz","z","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js"],"sourcesContent":["import { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\n\nfunction ForceGraph({data}) {\n\n    let sim_th = data.sim_th \n    data = data.data\n    console.log(data['links'])\n\n    /*data['links'] = data['links'].filter(function(i) {\n      console.log(+i.value, sim_th)\n      return +i.value > sim_th*10;\n    });*/\n    data['links'] = []\n    // gen a number persistent color from around the palette\n    const getColor = n => '#' + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, '0');\n\n    function nodePaint(node, color, ctx, size) {\n        ctx.fillStyle = color;\n        ctx.lineWidth = 0.3;\n        ctx.stroke();\n        ctx.globalAlpha   = 0.5;\n        ctx.beginPath(); ctx.arc(node.x, node.y, size, 0, 2 * Math.PI, false); ctx.fill();  // circle\n        ctx.fillStyle = \"rgba(0,0,0, 0.2)\";\n        ctx.shadowColor=\"black\";\n        ctx.shadowBlur=5;  \n      }\n    function nodeLabel(node, ctx, globalScale){\n            \n            const label = node.label;\n            const fontSize = 80*globalScale;\n            /*ctx.font = `${fontSize}px Sans-Serif`;\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = \"black\";\n            ctx.fillText(label, node.x, node.y);\n            ctx.shadowColor=\"black\";\n            ctx.shadowBlur=5;*/\n\n\n            let w = ctx.measureText(label).width;\n\n            ctx.font=\"15px verdana\";\n            ctx.shadowColor=\"black\";\n            ctx.shadowBlur=10;\n            ctx.lineWidth=2;\n            ctx.strokeText(label, node.x, node.y);\n            ctx.shadowBlur=0;\n            ctx.fillStyle=\"white\";\n            ctx.fillText(label, node.x, node.y);\n\n\n\n            node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n            \n    }\n\n    let range=1400\n\n\n\n        let x = d3.scaleLinear().range([-range,range]),\n        y = d3.scaleLinear().range([-range,range]);\n\n\n\n\n    var d_extent_x = d3.extent(data['nodes'], (d) => +d['x']),\n        d_extent_y = d3.extent(data['nodes'], (d) => +d['y']);\n\n    // Draw axes\n    x.domain(d_extent_x);\n    y.domain(d_extent_y);\n\n    data['nodes'] = data['nodes'].map(function(e){\n        e['x'] = x(+e['x'])\n        e['y'] = y(+e['y'])\n        return e;\n    });\n\n    data['links'] = data['links'].map(function(e){\n        e['value'] = +e['value']\n        return e;\n    });\n\n    const forceRef = useRef(null);\n    useEffect(() => {\n        forceRef.current.d3Force(\"charge\").strength(0);\n    });\n    return (\n\n        <>\n        \n\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel=\"id\"\n          nodeAutoColorBy=\"group\"\n          nodeRelSize={8}\n          d3VelocityDecay={0.95}\n          nodeOpacity ={0.01}\n          nodeLabel = {\"name\"}\n          nodeDesc = {\"id\"}\n          linkWidth={1.5}\n          //linkDirectionalParticles={4}\n          //linkDirectionalParticleWidth={1}\n          linkVisibility ={true}\n          onNodeClick =  {node=>{console.log(node)}}\n          onLinkClick =  {link=>{console.log(link)}}\n\n          ref={forceRef}\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            if (node.group){\n                nodePaint(node, getColor(node.group), ctx, 15)\n            }else{\n                nodeLabel(node, ctx, globalScale)\n            }\n          }}\n          onNodeDragEnd={node => {\n            node.fx = node.x;\n            node.fy = node.y;\n            node.fz = node.z;\n          }}\n          \n            />\n\n        </>\n      );\n    }\n    \n    export default ForceGraph;\n    \n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}