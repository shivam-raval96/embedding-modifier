{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet currentImg = '';\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nconst Legend = ({\n  stringToNumberMap,\n  colors\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      maxWidth: '200px',\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), Object.keys(stringToNumberMap).map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline-block',\n          width: '20px',\n          height: '20px',\n          borderRadius: '50%',\n          backgroundColor: colors[stringToNumberMap[label] % colors.length],\n          marginRight: '10px',\n          fontSize: '18px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = Legend;\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    jitter\n  } = props;\n  console.log(data);\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [zooming, setZooming] = useState(false);\n  const defaultLasso = [[0, 0]];\n  const [stringToNumberMap, setStringToNumberMap] = useState({\n    '0': 'none'\n  });\n  // const [currentImg, setCurrentImg] = useState('')\n\n  useEffect(() => {\n    data.forEach((d, i) => {\n      d.id = i;\n      d.image = 'art/img_' + i + '.jpg';\n    });\n    const svg = d3.select(ref.current);\n    // Define zoom behavior\n    const zoom = d3.zoom().scaleExtent([1, 10]) // Adjust scale extent to your needs\n    .on(\"start\", event => {\n      setZooming(true);\n    }).on(\"zoom\", event => {\n      // This function is called when zooming or panning\n      // Transform the group containing your visual elements\n      svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n      // If you have axes, you would also update them here\n    }).on(\"end\", event => {\n      setZooming(false);\n    });\n\n    // Apply the zoom behavior to the SVG element\n    svg.call(zoom);\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          e.preventDefault();\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n    function draw(polygon) {\n      //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n      // selectioncontent\n      // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n      //var content = '<table>'\n\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\";\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n      const selected = [];\n\n      // note: d3.polygonContains uses the even-odd rule\n      // which is reflected in the CSS for the lasso shape\n\n      images.classed(\"selected\", polygon.length > 2 ? d => {\n        d3.polygonContains(polygon, [xScale(d[0]), yScale(d[1])]) && selected.push(d);\n      } //&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n      : false);\n      //content += '</table>'\n\n      /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n          console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n          content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n      }*/\n\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n      // These two functions need no customization.\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border = '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          var dIsInSubset = d.id == id;\n          return dIsInSubset ? r_big : r_small;\n        });\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        //row.style.backgroundColor = TableBackgroundNormalColor; \n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n      }\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = `<td>${d[2]}</td>`;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]], 0.4);\n\n        //tr.addEventListener('mouseover', () => console.log(d));\n        tr.addEventListener('mouseover', () => {\n          console.log(d);\n          ChangeBackgroundColor(tr, d.id);\n        });\n        tr.addEventListener('mouseout', () => {\n          console.log(d);\n          RestoreBackgroundColor(tr);\n        });\n        table.appendChild(tr);\n      });\n      svg.value = {\n        polygon,\n        selected\n      };\n\n      //selectioncontent.html(content)\n      //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n    }\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //console.log(contours)\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n     contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      setStringToNumberMap(encodeArray(array));\n    } else {\n      var array = getColumn(data, 3);\n      setStringToNumberMap(encodeArray(getColumn(data, 3)));\n    }\n    var color_idx = getEncodedArray(array, stringToNumberMap);\n    console.log(colorCol, stringToNumberMap);\n    let size = 20;\n    let enlargedSize = size * 6;\n\n    // Create a group for visual elements that should be zoomable and panable\n    const zoomableGroup = svg.append('g').classed('zoomable', true);\n\n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    let images = zoomableGroup.selectAll('image').data(data);\n\n    // Enter new images\n    images.enter().append('image').attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n    .merge(images).attr('x', d => xScale(d[0]) - size / 2).attr('y', d => yScale(d[1]) - size / 2).attr('width', size).attr('height', size).style(\"opacity\", .6)\n    // .style(\"z-index\", 1)\n    .on(\"mouseover\", (event, d) => {\n      // console.log(\"c\", currentImg);\n      // console.log(\"d\", d.image);\n      // console.log(d.image === currentImg);\n      if (d.image === currentImg) {\n        currentImg = '';\n        return;\n      }\n      if (!zooming) {\n        currentImg = d.image;\n      }\n      // console.log(\"e\", currentImg);\n\n      d3.select(event.currentTarget).raise().transition().duration(300).attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n      .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n      .attr('width', enlargedSize).attr('height', enlargedSize).style(\"opacity\", 0.9).on(\"end\", function () {\n        d3.select(this).style(\"pointer-events\", \"none\");\n      });\n      // .style(\"z-index\", 20);  // needs to be higher than other images\n\n      console.log(d);\n      let tooltipContent = `<div><p>Title: ${d[4]}</p><p>Artist: ${d[5]}</p><p>Medium: ${d[11]}</p><p>Genre: ${d[8]}</p><p>Date/Period: ${d[10]}</p></div>`;\n      tooltip.transition().duration(100).style(\"opacity\", 100);\n      tooltip.html(tooltipContent).style(\"left\", event.pageX - 10 + enlargedSize / 2 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", (event, d) => {\n      tooltip.transition().duration(100).style(\"opacity\", 0);\n      d3.select(event.currentTarget).transition().duration(100).attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n      .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n      .attr('width', size).attr('height', size).on(\"end\", function () {\n        // Once the transition ends, reset pointer-events to auto\n        d3.select(this).style(\"pointer-events\", \"auto\");\n        // console.log(\"out\", d.image)\n        // if (d.image === currentImg) {\n        //   currentImg = '';\n        //   console.log(\"cu out\", currentImg)\n        // }\n      });\n    });\n\n    // Update existing circles\n    images.transition().ease(d3.easeLinear).duration(500).attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1]));\n    images.exit().remove();\n\n    // *️⃣ Disable lasso for now\n    // svg.call(lasso().on(\"start lasso end\", draw));\n    // draw(defaultLasso);\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n  }, [data, labels, width, height, colorCol, jitter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend\",\n      style: {\n        position: 'fixed',\n        top: '2%',\n        left: '86%',\n        width: '200px',\n        backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',\n        // Drop shadow\n        borderRadius: '20px',\n        // Curved edges\n        fontSize: '16px',\n        // Larger font size for better readability\n        fontFamily: 'Perpetua',\n        // Setting the font family\n        overflowY: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(Legend, {\n        stringToNumberMap: stringToNumberMap,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"hUUZ/1PwHs4GQRFXfH6cV6myX0k=\");\n_c2 = Scatterplot;\nexport default Scatterplot;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","currentImg","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","Legend","style","padding","border","borderRadius","backgroundColor","boxShadow","maxWidth","fontFamily","fontSize","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","label","index","display","alignItems","marginBottom","width","height","length","marginRight","_c","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","data","labels","colorCol","jitter","console","log","margin","top","left","right","bottom","ref","zooming","setZooming","defaultLasso","setStringToNumberMap","d","i","image","svg","current","zoom","scaleExtent","event","selectAll","attr","transform","call","lasso","dispatch","selection","node","polygon","preventDefault","p","push","type","_","arguments","remove","path","geoPath","l","append","text","draw","table","document","getElementById","innerHTML","datum","coordinates","selected","images","classed","polygonContains","xScale","yScale","TableBackgroundNormalColor","TableBackgroundMouseoverColor","ChangeBackgroundColor","row","replace","transition","dIsInSubset","RestoreBackgroundColor","tr","createElement","color_idx","addEventListener","appendChild","value","scaleLinear","domain","range","tooltip","contours","contourDensity","y","size","bandwidth","thresholds","enlargedSize","zoomableGroup","enter","process","env","PUBLIC_URL","merge","currentTarget","raise","duration","tooltipContent","html","pageX","pageY","ease","easeLinear","exit","position","overflowY","_c2","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nlet currentImg = ''\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n  \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\",\n  \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\",\n  \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\",\n  \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n  \"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\",\n  \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"\n]\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap) {\n\n  return array.map(str => stringToNumberMap[str]);\n\n}\n\n\nconst Legend = ({ stringToNumberMap, colors }) => {\n  return (\n    <div style={{\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      maxWidth: '200px',\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '20px'\n    }}>\n      <h3 style={{ textAlign: 'center' }}>Legend</h3>\n      {Object.keys(stringToNumberMap).map((label, index) => (\n        <div key={index} style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '4px',\n        }}>\n          <span style={{\n            display: 'inline-block',\n            width: '20px',\n            height: '20px',\n            borderRadius: '50%',\n            backgroundColor: colors[stringToNumberMap[label] % colors.length],\n            marginRight: '10px',\n            fontSize: '18px'\n          }}></span>\n          <span>{label}</span>\n          <br />\n          <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\n\nfunction trackPointer(e, { start, move, out, end }) {\n  const tracker = {},\n    id = (tracker.id = e.pointerId),\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n\n  d3.select(target)\n    .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n      if (e.pointerId !== id) return;\n      tracker.sourceEvent = e;\n      d3.select(target).on(`.${id}`, null);\n      target.releasePointerCapture(id);\n      end && end(tracker);\n    })\n    .on(`pointermove.${id}`, (e) => {\n      if (e.pointerId !== id) return;\n      tracker.sourceEvent = e;\n      tracker.prev = tracker.point;\n      tracker.point = d3.pointer(e, target);\n      move && move(tracker);\n    })\n    .on(`pointerout.${id}`, (e) => {\n      if (e.pointerId !== id) return;\n      tracker.sourceEvent = e;\n      tracker.point = null;\n      out && out(tracker);\n    });\n\n  start && start(tracker);\n}\n\n\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data, labels, colorCol, jitter } = props;\n  console.log(data)\n  const margin = { top: 100, left: 120, right: 80, bottom: 100 }\n  const ref = useRef();\n  const [zooming, setZooming] = useState(false)\n  const defaultLasso = [[0, 0]]\n  const [stringToNumberMap, setStringToNumberMap] = useState({ '0': 'none' });\n  // const [currentImg, setCurrentImg] = useState('')\n\n  useEffect(() => {\n    data.forEach((d, i) => {\n      d.id = i\n      d.image = 'art/img_' + i + '.jpg'\n    })\n    const svg = d3.select(ref.current);\n    // Define zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([1, 10]) // Adjust scale extent to your needs\n      .on(\"start\", (event) => {setZooming(true)})\n      .on(\"zoom\", (event) => {\n        \n        // This function is called when zooming or panning\n        // Transform the group containing your visual elements\n        svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n        // If you have axes, you would also update them here\n      })\n      .on(\"end\", (event) => {setZooming(false)});\n\n    // Apply the zoom behavior to the SVG element\n    svg.call(zoom);\n\n\n\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n\n        selection\n          .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n          .on(\"pointerdown\", e => {\n            e.preventDefault();\n            trackPointer(e, {\n              start: p => {\n                polygon.length = 0;\n                dispatch.call(\"start\", node, polygon);\n              },\n              move: p => {\n                polygon.push(p.point);\n                dispatch.call(\"lasso\", node, polygon);\n              },\n              end: p => {\n                dispatch.call(\"end\", node, polygon);\n              }\n            });\n          });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n\n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n    function draw(polygon) {\n      //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n      // selectioncontent\n      // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n      //var content = '<table>'\n\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\";\n\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n\n      const selected = [];\n\n      // note: d3.polygonContains uses the even-odd rule\n      // which is reflected in the CSS for the lasso shape\n\n      images.classed(\n        \"selected\",\n        polygon.length > 2\n          ? d => { d3.polygonContains(polygon, [xScale(d[0]), yScale(d[1])]) && selected.push(d) }//&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n          : false\n      );\n      //content += '</table>'\n\n      /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n          console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n          content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n      }*/\n\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n      // These two functions need no customization.\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n\n        row.style.border = '1px solid black !important'\n\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          var dIsInSubset = d.id == id;\n          return dIsInSubset ? r_big : r_small\n        })\n\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        //row.style.backgroundColor = TableBackgroundNormalColor; \n        svg.selectAll('circle').transition(100).attr(\"r\", r_small)\n      }\n\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = `<td>${d[2]}</td>`;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]], 0.4)\n\n        //tr.addEventListener('mouseover', () => console.log(d));\n        tr.addEventListener('mouseover', () => { console.log(d); ChangeBackgroundColor(tr, d.id) });\n        tr.addEventListener('mouseout', () => { console.log(d); RestoreBackgroundColor(tr) });\n\n        table.appendChild(tr);\n\n      })\n      svg.value = { polygon, selected };\n\n      //selectioncontent.html(content)\n      //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n\n\n\n    }\n\n\n\n\n\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height - margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0)\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"solid\")\n      .style(\"border-width\", \"2px\")\n      .style(\"border-radius\", \"5px\")\n      .style(\"padding\", \"5px\")\n      .style(\"margin-right\", \"50px\")\n      .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n      .x(d => xScale(d[0]))\n      .y(d => yScale(d[1]))\n      .size([width, height])\n      .bandwidth(40)\n      .thresholds(3)\n      (data);\n\n\n\n    //console.log(contours)\n\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol)\n      setStringToNumberMap(encodeArray(array));\n\n\n\n    } else {\n      var array = getColumn(data, 3)\n      setStringToNumberMap(encodeArray(getColumn(data, 3)))\n    }\n\n\n\n    var color_idx = getEncodedArray(array, stringToNumberMap)\n\n    console.log(colorCol, stringToNumberMap)\n\n\n    let size = 20\n    let enlargedSize = size * 6\n\n\n    // Create a group for visual elements that should be zoomable and panable\n    const zoomableGroup = svg.append('g').classed('zoomable', true);\n\n\n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    let images = zoomableGroup.selectAll('image').data(data);\n\n\n    // Enter new images\n    images.enter().append('image')\n      .attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n      .merge(images)\n      .attr('x', d => xScale(d[0]) - size / 2)\n      .attr('y', d => yScale(d[1]) - size / 2)\n      .attr('width', size)\n      .attr('height', size)\n      .style(\"opacity\", .6)\n      // .style(\"z-index\", 1)\n      .on(\"mouseover\", (event, d) => {\n        // console.log(\"c\", currentImg);\n        // console.log(\"d\", d.image);\n        // console.log(d.image === currentImg);\n        if (d.image === currentImg) {\n          currentImg = ''\n          return\n        }\n        if (!zooming){\n          currentImg = d.image\n        }\n        // console.log(\"e\", currentImg);\n\n        d3.select(event.currentTarget)\n          .raise()\n          .transition().duration(300)\n          .attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n          .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n          .attr('width', enlargedSize)\n          .attr('height', enlargedSize)\n          .style(\"opacity\", 0.9)\n          .on(\"end\", function() {\n            d3.select(this).style(\"pointer-events\", \"none\");\n          });\n          // .style(\"z-index\", 20);  // needs to be higher than other images\n        \n        console.log(d);\n        let tooltipContent = `<div><p>Title: ${d[4]}</p><p>Artist: ${d[5]}</p><p>Medium: ${d[11]}</p><p>Genre: ${d[8]}</p><p>Date/Period: ${d[10]}</p></div>`;\n\n        tooltip.transition()\n          .duration(100)\n          .style(\"opacity\", 100);\n        tooltip.html(tooltipContent)\n          .style(\"left\", (event.pageX -10 + (enlargedSize / 2)) + \"px\")\n          .style(\"top\", (event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", (event, d) => {\n        tooltip.transition()\n          .duration(100)\n          .style(\"opacity\", 0);\n        d3.select(event.currentTarget)\n          .transition().duration(100)\n          .attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n          .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n          .attr('width', size)\n          .attr('height', size)\n          .on(\"end\", function() { // Once the transition ends, reset pointer-events to auto\n            d3.select(this).style(\"pointer-events\", \"auto\");\n            // console.log(\"out\", d.image)\n            // if (d.image === currentImg) {\n            //   currentImg = '';\n            //   console.log(\"cu out\", currentImg)\n            // }\n          });\n      })\n\n    // Update existing circles\n    images.transition().ease(d3.easeLinear).duration(500)\n      .attr('cx', d => xScale(d[0]))\n      .attr('cy', d => yScale(d[1]));\n\n    images.exit().remove()\n    \n    // *️⃣ Disable lasso for now\n    // svg.call(lasso().on(\"start lasso end\", draw));\n    // draw(defaultLasso);\n\n\n\n\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n\n\n\n  }, [data, labels, width, height, colorCol, jitter]);\n\n  return (\n    <>\n\n      <svg ref={ref} width={width} height={height}></svg>\n      <div id='legend' style={{\n        position: 'fixed', top: '2%', left: '86%', width: '200px', backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',  // Drop shadow\n        borderRadius: '20px',                         // Curved edges\n        fontSize: '16px', // Larger font size for better readability\n        fontFamily: 'Perpetua',  // Setting the font family\n        overflowY: 'scroll'\n      }}>\n\n        <Legend stringToNumberMap={stringToNumberMap} colors={colors} />\n\n\n      </div>;\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}