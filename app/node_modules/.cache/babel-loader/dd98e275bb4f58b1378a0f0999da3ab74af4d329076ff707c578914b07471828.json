{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js\",\n  _s = $RefreshSig$();\nimport { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport papers from './datasets/papers.json';\nimport papers_labels from './datasets/papers_lbls.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ForceGraph() {\n  _s();\n  // gen a number persistent color from around the palette\n  const getColor = n => '#' + (n * 1234567 % Math.pow(2, 24)).toString(16).padStart(6, '0');\n  function nodePaint(node, color, ctx) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n    ctx.fill(); // circle\n  }\n\n  function nodeLabel(node, ctx, globalScale) {\n    const label = node.label;\n    const fontSize = 12 / globalScale;\n    ctx.font = `${fontSize}px Sans-Serif`;\n    const textWidth = ctx.measureText(label).width;\n    const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n    ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = getColor(node.id);\n    ctx.fillText(label, node.x, node.y);\n    node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n  }\n\n  let data = papers;\n  let labels = papers_labels;\n  let range = 1000;\n  let x = d3.scaleLinear().range([-range, range]),\n    y = d3.scaleLinear().range([-range, range]);\n  var d_extent_x = d3.extent(data['nodes'], d => +d['x']),\n    d_extent_y = d3.extent(data['nodes'], d => +d['y']);\n\n  // Draw axes\n  x.domain(d_extent_x);\n  y.domain(d_extent_y);\n  data['nodes'] = data['nodes'].map(function (e) {\n    e['x'] = x(+e['x']);\n    e['y'] = y(+e['y']);\n    return e;\n  });\n  data['links'] = data['links'].map(function (e) {\n    e['value'] = +e['value'];\n    return e;\n  });\n  console.log(data);\n  const forceRef = useRef(null);\n  useEffect(() => {\n    forceRef.current.d3Force(\"charge\").strength(0);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: data,\n      nodeLabel: \"id\",\n      nodeAutoColorBy: \"group\",\n      nodeRelSize: 8,\n      d3VelocityDecay: 0.95,\n      nodeOpacity: 0.01,\n      nodeLabel: \"name\",\n      nodeDesc: \"id\",\n      linkVisibility: true,\n      onNodeClick: node => {\n        console.log(node);\n      },\n      onLinkClick: link => {\n        console.log(link);\n        link['value'] = 50;\n      },\n      onNodeDragEnd: node => {\n        node.fx = node.x;\n        node.fy = node.y;\n        node.fz = node.z;\n      },\n      ref: forceRef,\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        if (node.label) {\n          nodeLabel(node, ctx, globalScale);\n        } else {\n          nodePaint(node, getColor(node.group), ctx);\n        }\n      },\n      nodePointerAreaPaint: (node, color, ctx) => {\n        ctx.fillStyle = color;\n        const bckgDimensions = node.__bckgDimensions;\n        bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ForceGraph, \"TxYESRtw+XzKUI1LiKhMBv+9Ljk=\");\n_c = ForceGraph;\nexport default ForceGraph;\nvar _c;\n$RefreshReg$(_c, \"ForceGraph\");","map":{"version":3,"names":["ForceGraph2D","React","useContext","useState","useRef","useEffect","d3","papers","papers_labels","jsxDEV","_jsxDEV","Fragment","_Fragment","ForceGraph","_s","getColor","n","Math","pow","toString","padStart","nodePaint","node","color","ctx","fillStyle","beginPath","arc","x","y","PI","fill","nodeLabel","globalScale","label","fontSize","font","textWidth","measureText","width","bckgDimensions","map","fillRect","textAlign","textBaseline","id","fillText","__bckgDimensions","data","labels","range","scaleLinear","d_extent_x","extent","d","d_extent_y","domain","e","console","log","forceRef","current","d3Force","strength","children","graphData","nodeAutoColorBy","nodeRelSize","d3VelocityDecay","nodeOpacity","nodeDesc","linkVisibility","onNodeClick","onLinkClick","link","onNodeDragEnd","fx","fy","fz","z","ref","nodeCanvasObject","group","nodePointerAreaPaint","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js"],"sourcesContent":["import { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport papers from './datasets/papers.json'\nimport papers_labels from './datasets/papers_lbls.json'\n\nfunction ForceGraph() {\n    // gen a number persistent color from around the palette\n    const getColor = n => '#' + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, '0');\n\n    function nodePaint(node, color, ctx) {\n        ctx.fillStyle = color;\n        ctx.beginPath(); ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false); ctx.fill();  // circle\n        \n      }\n    function nodeLabel(node, ctx, globalScale){\n            const label = node.label;\n            const fontSize = 12/globalScale;\n            ctx.font = `${fontSize}px Sans-Serif`;\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle =  getColor(node.id);\n            ctx.fillText(label, node.x, node.y);\n\n            node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n            \n    }\n    let data = papers\n    let labels = papers_labels\n    let range=1000\n\n\n\n        let x = d3.scaleLinear().range([-range,range]),\n        y = d3.scaleLinear().range([-range,range]);\n\n\n\n\n    var d_extent_x = d3.extent(data['nodes'], (d) => +d['x']),\n        d_extent_y = d3.extent(data['nodes'], (d) => +d['y']);\n\n    // Draw axes\n    x.domain(d_extent_x);\n    y.domain(d_extent_y);\n\n    data['nodes'] = data['nodes'].map(function(e){\n        e['x'] = x(+e['x'])\n        e['y'] = y(+e['y'])\n        return e;\n    });\n\n    data['links'] = data['links'].map(function(e){\n        e['value'] = +e['value']\n        return e;\n    });\n\n    console.log(data)\n\n    const forceRef = useRef(null);\n    useEffect(() => {\n        forceRef.current.d3Force(\"charge\").strength(0);\n    });\n    return (\n\n        <>\n\n\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel=\"id\"\n          nodeAutoColorBy=\"group\"\n          nodeRelSize={8}\n          d3VelocityDecay={0.95}\n          nodeOpacity ={0.01}\n          nodeLabel = {\"name\"}\n          nodeDesc = {\"id\"}\n          linkVisibility ={true}\n          onNodeClick =  {node=>{console.log(node)}}\n          onLinkClick =  {link=>{console.log(link);link['value'] = 50}}\n          onNodeDragEnd={node => {\n            node.fx = node.x;\n            node.fy = node.y;\n            node.fz = node.z;\n          }}\n          ref={forceRef}\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            if (node.label){\n                nodeLabel(node, ctx, globalScale)\n            }else{\n                nodePaint(node, getColor(node.group), ctx)\n            }\n          }}\n          nodePointerAreaPaint={(node, color, ctx) => {\n            ctx.fillStyle = color;\n            const bckgDimensions = node.__bckgDimensions;\n            bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n          }}\n          \n            />\n        </>\n      );\n    }\n    \n    export default ForceGraph;\n    \n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}