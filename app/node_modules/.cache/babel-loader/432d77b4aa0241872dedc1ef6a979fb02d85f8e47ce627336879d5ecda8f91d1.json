{"ast":null,"code":"import _defineProperty from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{ForceGraph2D}from\"react-force-graph\";import React,{useContext,useState,useRef,useEffect}from'react';import*as d3 from\"d3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ForceGraph(data){var _jsx2;data=data.data;// gen a number persistent color from around the palette\nvar getColor=function getColor(n){return'#'+(n*1234567%Math.pow(2,24)).toString(16).padStart(6,'0');};function nodePaint(node,color,ctx,size){ctx.fillStyle=color;ctx.beginPath();ctx.arc(node.x,node.y,size,0,2*Math.PI,false);ctx.fill();// circle\nctx.globalAlpha=0.8;ctx.fillStyle=\"rgba(0,0,0, 0.2)\";ctx.shadowColor=\"black\";ctx.shadowBlur=5;}function nodeLabel(node,ctx,globalScale){var label=node.label;var fontSize=12/globalScale;ctx.font=\"\".concat(fontSize,\"px Sans-Serif\");var textWidth=ctx.measureText(label).width;var bckgDimensions=[textWidth,fontSize].map(function(n){return n+fontSize*0.2;});// some padding\nctx.fillStyle='rgba(255, 255, 255, 0.1)';ctx.fillRect.apply(ctx,[node.x-bckgDimensions[0]/2,node.y-bckgDimensions[1]/2].concat(_toConsumableArray(bckgDimensions)));ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillStyle=\"black\";ctx.fillText(label,node.x,node.y);ctx.shadowColor=\"black\";ctx.shadowBlur=7;node.__bckgDimensions=bckgDimensions;// to re-use in nodePointerAreaPaint\n}var range=1400;var x=d3.scaleLinear().range([-range,range]),y=d3.scaleLinear().range([-range,range]);var d_extent_x=d3.extent(data['nodes'],function(d){return+d['x'];}),d_extent_y=d3.extent(data['nodes'],function(d){return+d['y'];});// Draw axes\nx.domain(d_extent_x);y.domain(d_extent_y);data['nodes']=data['nodes'].map(function(e){e['x']=x(+e['x']);e['y']=y(+e['y']);return e;});data['links']=data['links'].map(function(e){e['value']=+e['value'];return e;});console.log(data);var forceRef=useRef(null);useEffect(function(){forceRef.current.d3Force(\"charge\").strength(0);});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ForceGraph2D,(_jsx2={graphData:data,nodeLabel:\"id\",nodeAutoColorBy:\"group\",nodeRelSize:8,d3VelocityDecay:0.95,nodeOpacity:0.01},_defineProperty(_jsx2,\"nodeLabel\",\"name\"),_defineProperty(_jsx2,\"nodeDesc\",\"id\"),_defineProperty(_jsx2,\"linkWidth\",1.5),_defineProperty(_jsx2,\"linkVisibility\",true),_defineProperty(_jsx2,\"onNodeClick\",function onNodeClick(node){console.log(node);}),_defineProperty(_jsx2,\"onLinkClick\",function onLinkClick(link){console.log(link);link['value']=50;}),_defineProperty(_jsx2,\"ref\",forceRef),_defineProperty(_jsx2,\"nodeCanvasObject\",function nodeCanvasObject(node,ctx,globalScale){if(node.group){nodePaint(node,getColor(node.group),ctx,8);}else{nodeLabel(node,ctx,globalScale);}}),_defineProperty(_jsx2,\"onNodeDragEnd\",function onNodeDragEnd(node){node.fx=node.x;node.fy=node.y;node.fz=node.z;}),_jsx2))});}export default ForceGraph;","map":{"version":3,"names":["ForceGraph2D","React","useContext","useState","useRef","useEffect","d3","jsx","_jsx","Fragment","_Fragment","ForceGraph","data","_jsx2","getColor","n","Math","pow","toString","padStart","nodePaint","node","color","ctx","size","fillStyle","beginPath","arc","x","y","PI","fill","globalAlpha","shadowColor","shadowBlur","nodeLabel","globalScale","label","fontSize","font","concat","textWidth","measureText","width","bckgDimensions","map","fillRect","apply","_toConsumableArray","textAlign","textBaseline","fillText","__bckgDimensions","range","scaleLinear","d_extent_x","extent","d","d_extent_y","domain","e","console","log","forceRef","current","d3Force","strength","children","graphData","nodeAutoColorBy","nodeRelSize","d3VelocityDecay","nodeOpacity","_defineProperty","onNodeClick","onLinkClick","link","nodeCanvasObject","group","onNodeDragEnd","fx","fy","fz","z"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js"],"sourcesContent":["import { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\n\nfunction ForceGraph(data) {\n\n    data = data.data\n    // gen a number persistent color from around the palette\n    const getColor = n => '#' + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, '0');\n\n    function nodePaint(node, color, ctx, size) {\n        ctx.fillStyle = color;\n        ctx.beginPath(); ctx.arc(node.x, node.y, size, 0, 2 * Math.PI, false); ctx.fill();  // circle\n        ctx.globalAlpha   = 0.8;\n        ctx.fillStyle = \"rgba(0,0,0, 0.2)\";\n        ctx.shadowColor=\"black\";\n        ctx.shadowBlur=5;  \n      }\n    function nodeLabel(node, ctx, globalScale){\n            const label = node.label;\n            const fontSize = 12/globalScale;\n            ctx.font = `${fontSize}px Sans-Serif`;\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = \"black\";\n            ctx.fillText(label, node.x, node.y);\n            ctx.shadowColor=\"black\";\n            ctx.shadowBlur=7;\n\n            node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n            \n    }\n\n    let range=1400\n\n\n\n        let x = d3.scaleLinear().range([-range,range]),\n        y = d3.scaleLinear().range([-range,range]);\n\n\n\n\n    var d_extent_x = d3.extent(data['nodes'], (d) => +d['x']),\n        d_extent_y = d3.extent(data['nodes'], (d) => +d['y']);\n\n    // Draw axes\n    x.domain(d_extent_x);\n    y.domain(d_extent_y);\n\n    data['nodes'] = data['nodes'].map(function(e){\n        e['x'] = x(+e['x'])\n        e['y'] = y(+e['y'])\n        return e;\n    });\n\n    data['links'] = data['links'].map(function(e){\n        e['value'] = +e['value']\n        return e;\n    });\n\n    console.log(data)\n\n    const forceRef = useRef(null);\n    useEffect(() => {\n        forceRef.current.d3Force(\"charge\").strength(0);\n    });\n    return (\n\n        <>\n        \n\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel=\"id\"\n          nodeAutoColorBy=\"group\"\n          nodeRelSize={8}\n          d3VelocityDecay={0.95}\n          nodeOpacity ={0.01}\n          nodeLabel = {\"name\"}\n          nodeDesc = {\"id\"}\n          linkWidth={1.5}\n          //linkDirectionalParticles={4}\n          //linkDirectionalParticleWidth={1}\n          linkVisibility ={true}\n          onNodeClick =  {node=>{console.log(node)}}\n          onLinkClick =  {link=>{console.log(link);link['value'] = 50}}\n\n          ref={forceRef}\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            if (node.group){\n                nodePaint(node, getColor(node.group), ctx, 8)\n            }else{\n                nodeLabel(node, ctx, globalScale)\n            }\n          }}\n          onNodeDragEnd={node => {\n            node.fx = node.x;\n            node.fy = node.y;\n            node.fz = node.z;\n          }}\n          \n            />\n\n        </>\n      );\n    }\n    \n    export default ForceGraph;\n    \n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}