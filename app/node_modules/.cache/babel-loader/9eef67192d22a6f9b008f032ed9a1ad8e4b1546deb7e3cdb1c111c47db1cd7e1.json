{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScatterPlot() {\n  _s();\n  const [data, setData] = useState(generateRandomData());\n  const svgRef = useRef();\n  useEffect(() => {\n    drawScatterPlot();\n  }, [data]);\n  function generateRandomData() {\n    // Generate random data points\n    return Array.from({\n      length: 50\n    }, () => ({\n      x: Math.random() * 100,\n      y: Math.random() * 100\n    }));\n  }\n  function drawScatterPlot() {\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    // Scale functions\n    const xScale = d3.scaleLinear().domain([-5, 95]).range([0, width - 20]);\n    const yScale = d3.scaleLinear().domain([-5, 95]).range([height - 30, 0]);\n\n    // Bind data to circles\n    const circles = svg.selectAll('circle').data(data);\n\n    // Enter new circles\n    circles.enter().append('circle').attr('cx', d => xScale(d.x)).attr('cy', d => yScale(d.y)).attr('r', 5).style('fill', 'lightsteelblue').style('stroke-width', '0.5').style('stroke', 'black');\n    ;\n\n    // Update existing circles\n    circles.transition().duration(2000).attr('cx', d => xScale(d.x)).attr('cy', d => yScale(d.y));\n\n    // Remove old circles\n    circles.exit().remove();\n  }\n  function updateData() {\n    setData(generateRandomData());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 400,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateData,\n      children: \"Move Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ScatterPlot, \"LUWTlbN/toNFZ6GdS5V2i1Ksi2U=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","ScatterPlot","_s","data","setData","generateRandomData","svgRef","drawScatterPlot","Array","from","length","x","Math","random","y","svg","select","current","width","attr","height","xScale","scaleLinear","domain","range","yScale","circles","selectAll","enter","append","d","style","transition","duration","exit","remove","updateData","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/test.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction ScatterPlot() {\n    const [data, setData] = useState(generateRandomData());\n    const svgRef = useRef();\n\n    useEffect(() => {\n        drawScatterPlot();\n    }, [data]);\n\n    function generateRandomData() {\n        // Generate random data points\n        return Array.from({ length: 50 }, () => ({\n            x: Math.random() * 100,\n            y: Math.random() * 100\n        }));\n    }\n\n    function drawScatterPlot() {\n        const svg = d3.select(svgRef.current);\n        const width = +svg.attr('width');\n        const height = +svg.attr('height');\n\n        // Scale functions\n        const xScale = d3.scaleLinear().domain([-5, 95]).range([0, width-20]);\n        const yScale = d3.scaleLinear().domain([-5, 95]).range([height-30, 0]);\n\n        // Bind data to circles\n        const circles = svg.selectAll('circle').data(data);\n\n        // Enter new circles\n        circles.enter().append('circle')\n            .attr('cx', d => xScale(d.x))\n            .attr('cy', d => yScale(d.y))\n            .attr('r', 5)\n            .style('fill', 'lightsteelblue')\n            .style('stroke-width', '0.5')\n            .style('stroke', 'black');\n            ;\n\n        // Update existing circles\n        circles.transition().duration(2000)\n            .attr('cx', d => xScale(d.x))\n            .attr('cy', d => yScale(d.y));\n\n        // Remove old circles\n        circles.exit().remove();\n    }\n\n    function updateData() {\n        setData(generateRandomData());\n    }\n\n    return (\n        <div>\n            <svg ref={svgRef} width={400} height={400}></svg>\n            <button onClick={updateData}>Move Points</button>\n        </div>\n    );\n}\n\nexport default ScatterPlot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}