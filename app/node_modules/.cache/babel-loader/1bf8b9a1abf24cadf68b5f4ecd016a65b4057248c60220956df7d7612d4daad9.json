{"ast":null,"code":"/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls',\n  MAX_DELTA = 0.2,\n  // ms\n  EPS = 10e-6;\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n  schema: {\n    enabled: {\n      default: true\n    },\n    controls: {\n      default: ['gamepad', 'trackpad', 'keyboard', 'touch']\n    },\n    speed: {\n      default: 0.3,\n      min: 0\n    },\n    fly: {\n      default: false\n    },\n    constrainToNavMesh: {\n      default: false\n    },\n    camera: {\n      default: '[movement-controls] [camera]',\n      type: 'selector'\n    }\n  },\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n    this.velocityCtrl = null;\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    const nav = el.sceneEl.systems.nav;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (nav && data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      data.constrainToNavMesh ? nav.addAgent(this) : nav.removeAgent(this);\n    }\n  },\n  injectControls: function () {\n    const data = this.data;\n    var name;\n    for (let i = 0; i < data.controls.length; i++) {\n      name = data.controls[i] + COMPONENT_SUFFIX;\n      if (!this.el.components[name]) {\n        this.el.setAttribute(name, '');\n      }\n    }\n  },\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n    return function (t, dt) {\n      if (!dt) return;\n      const el = this.el;\n      const data = this.data;\n      if (!data.enabled) return;\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n      if (data.constrainToNavMesh && velocityCtrl.isNavMeshConstrained !== false) {\n        if (velocity.lengthSq() < EPS) return;\n        start.copy(el.object3D.position);\n        end.copy(velocity).multiplyScalar(dt / 1000).add(start);\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n    };\n  }(),\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n  updateVelocity: function () {\n    const vector2 = new THREE.Vector2();\n    const quaternion = new THREE.Quaternion();\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n      if (dVelocity && data.enabled) {\n        const cameraEl = data.camera;\n\n        // Rotate to heading\n        quaternion.copy(cameraEl.object3D.quaternion);\n        quaternion.premultiply(el.object3D.quaternion);\n        dVelocity.applyQuaternion(quaternion);\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * 16.66667);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * 16.66667);\n          velocity.x = vector2.x;\n          velocity.z = vector2.y;\n        }\n      }\n    };\n  }()\n});","map":{"version":3,"names":["COMPONENT_SUFFIX","MAX_DELTA","EPS","module","exports","AFRAME","registerComponent","dependencies","schema","enabled","default","controls","speed","min","fly","constrainToNavMesh","camera","type","init","el","velocityCtrl","velocity","THREE","Vector3","heading","Quaternion","navGroup","navNode","sceneEl","hasLoaded","injectControls","addEventListener","bind","update","prevData","data","nav","systems","addAgent","removeAgent","name","i","length","components","setAttribute","updateNavLocation","tick","start","end","clampedEnd","t","dt","updateVelocityCtrl","set","updateVelocity","isNavMeshConstrained","lengthSq","copy","object3D","position","multiplyScalar","add","getGroup","getNode","clampStep","hasAttribute","x","y","z","l","control","isVelocityActive","vector2","Vector2","quaternion","dVelocity","getVelocityDelta","getVelocity","getPositionDelta","Error","getAttribute","cameraEl","premultiply","applyQuaternion","factor","setLength"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/aframe-extras/src/controls/movement-controls.js"],"sourcesContent":["/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls',\n    MAX_DELTA = 0.2, // ms\n    EPS = 10e-6;\n\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n\n  schema: {\n    enabled:            { default: true },\n    controls:           { default: ['gamepad', 'trackpad', 'keyboard', 'touch'] },\n    speed:              { default: 0.3, min: 0 },\n    fly:                { default: false },\n    constrainToNavMesh: { default: false },\n    camera:             { default: '[movement-controls] [camera]', type: 'selector' }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n\n    this.velocityCtrl = null;\n\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    const nav = el.sceneEl.systems.nav;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (nav && data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      data.constrainToNavMesh\n        ? nav.addAgent(this)\n        : nav.removeAgent(this);\n    }\n  },\n\n  injectControls: function () {\n    const data = this.data;\n    var name;\n\n    for (let i = 0; i < data.controls.length; i++) {\n      name = data.controls[i] + COMPONENT_SUFFIX;\n      if (!this.el.components[name]) {\n        this.el.setAttribute(name, '');\n      }\n    }\n  },\n\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: (function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n\n    return function (t, dt) {\n      if (!dt) return;\n\n      const el = this.el;\n      const data = this.data;\n\n      if (!data.enabled) return;\n\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n\n      if (data.constrainToNavMesh\n          && velocityCtrl.isNavMeshConstrained !== false) {\n\n        if (velocity.lengthSq() < EPS) return;\n\n        start.copy(el.object3D.position);\n        end\n          .copy(velocity)\n          .multiplyScalar(dt / 1000)\n          .add(start);\n\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n\n    };\n  }()),\n\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n\n  updateVelocity: (function () {\n    const vector2 = new THREE.Vector2();\n    const quaternion = new THREE.Quaternion();\n\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n\n      if (dVelocity && data.enabled) {\n        const cameraEl = data.camera;\n\n        // Rotate to heading\n        quaternion.copy(cameraEl.object3D.quaternion);\n        quaternion.premultiply(el.object3D.quaternion);\n        dVelocity.applyQuaternion(quaternion);\n\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * 16.66667);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * 16.66667);\n          velocity.x = vector2.x;\n          velocity.z = vector2.y;\n        }\n      }\n    };\n\n  }())\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,gBAAgB,GAAG,WAAW;EAChCC,SAAS,GAAG,GAAG;EAAE;EACjBC,GAAG,GAAG,KAAK;AAEfC,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,iBAAiB,CAAC,mBAAmB,EAAE;EAE7D;AACF;AACA;;EAEEC,YAAY,EAAE,CAAC,UAAU,CAAC;EAE1BC,MAAM,EAAE;IACNC,OAAO,EAAa;MAAEC,OAAO,EAAE;IAAK,CAAC;IACrCC,QAAQ,EAAY;MAAED,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO;IAAE,CAAC;IAC7EE,KAAK,EAAe;MAAEF,OAAO,EAAE,GAAG;MAAEG,GAAG,EAAE;IAAE,CAAC;IAC5CC,GAAG,EAAiB;MAAEJ,OAAO,EAAE;IAAM,CAAC;IACtCK,kBAAkB,EAAE;MAAEL,OAAO,EAAE;IAAM,CAAC;IACtCM,MAAM,EAAc;MAAEN,OAAO,EAAE,8BAA8B;MAAEO,IAAI,EAAE;IAAW;EAClF,CAAC;EAED;AACF;AACA;;EAEEC,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,MAAMC,EAAE,GAAG,IAAI,CAACA,EAAE;IAElB,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,QAAQ,GAAG,IAAIC,KAAK,CAACC,OAAO,CAAC,CAAC;IACnC,IAAI,CAACC,OAAO,GAAG,IAAIF,KAAK,CAACG,UAAU,CAAC,CAAC;;IAErC;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAIR,EAAE,CAACS,OAAO,CAACC,SAAS,EAAE;MACxB,IAAI,CAACC,cAAc,CAAC,CAAC;IACvB,CAAC,MAAM;MACLX,EAAE,CAACS,OAAO,CAACG,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACD,cAAc,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE;EACF,CAAC;EAEDC,MAAM,EAAE,SAAAA,CAAUC,QAAQ,EAAE;IAC1B,MAAMf,EAAE,GAAG,IAAI,CAACA,EAAE;IAClB,MAAMgB,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,MAAMC,GAAG,GAAGjB,EAAE,CAACS,OAAO,CAACS,OAAO,CAACD,GAAG;IAClC,IAAIjB,EAAE,CAACS,OAAO,CAACC,SAAS,EAAE;MACxB,IAAI,CAACC,cAAc,CAAC,CAAC;IACvB;IACA,IAAIM,GAAG,IAAID,IAAI,CAACpB,kBAAkB,KAAKmB,QAAQ,CAACnB,kBAAkB,EAAE;MAClEoB,IAAI,CAACpB,kBAAkB,GACnBqB,GAAG,CAACE,QAAQ,CAAC,IAAI,CAAC,GAClBF,GAAG,CAACG,WAAW,CAAC,IAAI,CAAC;IAC3B;EACF,CAAC;EAEDT,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,MAAMK,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,IAAIK,IAAI;IAER,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACxB,QAAQ,CAAC+B,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7CD,IAAI,GAAGL,IAAI,CAACxB,QAAQ,CAAC8B,CAAC,CAAC,GAAGzC,gBAAgB;MAC1C,IAAI,CAAC,IAAI,CAACmB,EAAE,CAACwB,UAAU,CAACH,IAAI,CAAC,EAAE;QAC7B,IAAI,CAACrB,EAAE,CAACyB,YAAY,CAACJ,IAAI,EAAE,EAAE,CAAC;MAChC;IACF;EACF,CAAC;EAEDK,iBAAiB,EAAE,SAAAA,CAAA,EAAY;IAC7B,IAAI,CAACnB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB,CAAC;EAED;AACF;AACA;;EAEEmB,IAAI,EAAG,YAAY;IACjB,MAAMC,KAAK,GAAG,IAAIzB,KAAK,CAACC,OAAO,CAAC,CAAC;IACjC,MAAMyB,GAAG,GAAG,IAAI1B,KAAK,CAACC,OAAO,CAAC,CAAC;IAC/B,MAAM0B,UAAU,GAAG,IAAI3B,KAAK,CAACC,OAAO,CAAC,CAAC;IAEtC,OAAO,UAAU2B,CAAC,EAAEC,EAAE,EAAE;MACtB,IAAI,CAACA,EAAE,EAAE;MAET,MAAMhC,EAAE,GAAG,IAAI,CAACA,EAAE;MAClB,MAAMgB,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAI,CAACA,IAAI,CAAC1B,OAAO,EAAE;MAEnB,IAAI,CAAC2C,kBAAkB,CAAC,CAAC;MACzB,MAAMhC,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,MAAMC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAI,CAACD,YAAY,EAAE;;MAEnB;MACA,IAAI+B,EAAE,GAAG,IAAI,GAAGlD,SAAS,EAAE;QACzBoB,QAAQ,CAACgC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACvB,CAAC,MAAM;QACL,IAAI,CAACC,cAAc,CAACH,EAAE,CAAC;MACzB;MAEA,IAAIhB,IAAI,CAACpB,kBAAkB,IACpBK,YAAY,CAACmC,oBAAoB,KAAK,KAAK,EAAE;QAElD,IAAIlC,QAAQ,CAACmC,QAAQ,CAAC,CAAC,GAAGtD,GAAG,EAAE;QAE/B6C,KAAK,CAACU,IAAI,CAACtC,EAAE,CAACuC,QAAQ,CAACC,QAAQ,CAAC;QAChCX,GAAG,CACAS,IAAI,CAACpC,QAAQ,CAAC,CACduC,cAAc,CAACT,EAAE,GAAG,IAAI,CAAC,CACzBU,GAAG,CAACd,KAAK,CAAC;QAEb,MAAMX,GAAG,GAAGjB,EAAE,CAACS,OAAO,CAACS,OAAO,CAACD,GAAG;QAClC,IAAI,CAACV,QAAQ,GAAG,IAAI,CAACA,QAAQ,KAAK,IAAI,GAAGU,GAAG,CAAC0B,QAAQ,CAACf,KAAK,CAAC,GAAG,IAAI,CAACrB,QAAQ;QAC5E,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,IAAIS,GAAG,CAAC2B,OAAO,CAAChB,KAAK,EAAE,IAAI,CAACrB,QAAQ,CAAC;QAChE,IAAI,CAACC,OAAO,GAAGS,GAAG,CAAC4B,SAAS,CAACjB,KAAK,EAAEC,GAAG,EAAE,IAAI,CAACtB,QAAQ,EAAE,IAAI,CAACC,OAAO,EAAEsB,UAAU,CAAC;QACjF9B,EAAE,CAACuC,QAAQ,CAACC,QAAQ,CAACF,IAAI,CAACR,UAAU,CAAC;MACvC,CAAC,MAAM,IAAI9B,EAAE,CAAC8C,YAAY,CAAC,UAAU,CAAC,EAAE;QACtC9C,EAAE,CAACyB,YAAY,CAAC,UAAU,EAAEvB,QAAQ,CAAC;MACvC,CAAC,MAAM;QACLF,EAAE,CAACuC,QAAQ,CAACC,QAAQ,CAACO,CAAC,IAAI7C,QAAQ,CAAC6C,CAAC,GAAGf,EAAE,GAAG,IAAI;QAChDhC,EAAE,CAACuC,QAAQ,CAACC,QAAQ,CAACQ,CAAC,IAAI9C,QAAQ,CAAC8C,CAAC,GAAGhB,EAAE,GAAG,IAAI;QAChDhC,EAAE,CAACuC,QAAQ,CAACC,QAAQ,CAACS,CAAC,IAAI/C,QAAQ,CAAC+C,CAAC,GAAGjB,EAAE,GAAG,IAAI;MAClD;IAEF,CAAC;EACH,CAAC,CAAC,CAAE;EAEJ;AACF;AACA;;EAEEC,kBAAkB,EAAE,SAAAA,CAAA,EAAY;IAC9B,MAAMjB,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,IAAIA,IAAI,CAAC1B,OAAO,EAAE;MAChB,KAAK,IAAIgC,CAAC,GAAG,CAAC,EAAE4B,CAAC,GAAGlC,IAAI,CAACxB,QAAQ,CAAC+B,MAAM,EAAED,CAAC,GAAG4B,CAAC,EAAE5B,CAAC,EAAE,EAAE;QACpD,MAAM6B,OAAO,GAAG,IAAI,CAACnD,EAAE,CAACwB,UAAU,CAACR,IAAI,CAACxB,QAAQ,CAAC8B,CAAC,CAAC,GAAGzC,gBAAgB,CAAC;QACvE,IAAIsE,OAAO,IAAIA,OAAO,CAACC,gBAAgB,CAAC,CAAC,EAAE;UACzC,IAAI,CAACnD,YAAY,GAAGkD,OAAO;UAC3B;QACF;MACF;MACA,IAAI,CAAClD,YAAY,GAAG,IAAI;IAC1B;EACF,CAAC;EAEDkC,cAAc,EAAG,YAAY;IAC3B,MAAMkB,OAAO,GAAG,IAAIlD,KAAK,CAACmD,OAAO,CAAC,CAAC;IACnC,MAAMC,UAAU,GAAG,IAAIpD,KAAK,CAACG,UAAU,CAAC,CAAC;IAEzC,OAAO,UAAU0B,EAAE,EAAE;MACnB,IAAIwB,SAAS;MACb,MAAMxD,EAAE,GAAG,IAAI,CAACA,EAAE;MAClB,MAAMmD,OAAO,GAAG,IAAI,CAAClD,YAAY;MACjC,MAAMC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMc,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAImC,OAAO,EAAE;QACX,IAAIA,OAAO,CAACM,gBAAgB,EAAE;UAC5BD,SAAS,GAAGL,OAAO,CAACM,gBAAgB,CAACzB,EAAE,CAAC;QAC1C,CAAC,MAAM,IAAImB,OAAO,CAACO,WAAW,EAAE;UAC9BxD,QAAQ,CAACoC,IAAI,CAACa,OAAO,CAACO,WAAW,CAAC,CAAC,CAAC;UACpC;QACF,CAAC,MAAM,IAAIP,OAAO,CAACQ,gBAAgB,EAAE;UACnCzD,QAAQ,CAACoC,IAAI,CAACa,OAAO,CAACQ,gBAAgB,CAAC3B,EAAE,CAAC,CAACS,cAAc,CAAC,IAAI,GAAGT,EAAE,CAAC,CAAC;UACrE;QACF,CAAC,MAAM;UACL,MAAM,IAAI4B,KAAK,CAAC,kCAAkC,EAAET,OAAO,CAAC;QAC9D;MACF;MAEA,IAAInD,EAAE,CAAC8C,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC9B,IAAI,CAACpB,kBAAkB,EAAE;QAC3DM,QAAQ,CAACoC,IAAI,CAAC,IAAI,CAACtC,EAAE,CAAC6D,YAAY,CAAC,UAAU,CAAC,CAAC;MACjD;MAEA,IAAIL,SAAS,IAAIxC,IAAI,CAAC1B,OAAO,EAAE;QAC7B,MAAMwE,QAAQ,GAAG9C,IAAI,CAACnB,MAAM;;QAE5B;QACA0D,UAAU,CAACjB,IAAI,CAACwB,QAAQ,CAACvB,QAAQ,CAACgB,UAAU,CAAC;QAC7CA,UAAU,CAACQ,WAAW,CAAC/D,EAAE,CAACuC,QAAQ,CAACgB,UAAU,CAAC;QAC9CC,SAAS,CAACQ,eAAe,CAACT,UAAU,CAAC;QAErC,MAAMU,MAAM,GAAGT,SAAS,CAACjC,MAAM,CAAC,CAAC;QACjC,IAAIP,IAAI,CAACrB,GAAG,EAAE;UACZO,QAAQ,CAACoC,IAAI,CAACkB,SAAS,CAAC;UACxBtD,QAAQ,CAACuC,cAAc,CAAC,IAAI,CAACzB,IAAI,CAACvB,KAAK,GAAG,QAAQ,CAAC;QACrD,CAAC,MAAM;UACL4D,OAAO,CAACnB,GAAG,CAACsB,SAAS,CAACT,CAAC,EAAES,SAAS,CAACP,CAAC,CAAC;UACrCI,OAAO,CAACa,SAAS,CAACD,MAAM,GAAG,IAAI,CAACjD,IAAI,CAACvB,KAAK,GAAG,QAAQ,CAAC;UACtDS,QAAQ,CAAC6C,CAAC,GAAGM,OAAO,CAACN,CAAC;UACtB7C,QAAQ,CAAC+C,CAAC,GAAGI,OAAO,CAACL,CAAC;QACxB;MACF;IACF,CAAC;EAEH,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}