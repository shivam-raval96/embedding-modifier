{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata_img.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport sprite from './datasets/spritesheet.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nfunction getPieDistribution(data, labels) {\n  let distribution = {};\n  for (let i = 0; i < labels.length; i++) {\n    let label = labels[i];\n    let item = data[i];\n    if (!distribution[label]) {\n      distribution[label] = {};\n    }\n    if (!distribution[label][item]) {\n      distribution[label][item] = 0;\n    }\n    distribution[label][item]++;\n  }\n  return distribution;\n}\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    jitter\n  } = props;\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([]);\n  const defaultLasso = [[0, 0]];\n  useEffect(() => {\n    data.forEach((d, i) => {\n      d.id = i;\n    });\n    const svg = d3.select(ref.current);\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n    function draw(polygon) {\n      //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n      // selectioncontent\n      // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n      //var content = '<table>'\n\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\";\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n      const selected = [];\n\n      // note: d3.polygonContains uses the even-odd rule\n      // which is reflected in the CSS for the lasso shape\n      images.classed(\"selected\", polygon.length > 2 ? d => {\n        d3.polygonContains(polygon, [xScale(d[0]), yScale(d[1])]) && selected.push(d);\n      } //&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n      : false);\n      //content += '</table>'\n\n      /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n          console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n          content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n      }*/\n\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n      // These two functions need no customization.\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border = '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          var dIsInSubset = d.id == id;\n          return dIsInSubset ? r_big : r_small;\n        });\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        //row.style.backgroundColor = TableBackgroundNormalColor; \n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n      }\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = `<td>${d[2]}</td>`;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]], 0.4);\n\n        //tr.addEventListener('mouseover', () => console.log(d));\n        tr.addEventListener('mouseover', () => {\n          console.log(d);\n          ChangeBackgroundColor(tr, d.id);\n        });\n        tr.addEventListener('mouseout', () => {\n          console.log(d);\n          RestoreBackgroundColor(tr);\n        });\n        table.appendChild(tr);\n      });\n      svg.value = {\n        polygon,\n        selected\n      };\n\n      //selectioncontent.html(content)\n      //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n    }\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      var stringToNumberMap = encodeArray(array);\n    } else {\n      var array = getColumn(data, 3);\n      var stringToNumberMap = encodeArray(getColumn(data, 3));\n    }\n    var color_idx = getEncodedArray(array, stringToNumberMap);\n    let result = getPieDistribution(getColumn(data, colorCol), getColumn(data, 3));\n    console.log(colorCol, stringToNumberMap);\n\n    // Bind data to circles\n    /*const circles = svg.selectAll('circle').data(data);\n     // Enter new circles\n    circles.enter().append('circle')\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]))\n        .attr('r', r_small)\n       .style(\"opacity\", 0.9)\n       .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n       .attr('stroke', 'black')  // Add this line for the boundary color\n       .attr('stroke-width', 0.5)  // Add this line for the boundary width\n       .style(\"z-index\", 2)\n       .on(\"mouseover\", (event, d) => {\n            svg.selectAll('circle')\n           .transition().duration(100)\n           .style(\"opacity\", 0.9) \n           .attr('stroke-width', 0.5) \n           .attr('r', r_small);\n           d3.select(event.currentTarget).transition().duration(100)\n               .style(\"opacity\", 1) \n               .attr('stroke-width', 0.5)  // Add this line for the boundary width\n               .attr('r', r_big);\n              tooltip.transition()\n               .duration(100)\n               .style(\"opacity\", .9);\n           tooltip.html(d[2])\n               .style(\"left\", (event.pageX + 5) + \"px\")\n               .style(\"top\", (event.pageY - 28) + \"px\");\n       })\n       .on(\"mouseout\", (d) => {\n           tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n       })\n     // Update existing circles\n    circles.attr('fill', (d,i) =>  colors[color_idx[i]%10]).transition().ease(d3.easeLinear).duration(1500)\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]));\n     // Remove old circles\n    circles.exit().remove();*/\n\n    // Assuming each image is 450x450 with 50 padding, total 550x550 per image\n    const imageSize = 450; // Size of the actual image\n    const padding = 50; // Padding around the image\n    const totalSize = imageSize + padding; // Total size including padding\n\n    // Step 1: Define clipPaths for each sprite image\n    const defs = svg.select('defs').empty() ? svg.append('defs') : svg.select('defs');\n    defs.selectAll('clipPath').data(data).enter().append('clipPath').attr('id', (d, i) => `clip-${i}`).append('rect').attr('width', imageSize).attr('height', imageSize).attr('x', (d, i) => {\n      const column = i % 10; // Adjust based on your sprite layout\n      return column * totalSize;\n    }).attr('y', (d, i) => {\n      const row = Math.floor(i / 10); // Adjust based on your sprite layout\n      return row * totalSize;\n    });\n\n    // Step 2: Bind data to images and use clip-path with the defined clipPaths\n    const images = svg.selectAll('image').data(data);\n    images.enter().append('image').attr('xlink:href', sprite).attr('x', d => xScale(d[0]) - imageSize / 2).attr('y', d => yScale(d[1]) - imageSize / 2).attr('width', imageSize).attr('height', imageSize).attr('clip-path', (d, i) => `url(#clip-${i})`);\n    svg.call(lasso().on(\"start lasso end\", draw));\n    draw(defaultLasso);\n\n    // Bind data to text elements and add labels\n\n    svg.selectAll('text.label').data(labels).enter().append('text').attr('class', 'label').attr('fill', 'black').attr('x', d => xScale(d[0])).attr('y', d => yScale(d[1])).attr('dy', '.35em').attr('text-anchor', 'middle').attr('opacity', 0).text((d, i) => `Cluster ${i}`).attr('stroke', 'black').attr('stroke-width', '0.3px').attr('font-size', '28px').attr('font-weight', '500').transition().duration(1000).attr('opacity', 1);\n    var labeldata_all = [];\n    for (const [label, value] of Object.entries(result)) {\n      var piedata = [];\n      var i = 0;\n      for (const [key, count] of Object.entries(value)) {\n        piedata.push({\n          title: key,\n          value: count,\n          color: colors[stringToNumberMap[key]]\n        });\n        i += 1;\n      }\n      labeldata_all.push(piedata);\n    }\n    var pies = [];\n    labeldata_all.forEach((e, i) => {\n      pies.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'relative',\n            top: '40px',\n            left: '20px'\n          },\n          children: [\"Cluster \", i]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          data: e,\n          label: ({\n            dataEntry\n          }) => dataEntry.title,\n          labelStyle: index => ({\n            fontSize: '8px',\n            fontFamily: 'sans-serif'\n          }),\n          center: [65, 50],\n          radius: 20,\n          labelPosition: 120\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 97\n        }, this)]\n      }, void 0, true));\n    });\n    setPieCharts(pies);\n    console.log(array);\n  }, [data, labels, width, height, colorCol, jitter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend\",\n      style: {\n        position: 'fixed',\n        top: '2%',\n        left: '86%',\n        width: '200px',\n        height: '95%',\n        backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',\n        // Drop shadow\n        borderRadius: '20px',\n        // Curved edges\n        fontFamily: 'Perpetua',\n        // Setting the font family\n        overflowY: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px'\n        },\n        children: pieCharts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"ImE97drHzRNGYqV6cl4XwSY/aDM=\");\n_c = Scatterplot;\nexport default Scatterplot;\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","sprite","jsxDEV","_jsxDEV","Fragment","_Fragment","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","getPieDistribution","data","labels","distribution","i","length","label","item","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","width","height","colorCol","jitter","margin","top","left","right","bottom","ref","pieCharts","setPieCharts","defaultLasso","d","svg","current","lasso","dispatch","selection","node","polygon","preventDefault","p","call","push","type","_","arguments","selectAll","remove","path","geoPath","l","append","attr","text","draw","table","document","getElementById","innerHTML","datum","coordinates","style","selected","images","classed","polygonContains","xScale","yScale","TableBackgroundNormalColor","TableBackgroundMouseoverColor","ChangeBackgroundColor","row","backgroundColor","replace","border","transition","dIsInSubset","RestoreBackgroundColor","tr","createElement","color_idx","addEventListener","console","log","appendChild","value","scaleLinear","domain","range","tooltip","contours","contourDensity","y","size","bandwidth","thresholds","result","imageSize","padding","totalSize","defs","empty","enter","column","floor","duration","labeldata_all","Object","entries","piedata","key","count","title","pies","children","position","fileName","_jsxFileName","lineNumber","columnNumber","dataEntry","labelStyle","index","fontSize","fontFamily","center","radius","labelPosition","boxShadow","borderRadius","overflowY","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata_img.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport sprite from './datasets/spritesheet.jpg'\n\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n    \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \n    \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \n    \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \n    \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n    \"#d62728\", \"#bcbd22\",\"#000000\",\"#17becf\", \"#FFD700\",\"#9467bd\",\n     \"#808080\",\"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\",\"#e377c2\"\n]\nfunction addAlpha(color, opacity) {\n    // coerce values so ti is between 0 and 1.\n    var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n    return color.slice(0,7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n    // Step 1: Identify unique strings\n    const uniqueStrings = new Set(array);\n\n\n    // Step 2: Map strings to numbers\n    const stringToNumberMap = {};\n    let number = 0;\n    uniqueStrings.forEach(str => {\n        stringToNumberMap[str] = number++;\n    });\n\n    // Step 3: Generate encoded array\n    return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap){\n\n    return array.map(str => stringToNumberMap[str]);\n\n}\n\nfunction getPieDistribution(data, labels) {\n    let distribution = {};\n\n    for (let i = 0; i < labels.length; i++) {\n        let label = labels[i];\n        let item = data[i];\n\n        if (!distribution[label]) {\n            distribution[label] = {};\n        }\n\n        if (!distribution[label][item]) {\n            distribution[label][item] = 0;\n        }\n\n        distribution[label][item]++;\n    }\n\n    return distribution;\n}\n\nfunction trackPointer(e, { start, move, out, end }) {\n    const tracker = {},\n      id = (tracker.id = e.pointerId),\n      target = e.target;\n    tracker.point = d3.pointer(e, target);\n    target.setPointerCapture(id);\n  \n    d3.select(target)\n      .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        d3.select(target).on(`.${id}`, null);\n        target.releasePointerCapture(id);\n        end && end(tracker);\n      })\n      .on(`pointermove.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.prev = tracker.point;\n        tracker.point = d3.pointer(e, target);\n        move && move(tracker);\n      })\n      .on(`pointerout.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.point = null;\n        out && out(tracker);\n      });\n  \n    start && start(tracker);\n  }\n\n\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data , labels, colorCol, jitter} = props;\n  const margin = {top:100, left:120, right:80, bottom:100}\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([])\n  const defaultLasso = [[0,0]]\n\n  useEffect(() => {\n    data.forEach((d,i)=>{d.id = i})\n    const svg = d3.select(ref.current);\n\n\n    function lasso() {\n        const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n        const lasso = function(selection) {\n          const node = selection.node();\n          const polygon = [];\n      \n          selection\n            .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n            .on(\"pointerdown\", e => {\n              trackPointer(e, {\n                start: p => {\n                  polygon.length = 0;\n                  dispatch.call(\"start\", node, polygon);\n                },\n                move: p => {\n                  polygon.push(p.point);\n                  dispatch.call(\"lasso\", node, polygon);\n                },\n                end: p => {\n                  dispatch.call(\"end\", node, polygon);\n                }\n              });\n            });\n        };\n        lasso.on = function(type, _) {\n          return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n        };\n      \n        return lasso;\n      }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n    \n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n    function draw(polygon) {\n        //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n        // selectioncontent\n       // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n        //var content = '<table>'\n\n        let table = document.getElementById(\"myTable\");\n        table.innerHTML = \"\";\n\n        l.datum({\n          type: \"LineString\",\n          coordinates: polygon\n        }).attr(\"d\", path).style('z-index',-10);\n    \n        const selected = [];\n    \n        // note: d3.polygonContains uses the even-odd rule\n        // which is reflected in the CSS for the lasso shape\n        images.classed(\n          \"selected\",\n          polygon.length > 2\n            ? d => {d3.polygonContains(polygon, [xScale(d[0]),yScale(d[1])]) && selected.push(d) }//&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n            : false\n        );\n        //content += '</table>'\n\n        /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n            console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n            content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n        }*/\n\n        var TableBackgroundNormalColor = \"#ffffff\";\n        var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n        // These two functions need no customization.\n        function ChangeBackgroundColor(row,id) { \n            row.style.backgroundColor =  row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n\n            row.style.border= '1px solid black !important'\n\n            svg.selectAll('circle').transition(100).attr(\"r\", function(d) {\n                var dIsInSubset = d.id == id;\n                return dIsInSubset ? r_big : r_small\n              })\n        \n        }\n        function RestoreBackgroundColor(row) { \n            row.style.backgroundColor =  row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n            //row.style.backgroundColor = TableBackgroundNormalColor; \n            svg.selectAll('circle').transition(100).attr(\"r\", r_small)\n        }\n\n        selected.forEach(d=>{\n            let tr = document.createElement(\"tr\");\n            tr.innerHTML =`<td>${d[2]}</td>`;\n            tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]],0.4)\n\n            //tr.addEventListener('mouseover', () => console.log(d));\n            tr.addEventListener('mouseover', () => {console.log(d);ChangeBackgroundColor(tr,d.id)});\n            tr.addEventListener('mouseout', () => {console.log(d);RestoreBackgroundColor(tr)});\n\n            table.appendChild(tr);\n\n        })\n        svg.value = { polygon, selected };\n\n        //selectioncontent.html(content)\n        //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n\n\n\n      }\n    \n\n    \n\n    \n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width-margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height-margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"margin-right\", \"50px\")\n        .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n    .size([width, height])\n    .bandwidth(40)\n    .thresholds(3)\n    (data);\n\n\n\n    \n    //SetcolorCol\n    if (colorCol!=-1){\n        var array = getColumn(data,colorCol)\n        var stringToNumberMap = encodeArray(array);\n\n\n    }else{\n        var array = getColumn(data,3)\n        var stringToNumberMap= encodeArray(getColumn(data,3))\n\n    }\n\n\n\n    var color_idx = getEncodedArray(array, stringToNumberMap)\n\n    let result = getPieDistribution(getColumn(data,colorCol), getColumn(data,3));\n\n    console.log(colorCol,stringToNumberMap)\n\n     // Bind data to circles\n     /*const circles = svg.selectAll('circle').data(data);\n\n     // Enter new circles\n     circles.enter().append('circle')\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]))\n         .attr('r', r_small)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .style(\"z-index\", 2)\n        .on(\"mouseover\", (event, d) => {\n\n            svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            .attr('r', r_small);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width\n                .attr('r', r_big);\n\n\n\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        })\n\n     // Update existing circles\n     circles.attr('fill', (d,i) =>  colors[color_idx[i]%10]).transition().ease(d3.easeLinear).duration(1500)\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]));\n\n     // Remove old circles\n     circles.exit().remove();*/\n\n     // Assuming each image is 450x450 with 50 padding, total 550x550 per image\n    const imageSize = 450; // Size of the actual image\n    const padding = 50; // Padding around the image\n    const totalSize = imageSize + padding; // Total size including padding\n\n\n    // Step 1: Define clipPaths for each sprite image\n    const defs = svg.select('defs').empty() ? svg.append('defs') : svg.select('defs');\n    defs.selectAll('clipPath').data(data).enter().append('clipPath')\n      .attr('id', (d, i) => `clip-${i}`)\n      .append('rect')\n      .attr('width', imageSize)\n      .attr('height', imageSize)\n      .attr('x', (d, i) => {\n        const column = i % 10; // Adjust based on your sprite layout\n        return column * totalSize;\n      })\n      .attr('y', (d, i) => {\n        const row = Math.floor(i / 10); // Adjust based on your sprite layout\n        return row * totalSize;\n      });\n\n    // Step 2: Bind data to images and use clip-path with the defined clipPaths\n    const images = svg.selectAll('image').data(data);\n    images.enter().append('image')\n        .attr('xlink:href', sprite)\n        .attr('x', d => xScale(d[0]) - imageSize / 2)\n        .attr('y', d => yScale(d[1]) - imageSize / 2)\n        .attr('width', imageSize)\n        .attr('height', imageSize)\n        .attr('clip-path', (d, i) => `url(#clip-${i})`);\n\n     svg.call(lasso().on(\"start lasso end\", draw));\n     draw(defaultLasso);\n\n    // Bind data to text elements and add labels\n\n    svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;\n    \n        var labeldata_all = []\n        for (const [label, value] of Object.entries(result)) {\n            var piedata = []\n            var i =0\n            for (const [key, count] of Object.entries(value)){\n                \n                piedata.push({ title: key, value: count, color: colors[stringToNumberMap[key]] })\n                i+=1\n            }\n            labeldata_all.push(piedata)\n          }\n\n\n   \n        \n        var pies = []\n        labeldata_all.forEach((e,i)=>{\n            pies.push(<><p style={{position:'relative', top:'40px',left:'20px'}}>Cluster {i}</p><PieChart data={e} label={({ dataEntry }) => dataEntry.title}\n        labelStyle={(index) => ({\n            fontSize: '8px',\n            fontFamily: 'sans-serif',\n          })}\n          center={[65,50]}\n          radius={20}\n          labelPosition={120}/></>)\n        })\n\n        setPieCharts(pies)\n        console.log(array)\n\n  }, [data, labels, width, height, colorCol, jitter]);\n\n  return (\n    <>\n            \n        <svg ref={ref} width={width} height={height}></svg>\n        <div id = 'legend' style={{ position: 'fixed', top: '2%', left: '86%', width: '200px',height:'95%', backgroundColor: 'rgba(0, 0, 0, 0.02)',\n                 boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',  // Drop shadow\n                borderRadius: '20px' ,                         // Curved edges\n                fontFamily: 'Perpetua',  // Setting the font family\n                overflowY: 'scroll'\n                }}>\n        \n            <div style={{ width:'150px',}}>{pieCharts}</div>\n            \n            </div>;\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}