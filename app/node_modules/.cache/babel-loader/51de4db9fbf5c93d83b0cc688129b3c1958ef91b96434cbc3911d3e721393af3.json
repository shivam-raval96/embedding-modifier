{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js\",\n  _s = $RefreshSig$();\nimport { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport papers from './datasets/papers.json';\nimport papers_labels from './datasets/papers_lbls.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ForceGraph() {\n  _s();\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [hoverNode, setHoverNode] = useState(null);\n  const updateHighlight = () => {\n    setHighlightNodes(highlightNodes);\n    setHighlightLinks(highlightLinks);\n  };\n  const handleNodeHover = node => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links.forEach(link => highlightLinks.add(link));\n    }\n    setHoverNode(node || null);\n    updateHighlight();\n  };\n  const handleLinkHover = link => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (link) {\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n    updateHighlight();\n  };\n  const paintRing = useCallback((node, ctx) => {\n    // add ring just for highlighted nodes\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, NODE_R * 1.4, 0, 2 * Math.PI, false);\n    ctx.fillStyle = node === hoverNode ? 'red' : 'orange';\n    ctx.fill();\n  }, [hoverNode]);\n\n  // gen a number persistent color from around the palette\n  const getColor = n => '#' + (n * 1234567 % Math.pow(2, 24)).toString(16).padStart(6, '0');\n  function nodePaint(node, color, ctx, size) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, size, 0, 2 * Math.PI, false);\n    ctx.fill(); // circle\n    ctx.globalAlpha = 0.8;\n    ctx.fillStyle = \"rgba(0,0,0, 0.2)\";\n    ctx.shadowColor = \"black\";\n    ctx.shadowBlur = 5;\n  }\n  function nodeLabel(node, ctx, globalScale) {\n    const label = node.label;\n    const fontSize = 12 / globalScale;\n    ctx.font = `${fontSize}px Sans-Serif`;\n    const textWidth = ctx.measureText(label).width;\n    const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = \"black\";\n    ctx.fillText(label, node.x, node.y);\n    ctx.shadowColor = \"black\";\n    ctx.shadowBlur = 7;\n    node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n  }\n\n  let data = papers;\n  let labels = papers_labels;\n  let range = 1400;\n  let x = d3.scaleLinear().range([-range, range]),\n    y = d3.scaleLinear().range([-range, range]);\n  var d_extent_x = d3.extent(data['nodes'], d => +d['x']),\n    d_extent_y = d3.extent(data['nodes'], d => +d['y']);\n\n  // Draw axes\n  x.domain(d_extent_x);\n  y.domain(d_extent_y);\n  data['nodes'] = data['nodes'].map(function (e) {\n    e['x'] = x(+e['x']);\n    e['y'] = y(+e['y']);\n    return e;\n  });\n  data['links'] = data['links'].map(function (e) {\n    e['value'] = +e['value'];\n    return e;\n  });\n  console.log(data);\n  const forceRef = useRef(null);\n  useEffect(() => {\n    forceRef.current.d3Force(\"charge\").strength(0);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: data,\n      nodeLabel: \"id\",\n      nodeAutoColorBy: \"group\",\n      nodeRelSize: 8,\n      d3VelocityDecay: 0.95,\n      nodeOpacity: 0.01,\n      nodeLabel: \"name\",\n      nodeDesc: \"id\",\n      linkWidth: link => highlightLinks.has(link) ? 5 : 1,\n      linkDirectionalParticles: 4,\n      linkDirectionalParticleWidth: link => highlightLinks.has(link) ? 4 : 0,\n      linkVisibility: true,\n      onNodeClick: node => {\n        console.log(node);\n      },\n      ref: forceRef,\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        if (node.group) {\n          nodePaint(node, getColor(node.group), ctx, 8);\n        } else {\n          nodeLabel(node, ctx, globalScale);\n        }\n      },\n      onNodeDragEnd: node => {\n        node.fx = node.x;\n        node.fy = node.y;\n        node.fz = node.z;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ForceGraph, \"FSAWzUoe/qID44D33AxdiFsA2mQ=\");\n_c = ForceGraph;\nexport default ForceGraph;\nvar _c;\n$RefreshReg$(_c, \"ForceGraph\");","map":{"version":3,"names":["ForceGraph2D","React","useContext","useState","useRef","useEffect","d3","papers","papers_labels","jsxDEV","_jsxDEV","Fragment","_Fragment","ForceGraph","_s","highlightNodes","setHighlightNodes","Set","highlightLinks","setHighlightLinks","hoverNode","setHoverNode","updateHighlight","handleNodeHover","node","clear","add","neighbors","forEach","neighbor","links","link","handleLinkHover","source","target","paintRing","useCallback","ctx","beginPath","arc","x","y","NODE_R","Math","PI","fillStyle","fill","getColor","n","pow","toString","padStart","nodePaint","color","size","globalAlpha","shadowColor","shadowBlur","nodeLabel","globalScale","label","fontSize","font","textWidth","measureText","width","bckgDimensions","map","fillRect","textAlign","textBaseline","fillText","__bckgDimensions","data","labels","range","scaleLinear","d_extent_x","extent","d","d_extent_y","domain","e","console","log","forceRef","current","d3Force","strength","children","graphData","nodeAutoColorBy","nodeRelSize","d3VelocityDecay","nodeOpacity","nodeDesc","linkWidth","has","linkDirectionalParticles","linkDirectionalParticleWidth","linkVisibility","onNodeClick","ref","nodeCanvasObject","group","onNodeDragEnd","fx","fy","fz","z","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js"],"sourcesContent":["import { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport papers from './datasets/papers.json'\nimport papers_labels from './datasets/papers_lbls.json'\n\nfunction ForceGraph() {\n\n    const [highlightNodes, setHighlightNodes] = useState(new Set());\n      const [highlightLinks, setHighlightLinks] = useState(new Set());\n      const [hoverNode, setHoverNode] = useState(null);\n\n      const updateHighlight = () => {\n        setHighlightNodes(highlightNodes);\n        setHighlightLinks(highlightLinks);\n      };\n\n      const handleNodeHover = node => {\n        highlightNodes.clear();\n        highlightLinks.clear();\n        if (node) {\n          highlightNodes.add(node);\n          node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\n          node.links.forEach(link => highlightLinks.add(link));\n        }\n\n        setHoverNode(node || null);\n        updateHighlight();\n      };\n\n      const handleLinkHover = link => {\n        highlightNodes.clear();\n        highlightLinks.clear();\n\n        if (link) {\n          highlightLinks.add(link);\n          highlightNodes.add(link.source);\n          highlightNodes.add(link.target);\n        }\n\n        updateHighlight();\n      };\n\n      const paintRing = useCallback((node, ctx) => {\n        // add ring just for highlighted nodes\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, NODE_R * 1.4, 0, 2 * Math.PI, false);\n        ctx.fillStyle = node === hoverNode ? 'red' : 'orange';\n        ctx.fill();\n      }, [hoverNode]);\n      \n    // gen a number persistent color from around the palette\n    const getColor = n => '#' + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, '0');\n\n    function nodePaint(node, color, ctx, size) {\n        ctx.fillStyle = color;\n        ctx.beginPath(); ctx.arc(node.x, node.y, size, 0, 2 * Math.PI, false); ctx.fill();  // circle\n        ctx.globalAlpha   = 0.8;\n        ctx.fillStyle = \"rgba(0,0,0, 0.2)\";\n        ctx.shadowColor=\"black\";\n        ctx.shadowBlur=5;  \n      }\n    function nodeLabel(node, ctx, globalScale){\n            const label = node.label;\n            const fontSize = 12/globalScale;\n            ctx.font = `${fontSize}px Sans-Serif`;\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = \"black\";\n            ctx.fillText(label, node.x, node.y);\n            ctx.shadowColor=\"black\";\n            ctx.shadowBlur=7;\n\n            node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n            \n    }\n    let data = papers\n    let labels = papers_labels\n    let range=1400\n\n\n\n        let x = d3.scaleLinear().range([-range,range]),\n        y = d3.scaleLinear().range([-range,range]);\n\n\n\n\n    var d_extent_x = d3.extent(data['nodes'], (d) => +d['x']),\n        d_extent_y = d3.extent(data['nodes'], (d) => +d['y']);\n\n    // Draw axes\n    x.domain(d_extent_x);\n    y.domain(d_extent_y);\n\n    data['nodes'] = data['nodes'].map(function(e){\n        e['x'] = x(+e['x'])\n        e['y'] = y(+e['y'])\n        return e;\n    });\n\n    data['links'] = data['links'].map(function(e){\n        e['value'] = +e['value']\n        return e;\n    });\n\n    console.log(data)\n\n    const forceRef = useRef(null);\n    useEffect(() => {\n        forceRef.current.d3Force(\"charge\").strength(0);\n    });\n    return (\n\n        <>\n\n\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel=\"id\"\n          nodeAutoColorBy=\"group\"\n          nodeRelSize={8}\n          d3VelocityDecay={0.95}\n          nodeOpacity ={0.01}\n          nodeLabel = {\"name\"}\n          nodeDesc = {\"id\"}\n          linkWidth={link => highlightLinks.has(link) ? 5 : 1}\n          linkDirectionalParticles={4}\n          linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n          linkVisibility ={true}\n          onNodeClick =  {node=>{console.log(node)}}\n\n          ref={forceRef}\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            if (node.group){\n                nodePaint(node, getColor(node.group), ctx, 8)\n            }else{\n                nodeLabel(node, ctx, globalScale)\n            }\n          }}\n          onNodeDragEnd={node => {\n            node.fx = node.x;\n            node.fy = node.y;\n            node.fz = node.z;\n          }}\n          \n            />\n        </>\n      );\n    }\n    \n    export default ForceGraph;\n    \n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}