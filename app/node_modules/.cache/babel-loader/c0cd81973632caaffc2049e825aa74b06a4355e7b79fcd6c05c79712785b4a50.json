{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js\",\n  _s = $RefreshSig$();\nimport { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport papers from './datasets/papers.json';\nimport papers_labels from './datasets/papers_lbls.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ForceGraph() {\n  _s();\n  let data = papers;\n  let labels = papers_labels;\n  let range = 1000;\n  let x = d3.scaleLinear().range([-range, range]),\n    y = d3.scaleLinear().range([-range, range]);\n  var d_extent_x = d3.extent(data['nodes'], d => +d['x']),\n    d_extent_y = d3.extent(data['nodes'], d => +d['y']);\n\n  // Draw axes\n  x.domain(d_extent_x);\n  y.domain(d_extent_y);\n  data['nodes'] = data['nodes'].map(function (e) {\n    e['x'] = x(+e['x']);\n    e['y'] = y(+e['y']);\n    return e;\n  });\n  data['links'] = data['links'].map(function (e) {\n    e['value'] = +e['value'];\n    return e;\n  });\n  console.log(data);\n  const forceRef = useRef(null);\n  useEffect(() => {\n    forceRef.current.d3Force(\"charge\").strength(0);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: data,\n      nodeLabel: \"id\",\n      nodeAutoColorBy: \"group\",\n      nodeRelSize: 8,\n      d3VelocityDecay: 0.95,\n      nodeOpacity: 0.01,\n      nodeLabel: \"name\",\n      nodeDesc: \"id\",\n      linkVisibility: true,\n      onNodeClick: node => {\n        console.log(node);\n      },\n      onLinkClick: link => {\n        console.log(link);\n        link['value'] = 50;\n      },\n      onNodeDragEnd: node => {\n        node.fx = node.x;\n        node.fy = node.y;\n        node.fz = node.z;\n      },\n      ref: forceRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: labels,\n      ref: forceRef,\n      nodeAutoColorBy: \"id\",\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        const label = node.name;\n        const fontSize = 12 / globalScale;\n        ctx.font = `${fontSize}px Sans-Serif`;\n        const textWidth = ctx.measureText(label).width;\n        const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n        ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = node.color;\n        ctx.fillText(label, node.x, node.y);\n        node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n      },\n\n      nodePointerAreaPaint: (node, color, ctx) => {\n        ctx.fillStyle = color;\n        const bckgDimensions = node.__bckgDimensions;\n        bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), \",\"]\n  }, void 0, true);\n}\n_s(ForceGraph, \"TxYESRtw+XzKUI1LiKhMBv+9Ljk=\");\n_c = ForceGraph;\nexport default ForceGraph;\nvar _c;\n$RefreshReg$(_c, \"ForceGraph\");","map":{"version":3,"names":["ForceGraph2D","React","useContext","useState","useRef","useEffect","d3","papers","papers_labels","jsxDEV","_jsxDEV","Fragment","_Fragment","ForceGraph","_s","data","labels","range","x","scaleLinear","y","d_extent_x","extent","d","d_extent_y","domain","map","e","console","log","forceRef","current","d3Force","strength","children","graphData","nodeLabel","nodeAutoColorBy","nodeRelSize","d3VelocityDecay","nodeOpacity","nodeDesc","linkVisibility","onNodeClick","node","onLinkClick","link","onNodeDragEnd","fx","fy","fz","z","ref","fileName","_jsxFileName","lineNumber","columnNumber","nodeCanvasObject","ctx","globalScale","label","name","fontSize","font","textWidth","measureText","width","bckgDimensions","n","fillStyle","fillRect","textAlign","textBaseline","color","fillText","__bckgDimensions","nodePointerAreaPaint","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/force.js"],"sourcesContent":["import { ForceGraph2D } from \"react-force-graph\";\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport papers from './datasets/papers.json'\nimport papers_labels from './datasets/papers_lbls.json'\n\nfunction ForceGraph() {\n    let data = papers\n    let labels = papers_labels\n    let range=1000\n\n\n\n        let x = d3.scaleLinear().range([-range,range]),\n        y = d3.scaleLinear().range([-range,range]);\n\n\n\n\n    var d_extent_x = d3.extent(data['nodes'], (d) => +d['x']),\n        d_extent_y = d3.extent(data['nodes'], (d) => +d['y']);\n\n    // Draw axes\n    x.domain(d_extent_x);\n    y.domain(d_extent_y);\n\n    data['nodes'] = data['nodes'].map(function(e){\n        e['x'] = x(+e['x'])\n        e['y'] = y(+e['y'])\n        return e;\n    });\n\n    data['links'] = data['links'].map(function(e){\n        e['value'] = +e['value']\n        return e;\n    });\n\n    console.log(data)\n\n    const forceRef = useRef(null);\n    useEffect(() => {\n        forceRef.current.d3Force(\"charge\").strength(0);\n    });\n    return (\n\n        <>\n\n\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel=\"id\"\n          nodeAutoColorBy=\"group\"\n          nodeRelSize={8}\n          d3VelocityDecay={0.95}\n          nodeOpacity ={0.01}\n          nodeLabel = {\"name\"}\n          nodeDesc = {\"id\"}\n          linkVisibility ={true}\n          onNodeClick =  {node=>{console.log(node)}}\n          onLinkClick =  {link=>{console.log(link);link['value'] = 50}}\n          onNodeDragEnd={node => {\n            node.fx = node.x;\n            node.fy = node.y;\n            node.fz = node.z;\n          }}\n          ref={forceRef}\n          \n          \n            />\n\n        <ForceGraph2D\n          graphData={labels}\n          ref={forceRef}\n          nodeAutoColorBy=\"id\"\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            const label = node.name;\n            const fontSize = 12/globalScale;\n            ctx.font = `${fontSize}px Sans-Serif`;\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = node.color;\n            ctx.fillText(label, node.x, node.y);\n\n            node.__bckgDimensions = bckgDimensions; // to re-use in nodePointerAreaPaint\n          }}\n          nodePointerAreaPaint={(node, color, ctx) => {\n            ctx.fillStyle = color;\n            const bckgDimensions = node.__bckgDimensions;\n            bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n          }}\n        />,\n        </>\n      );\n    }\n    \n    export default ForceGraph;\n    \n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}