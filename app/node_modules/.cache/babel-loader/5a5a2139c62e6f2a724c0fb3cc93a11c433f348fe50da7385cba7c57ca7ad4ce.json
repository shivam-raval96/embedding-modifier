{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet currentImg = '';\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nconst Legend = ({\n  stringToNumberMap,\n  colors\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      maxWidth: '200px',\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), Object.keys(stringToNumberMap).map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline-block',\n          width: '20px',\n          height: '20px',\n          borderRadius: '50%',\n          backgroundColor: colors[stringToNumberMap[label] % colors.length],\n          marginRight: '10px',\n          fontSize: '18px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = Legend;\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    jitter\n  } = props;\n  console.log(data);\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([]);\n  const defaultLasso = [[0, 0]];\n  const [stringToNumberMap, setStringToNumberMap] = useState({\n    '0': 'none'\n  });\n  // const [currentImg, setCurrentImg] = useState('')\n\n  let isZooming = false;\n  let size = 50; // Default size of images\n  let enlargedSize = size * 6;\n  data.forEach((d, i) => {\n    d.id = i;\n    d.image = 'art/' + d[4];\n  });\n  useEffect(() => {\n    d3.selectAll(\".autotooltip\").remove();\n    d3.selectAll(\".tooltip\").remove();\n    data.forEach((d, i) => {\n      d.id = i;\n    });\n    const svg = d3.select(ref.current);\n\n    // Initial setup for each image object in your data array\n    data.forEach(d => {\n      d.isVisible = false; // Track visibility status\n      d.zoomLevelChanged = 1; // Track the zoom level at which the visibility last changed\n    });\n\n    const zoom = d3.zoom().scaleExtent([1, 10]).on(\"zoom\", event => {\n      const currentZoom = event.transform.k;\n      const newSize = size / Math.sqrt(currentZoom);\n\n      // Update transformations for zoomable group\n      svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n      svg.selectAll('image').attr('width', newSize).attr('height', newSize).attr('x', d => xScale(d[0]) - newSize / 2).attr('y', d => yScale(d[1]) - newSize / 2).style('visibility', function (d) {\n        const overlaps = visibleImages.some(vi => {\n          return Math.abs(vi.x - imagePos.x) < vi.size / 2 + imagePos.size / 2 && Math.abs(vi.y - imagePos.y) < vi.size / 2 + imagePos.size / 2;\n        });\n\n        // Hysteresis logic\n        if (!overlaps && !d.isVisible && (currentZoom - d.zoomLevelChanged > 0.5 || d.zoomLevelChanged - currentZoom > 0.5)) {\n          d.isVisible = true;\n          d.zoomLevelChanged = currentZoom;\n          return 'visible';\n        } else if (overlaps && d.isVisible) {\n          d.isVisible = false;\n          d.zoomLevelChanged = currentZoom;\n          return 'hidden';\n        }\n\n        // Maintain current visibility without change\n        return d.isVisible ? 'visible' : 'hidden';\n      });\n    });\n    svg.call(zoom);\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //console.log(contours)\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n     contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      setStringToNumberMap(encodeArray(array));\n    } else {\n      var array = getColumn(data, 3);\n      setStringToNumberMap(encodeArray(getColumn(data, 3)));\n    }\n    var color_idx = getEncodedArray(array, stringToNumberMap);\n    console.log(colorCol, stringToNumberMap);\n\n    // Create a group for visual elements that should be zoomable and panable\n    let zoomableGroup = svg.select('g.zoomable');\n    if (zoomableGroup.empty()) {\n      zoomableGroup = svg.append('g').classed('zoomable', true);\n    }\n\n    // Initialize an array to store the bounding boxes of visible images\n    let plottedImages = [];\n\n    // Function to check for overlap with already plotted images\n    function doesOverlap(newImage) {\n      for (let existingImage of plottedImages) {\n        if (Math.abs(newImage.x - existingImage.x) < size && Math.abs(newImage.y - existingImage.y) < size) {\n          return true; // Overlaps with an existing image\n        }\n      }\n\n      return false; // No overlap found\n    }\n\n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    // Bind data to images\n    let images = zoomableGroup.selectAll('image').data(data, d => d.id); // Use a key function for object constancy (if not already defined, ensure each data item has a unique 'id')\n\n    // Enter new images\n    images.enter().append('image').attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n    .attr('width', size).attr('height', size).style(\"opacity\", 0).style(\"stroke\", \"red\") // set the line colour\n    .attr('x', d => xScale(d[0]) - size / 2).attr('y', d => yScale(d[1]) - size / 2)\n    // .style(\"z-index\", 1)\n    .merge(images).transition().duration(1500).style(\"opacity\", .8).attr('x', d => xScale(d[0]) - size / 2).attr('y', d => yScale(d[1]) - size / 2).each(function (d) {\n      // Check if the new image overlaps with any already plotted image\n      if (doesOverlap({\n        x: xScale(d[0]),\n        y: yScale(d[1])\n      })) {\n        d3.select(this).style('visibility', 'hidden'); // Hide overlapping images\n      } else {\n        plottedImages.push({\n          x: xScale(d[0]),\n          y: yScale(d[1])\n        }); // Add to the list of plotted images\n        d3.select(this).style('visibility', 'visible');\n      }\n    });\n    images.on(\"mouseover\", (event, d) => {\n      if (isZooming) return; // Skip if zooming\n      // console.log(\"c\", currentImg);\n      // console.log(\"d\", d.image);\n      // console.log(d.image === currentImg);\n      if (d.image === currentImg) {\n        currentImg = '';\n        return;\n      }\n      currentImg = d.image;\n      // console.log(\"e\", currentImg);\n\n      d3.select(event.currentTarget).raise().transition().duration(300).attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n      .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n      .attr('width', enlargedSize).attr('height', enlargedSize).style(\"opacity\", 0.9).on(\"end\", function () {\n        d3.select(this).style(\"pointer-events\", \"none\");\n      });\n      // .style(\"z-index\", 20);  // needs to be higher than other images\n\n      console.log(d);\n      //let tooltipContent = `<div><p>Title: ${d[4]}</p><p>Artist: ${d[5]}</p><p>Medium: ${d[11]}</p><p>Genre: ${d[8]}</p><p>Date/Period: ${d[10]}</p></div>`;\n      let tooltipContent = `<div><p>${d[2]}</p></div>`;\n      tooltip.transition().duration(100).style(\"opacity\", 100);\n      tooltip.html(tooltipContent).style(\"left\", event.pageX - 10 + enlargedSize / 2 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", (event, d) => {\n      tooltip.transition().duration(100).style(\"opacity\", 0);\n      d3.select(event.currentTarget).transition().duration(1500).attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n      .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n      .attr('width', size).attr('height', size).on(\"end\", function () {\n        // Once the transition ends, reset pointer-events to auto\n        d3.select(this).style(\"pointer-events\", \"auto\");\n        // console.log(\"out\", d.image)\n        // if (d.image === currentImg) {\n        //   currentImg = '';\n        //   console.log(\"cu out\", currentImg)\n        // }\n      });\n    });\n\n    // Exit selection: Remove elements that are no longer present.\n    images.exit().transition().duration(1500).style(\"opacity\", 0).remove();\n    // *️⃣ Disable lasso for now\n    // svg.call(lasso().on(\"start lasso end\", draw));\n    // draw(defaultLasso);\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n  }, [data, labels, width, height, colorCol, jitter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend\",\n      style: {\n        position: 'fixed',\n        top: '2%',\n        left: '86%',\n        width: '200px',\n        backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',\n        // Drop shadow\n        borderRadius: '20px',\n        // Curved edges\n        fontSize: '16px',\n        // Larger font size for better readability\n        fontFamily: 'Perpetua',\n        // Setting the font family\n        overflowY: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(Legend, {\n        stringToNumberMap: stringToNumberMap,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"4WIRNs7SYb5hta7P42QUUgii5uw=\");\n_c2 = Scatterplot;\nexport default Scatterplot;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","currentImg","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","Legend","style","padding","border","borderRadius","backgroundColor","boxShadow","maxWidth","fontFamily","fontSize","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","label","index","display","alignItems","marginBottom","width","height","length","marginRight","_c","Scatterplot","props","_s","data","labels","colorCol","jitter","console","log","margin","top","left","right","bottom","ref","pieCharts","setPieCharts","defaultLasso","setStringToNumberMap","isZooming","size","enlargedSize","d","i","id","image","selectAll","remove","svg","select","current","isVisible","zoomLevelChanged","zoom","scaleExtent","on","event","currentZoom","transform","k","newSize","sqrt","attr","xScale","yScale","overlaps","visibleImages","some","vi","abs","imagePos","y","call","path","geoPath","l","append","text","scaleLinear","domain","range","tooltip","contours","contourDensity","bandwidth","thresholds","color_idx","zoomableGroup","empty","classed","plottedImages","doesOverlap","newImage","existingImage","images","enter","process","env","PUBLIC_URL","merge","transition","duration","each","push","currentTarget","raise","tooltipContent","html","pageX","pageY","exit","position","overflowY","_c2","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nlet currentImg = ''\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n  \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\",\n  \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\",\n  \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\",\n  \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n  \"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\",\n  \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"\n]\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap) {\n\n  return array.map(str => stringToNumberMap[str]);\n\n}\n\n\nconst Legend = ({ stringToNumberMap, colors }) => {\n  return (\n    <div style={{\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      maxWidth: '200px',\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '20px'\n    }}>\n      <h3 style={{ textAlign: 'center' }}>Legend</h3>\n      {Object.keys(stringToNumberMap).map((label, index) => (\n        <div key={index} style={{\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '4px',\n        }}>\n          <span style={{\n            display: 'inline-block',\n            width: '20px',\n            height: '20px',\n            borderRadius: '50%',\n            backgroundColor: colors[stringToNumberMap[label] % colors.length],\n            marginRight: '10px',\n            fontSize: '18px'\n          }}></span>\n          <span>{label}</span>\n          <br />\n          <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\n\n\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data, labels, colorCol, jitter } = props;\n  console.log(data)\n  const margin = { top: 100, left: 120, right: 80, bottom: 100 }\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([])\n  const defaultLasso = [[0, 0]]\n  const [stringToNumberMap, setStringToNumberMap] = useState({ '0': 'none' });\n  // const [currentImg, setCurrentImg] = useState('')\n\n  let isZooming = false;\n  let size = 50; // Default size of images\n  let enlargedSize =size* 6\n\n  data.forEach((d, i) => {\n    d.id = i\n    d.image = 'art/'+d[4]\n  })\n\n  useEffect(() => {    \n    d3.selectAll(\".autotooltip\").remove();\n    d3.selectAll(\".tooltip\").remove();\n\n\n    data.forEach((d, i) => {\n      d.id = i\n    })\n\n\n\n    const svg = d3.select(ref.current);\n\n// Initial setup for each image object in your data array\ndata.forEach(d => {\n  d.isVisible = false; // Track visibility status\n  d.zoomLevelChanged = 1; // Track the zoom level at which the visibility last changed\n});\n\nconst zoom = d3.zoom()\n  .scaleExtent([1, 10])\n  .on(\"zoom\", (event) => {\n    const currentZoom = event.transform.k;\n    const newSize = size / Math.sqrt(currentZoom);\n\n    // Update transformations for zoomable group\n    svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n\n    svg.selectAll('image')\n      .attr('width', newSize)\n      .attr('height', newSize)\n      .attr('x', d => xScale(d[0]) - newSize / 2)\n      .attr('y', d => yScale(d[1]) - newSize / 2)\n      .style('visibility', function(d) {\n        const overlaps = visibleImages.some(vi => {\n          return Math.abs(vi.x - imagePos.x) < vi.size / 2 + imagePos.size / 2 &&\n                Math.abs(vi.y - imagePos.y) < vi.size / 2 + imagePos.size / 2;\n        });\n\n\n        // Hysteresis logic\n        if (!overlaps && !d.isVisible && (currentZoom - d.zoomLevelChanged > 0.5 || d.zoomLevelChanged - currentZoom > 0.5)) {\n          d.isVisible = true;\n          d.zoomLevelChanged = currentZoom;\n          return 'visible';\n        } else if (overlaps && d.isVisible) {\n          d.isVisible = false;\n          d.zoomLevelChanged = currentZoom;\n          return 'hidden';\n        }\n        \n        // Maintain current visibility without change\n        return d.isVisible ? 'visible' : 'hidden';\n      });\n  });\n\nsvg.call(zoom);\n\n\n\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n\n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n\n\n\n\n\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height - margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0)\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"solid\")\n      .style(\"border-width\", \"2px\")\n      .style(\"border-radius\", \"5px\")\n      .style(\"padding\", \"5px\")\n      .style(\"margin-right\", \"50px\")\n      .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n      .x(d => xScale(d[0]))\n      .y(d => yScale(d[1]))\n      .size([width, height])\n      .bandwidth(40)\n      .thresholds(3)\n      (data);\n\n\n\n    //console.log(contours)\n\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol)\n      setStringToNumberMap(encodeArray(array));\n\n\n\n    } else {\n      var array = getColumn(data, 3)\n      setStringToNumberMap(encodeArray(getColumn(data, 3)))\n    }\n\n\n\n    var color_idx = getEncodedArray(array, stringToNumberMap)\n\n    console.log(colorCol, stringToNumberMap)\n\n\n\n\n    // Create a group for visual elements that should be zoomable and panable\n    let zoomableGroup = svg.select('g.zoomable');\n    if (zoomableGroup.empty()) {\n          zoomableGroup = svg.append('g').classed('zoomable', true);\n        }\n\n   // Initialize an array to store the bounding boxes of visible images\n   let plottedImages = [];\n\n   // Function to check for overlap with already plotted images\n   function doesOverlap(newImage) {\n     for (let existingImage of plottedImages) {\n       if (Math.abs(newImage.x - existingImage.x) < size && Math.abs(newImage.y - existingImage.y) < size) {\n         return true; // Overlaps with an existing image\n       }\n     }\n     return false; // No overlap found\n   }\n \n\n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    // Bind data to images\n    let images = zoomableGroup.selectAll('image')\n      .data(data, d => d.id); // Use a key function for object constancy (if not already defined, ensure each data item has a unique 'id')\n\n\n    // Enter new images\n    images.enter().append('image')\n      .attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n      .attr('width', size)\n      .attr('height', size)\n      .style(\"opacity\", 0)\n      .style(\"stroke\", \"red\")    // set the line colour\n      .attr('x', d => xScale(d[0]) - size / 2)\n      .attr('y', d => yScale(d[1]) - size / 2)\n      // .style(\"z-index\", 1)\n      .merge(images)\n      .transition().duration(1500)\n      .style(\"opacity\", .8)\n      .attr('x', d => xScale(d[0]) - size / 2)\n      .attr('y', d => yScale(d[1]) - size / 2)\n      .each(function(d) {\n        // Check if the new image overlaps with any already plotted image\n        if (doesOverlap({x: xScale(d[0]), y: yScale(d[1])})) {\n          d3.select(this).style('visibility', 'hidden'); // Hide overlapping images\n        } else {\n          plottedImages.push({x: xScale(d[0]), y: yScale(d[1])}); // Add to the list of plotted images\n          d3.select(this).style('visibility', 'visible');\n        }\n      });\n\n\n    images\n      .on(\"mouseover\", (event, d) => {\n        if (isZooming) return; // Skip if zooming\n        // console.log(\"c\", currentImg);\n        // console.log(\"d\", d.image);\n        // console.log(d.image === currentImg);\n        if (d.image === currentImg) {\n          currentImg = ''\n          return\n        }\n        currentImg = d.image\n        // console.log(\"e\", currentImg);\n\n        d3.select(event.currentTarget)\n          .raise()\n          .transition().duration(300)\n          .attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n          .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n          .attr('width', enlargedSize)\n          .attr('height', enlargedSize)\n          .style(\"opacity\", 0.9)\n          .on(\"end\", function() {\n            d3.select(this).style(\"pointer-events\", \"none\");\n          });\n          // .style(\"z-index\", 20);  // needs to be higher than other images\n        \n        console.log(d);\n        //let tooltipContent = `<div><p>Title: ${d[4]}</p><p>Artist: ${d[5]}</p><p>Medium: ${d[11]}</p><p>Genre: ${d[8]}</p><p>Date/Period: ${d[10]}</p></div>`;\n        let tooltipContent = `<div><p>${d[2]}</p></div>`;\n\n        tooltip.transition()\n          .duration(100)\n          .style(\"opacity\", 100);\n        tooltip.html(tooltipContent)\n          .style(\"left\", (event.pageX -10 + (enlargedSize / 2)) + \"px\")\n          .style(\"top\", (event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", (event, d) => {\n        tooltip.transition()\n          .duration(100)\n          .style(\"opacity\", 0);\n        d3.select(event.currentTarget)\n          .transition().duration(1500)\n          .attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n          .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n          .attr('width', size)\n          .attr('height', size)\n          .on(\"end\", function() { // Once the transition ends, reset pointer-events to auto\n            d3.select(this).style(\"pointer-events\", \"auto\");\n            // console.log(\"out\", d.image)\n            // if (d.image === currentImg) {\n            //   currentImg = '';\n            //   console.log(\"cu out\", currentImg)\n            // }\n          });\n      });\n\n  // Exit selection: Remove elements that are no longer present.\n  images.exit()\n    .transition().duration(1500)\n    .style(\"opacity\", 0)\n    .remove();    \n    // *️⃣ Disable lasso for now\n    // svg.call(lasso().on(\"start lasso end\", draw));\n    // draw(defaultLasso);\n\n\n\n\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n\n\n\n  }, [data, labels, width, height, colorCol, jitter]);\n\n  return (\n    <>\n\n      <svg ref={ref} width={width} height={height}></svg>\n      <div id='legend' style={{\n        position: 'fixed', top: '2%', left: '86%', width: '200px', backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',  // Drop shadow\n        borderRadius: '20px',                         // Curved edges\n        fontSize: '16px', // Larger font size for better readability\n        fontFamily: 'Perpetua',  // Setting the font family\n        overflowY: 'scroll'\n      }}>\n\n        <Legend stringToNumberMap={stringToNumberMap} colors={colors} />\n\n\n      </div>;\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}