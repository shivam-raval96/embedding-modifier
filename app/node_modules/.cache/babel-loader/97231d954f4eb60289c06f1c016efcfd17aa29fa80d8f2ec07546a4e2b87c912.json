{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#F9F6EE\", \"#808080\", \"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#25cfad\", \"#e377c2\", \"#8c564b\", \"#C28C9D\", \"#3498db\", \"#96FF2C\", \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#d35400\", \"#7f8c8d\", \"#c0392b\", \"#2980b9\", \"#27ae60\", \"#8e44ad\", \"#f39c12\", \"#16a085\", \"#2c3e50\", \"#7d3c98\", \"#c0392b\", \"#f7dc6f\", \"#48c9b0\", \"#f1948a\", \"#bb8fce\", \"#73c6b6\", \"#f0b27a\", \"#85c1e9\", \"#f7f9f9\", \"#aab7b8\", \"#76448a\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nfunction getPieDistribution(data, labels) {\n  let distribution = {};\n  for (let i = 0; i < labels.length; i++) {\n    let label = labels[i];\n    let item = data[i];\n    if (!distribution[label]) {\n      distribution[label] = {};\n    }\n    if (!distribution[label][item]) {\n      distribution[label][item] = 0;\n    }\n    distribution[label][item]++;\n  }\n  return distribution;\n}\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    mapping\n  } = props;\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([]);\n  const defaultLasso = [[0, 0]];\n  const [searchQuery, setSearchQuery] = useState('Enter Query ...');\n  const [stringToNumberMap, setStringToNumberMap] = useState({\n    '0': 'none'\n  });\n  function selectIndices(data, gridRows, gridCols) {\n    // Calculate grid cell size based on data bounds and desired grid dimensions\n    const xMin = d3.min(data, d => d[0]);\n    const xMax = d3.max(data, d => d[0]);\n    const yMin = d3.min(data, d => d[1]);\n    const yMax = d3.max(data, d => d[1]);\n    const cellWidth = (xMax - xMin) / gridCols;\n    const cellHeight = (yMax - yMin) / gridRows;\n\n    // Initialize an empty grid\n    let grid = Array.from({\n      length: gridRows\n    }, () => Array.from({\n      length: gridCols\n    }, () => []));\n\n    // Assign points to the appropriate grid cells\n    data.forEach((point, index) => {\n      const col = Math.min(Math.floor((point[0] - xMin) / cellWidth), gridCols - 1);\n      const row = Math.min(Math.floor((point[1] - yMin) / cellHeight), gridRows - 1);\n      grid[row][col].push(index); // Store the index of the point\n    });\n\n    // Select one point from each occupied cell\n    const selectedIndices = [];\n    grid.forEach(row => row.forEach(cell => {\n      if (cell.length > 0) {\n        const randomIndex = cell[Math.floor(Math.random() * cell.length)];\n        selectedIndices.push(randomIndex);\n      }\n    }));\n    return selectedIndices;\n  }\n  useEffect(() => {\n    data.forEach((d, i) => {\n      d.id = i;\n    });\n    const svg = d3.select(ref.current);\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    d3.selectAll(\".autotooltip\").remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n    function draw(polygon) {\n      //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n      // selectioncontent\n      // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n      //var content = '<table>'\n\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\";\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n      const selected = [];\n\n      // note: d3.polygonContains uses the even-odd rule\n      // which is reflected in the CSS for the lasso shape\n      circles.classed(\"selected\", polygon.length > 2 ? d => {\n        d3.polygonContains(polygon, [xScale(d[0]), yScale(d[1])]) && selected.push(d);\n      } //&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n      : false);\n      //content += '</table>'\n\n      /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n          console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n          content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n      }*/\n\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n      // These two functions need no customization.\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border = '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          var dIsInSubset = d.id == id;\n          return dIsInSubset ? r_big : r_small;\n        });\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        //row.style.backgroundColor = TableBackgroundNormalColor; \n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n      }\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = `<td>${d[2]}</td>`;\n        tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]], 0.4);\n\n        //tr.addEventListener('mouseover', () => console.log(d));\n        tr.addEventListener('mouseover', () => {\n          console.log(d);\n          ChangeBackgroundColor(tr, d.id);\n        });\n        tr.addEventListener('mouseout', () => {\n          console.log(d);\n          RestoreBackgroundColor(tr);\n        });\n        table.appendChild(tr);\n      });\n      svg.value = {\n        polygon,\n        selected\n      };\n\n      //selectioncontent.html(content)\n      //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n    }\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n    const randomIndices = selectIndices(data, 2, 2);\n\n    // Select random points using the indices\n    const randomDataPoints = randomIndices.map(index => data[index]);\n\n    // Function to create tooltip\n    const createTooltip = d => {\n      const tooltipDiv = d3.select(\"body\").append(\"div\").attr(\"class\", `autotooltip tooltip-${d.id}`).style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n      // Set tooltip text and position\n      tooltipDiv.html(d[2].slice(0, 50) + '...').style(\"left\", xScale(d[0]) + 50 + \"px\").style(\"top\", yScale(d[1]) + \"px\").transition().duration(200).style(\"opacity\", 1);\n    };\n\n    // Create and show tooltips for random points\n    randomDataPoints.forEach(d => createTooltip(d));\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    //console.log(data)\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //console.log(contours)\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n     contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      var stringToNumberMap = encodeArray(array);\n      var color_idx = getEncodedArray(array, stringToNumberMap).map(number => number + 2);\n    } else {\n      var color_idx = getColumn(data, 3);\n    }\n    console.log(color_idx);\n    // Bind data to circles\n    const circles = svg.selectAll('circle').data(data);\n\n    // Enter new circles\n    circles.enter().append('circle').attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1])).attr('r', d => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small).style(\"opacity\", 0.9).attr('fill', (d, i) => colors[color_idx[i] % 40]).attr('stroke', 'black') // Add this line for the boundary color\n    .attr('stroke-width', 0.5) // Add this line for the boundary width\n    .style(\"z-index\", 2).on(\"mouseover\", (event, d) => {\n      d3.selectAll(\".autotooltip\").transition().duration(100).style(\"opacity\", 0);\n      svg.selectAll('circle').transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5);\n      //.attr('r', r_small);\n      d3.select(event.currentTarget).transition().duration(100).style(\"opacity\", 1).attr('stroke-width', 4); // Add this line for the boundary width\n      //.attr('r', r_small);\n\n      let highlightedText = d[2];\n      if (searchQuery) {\n        const regex = new RegExp(`(${searchQuery})`, 'gi');\n        highlightedText = highlightedText.replace(regex, \"<span style='background-color: yellow;'>$1</span>\");\n      }\n      tooltip.transition().duration(100).style(\"opacity\", .9);\n      tooltip.html(highlightedText.slice(0, 700)).style(\"left\", event.pageX + 5 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", (event, d) => {\n      svg.selectAll('circle').transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5);\n\n      // Show tooltips for random points again\n      //d3.selectAll(\".tooltip\").remove(); // First remove all existing tooltips\n      d3.selectAll(\".autotooltip\").transition().duration(100).style(\"opacity\", 1);\n      d3.select(event.currentTarget).transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5); // Add this line for the boundary width*/\n\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    });\n    circles.attr('r', d => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small); // Adjust the dot size based on the search query\n\n    // Update existing circles\n    circles.attr('fill', (d, i) => colors[color_idx[i] % 40]).transition().ease(d3.easeLinear).duration(1500).attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1]));\n\n    // Remove old circles\n    circles.exit().remove();\n    svg.call(lasso().on(\"start lasso end\", draw));\n    draw(defaultLasso);\n\n    /*var points=svg.selectAll('circle')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]))\n        .attr('r', 4)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .on(\"mouseover\", (event, d) => {\n             svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            .attr('r', 4);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width\n                .attr('r', 10);\n               tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        }).transition() // start a transition\n        .duration(2000) // 2 seconds;\n         \n        \n        if (jitter){\n            points.attr(\"cx\", function(d,i) { return xScale(d[0])+ 2*Math.random() });\n            points.attr(\"cy\", function(d,i) { return yScale(d[1])+ 2*Math.random() });\n            \n        }*/\n\n    // Bind data to text elements and add labels\n    /*if(labels){\n      svg.selectAll('text.label')\n      .data(labels)\n      .enter()\n      .append('text')\n      .attr('class', 'label')\n      .attr('fill', 'black')  \n      .attr('x', d => xScale(d[0])) \n      .attr('y', d => yScale(d[1]))\n      .attr('dy', '.35em')  \n      .attr('text-anchor', 'middle')\n      .attr('opacity', 0)\n      .text((d,i) => d[2])//`Cluster ${i}`\n      .attr('stroke', 'black')  \n      .attr('stroke-width', '0.3px') \n      .attr('font-size', '28px')\n      .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n      ;\n    }*/\n  }, [data, labels, colorCol, width, height, searchQuery]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '2%',\n        left: '82%',\n        backgroundColor: 'rgba(0, 0, 0, 0.02)',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',\n        // Drop shadow\n        borderRadius: '40px',\n        // Curved edges\n        fontFamily: 'Arial, sans-serif',\n        overflowY: 'scroll',\n        padding: '10px',\n        fontSize: '22px',\n        // Larger font size for better readability\n        borderRadius: '10px',\n        // Rounded corners\n        color: '#495057' // Text color                \n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Search:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 32\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search\",\n        name: \"search\",\n        style: {\n          fontSize: '20px'\n        },\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: searchQuery,\n        onChange: e => {\n          console.log(e.target.value);\n          return setSearchQuery(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"U5EBZ7ks5e4ssLgY3ndmFh4BapA=\");\n_c = Scatterplot;\nexport default Scatterplot;\n//            //<div style={{ width:'150px',}}>{pieCharts}</div>\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","getPieDistribution","data","labels","distribution","i","length","label","item","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","width","height","colorCol","mapping","margin","top","left","right","bottom","ref","pieCharts","setPieCharts","defaultLasso","searchQuery","setSearchQuery","setStringToNumberMap","selectIndices","gridRows","gridCols","xMin","d","xMax","yMin","yMax","cellWidth","cellHeight","grid","Array","from","index","col","floor","row","push","selectedIndices","cell","randomIndex","random","svg","current","lasso","dispatch","selection","node","polygon","preventDefault","p","call","type","_","arguments","selectAll","remove","path","geoPath","l","append","attr","text","draw","table","document","getElementById","innerHTML","datum","coordinates","style","selected","circles","classed","polygonContains","xScale","yScale","TableBackgroundNormalColor","TableBackgroundMouseoverColor","ChangeBackgroundColor","backgroundColor","replace","border","transition","dIsInSubset","RestoreBackgroundColor","tr","createElement","color_idx","addEventListener","console","log","appendChild","value","scaleLinear","domain","range","randomIndices","randomDataPoints","createTooltip","tooltipDiv","html","duration","tooltip","contours","contourDensity","y","size","bandwidth","thresholds","enter","toLowerCase","includes","event","currentTarget","highlightedText","regex","RegExp","pageX","pageY","ease","easeLinear","exit","children","position","boxShadow","borderRadius","fontFamily","overflowY","padding","fontSize","for","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n    \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \n    \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \n    \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \n    \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\"#F9F6EE\",\"#808080\",\n\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\",\n  \"#9467bd\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#25cfad\",\n  \"#e377c2\", \"#8c564b\", \"#C28C9D\", \"#3498db\", \"#96FF2C\",\n  \"#9b59b6\", \"#34495e\", \"#f1c40f\", \"#d35400\", \"#7f8c8d\",\n  \"#c0392b\", \"#2980b9\", \"#27ae60\", \"#8e44ad\", \"#f39c12\",\n  \"#16a085\", \"#2c3e50\", \"#7d3c98\", \"#c0392b\", \"#f7dc6f\",\n  \"#48c9b0\", \"#f1948a\", \"#bb8fce\", \"#73c6b6\", \"#f0b27a\",\n  \"#85c1e9\", \"#f7f9f9\", \"#aab7b8\", \"#76448a\"\n]\nfunction addAlpha(color, opacity) {\n    // coerce values so ti is between 0 and 1.\n    var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n    return color.slice(0,7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n    // Step 1: Identify unique strings\n    const uniqueStrings = new Set(array);\n\n\n    // Step 2: Map strings to numbers\n    const stringToNumberMap = {};\n    let number = 0;\n    uniqueStrings.forEach(str => {\n        stringToNumberMap[str] = number++;\n    });\n\n    // Step 3: Generate encoded array\n    return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap){\n\n    return array.map(str => stringToNumberMap[str]);\n\n}\n\nfunction getPieDistribution(data, labels) {\n    let distribution = {};\n\n    for (let i = 0; i < labels.length; i++) {\n        let label = labels[i];\n        let item = data[i];\n\n        if (!distribution[label]) {\n            distribution[label] = {};\n        }\n\n        if (!distribution[label][item]) {\n            distribution[label][item] = 0;\n        }\n\n        distribution[label][item]++;\n    }\n\n    return distribution;\n}\n\n\nfunction trackPointer(e, { start, move, out, end }) {\n    const tracker = {},\n      id = (tracker.id = e.pointerId),\n      target = e.target;\n    tracker.point = d3.pointer(e, target);\n    target.setPointerCapture(id);\n  \n    d3.select(target)\n      .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        d3.select(target).on(`.${id}`, null);\n        target.releasePointerCapture(id);\n        end && end(tracker);\n      })\n      .on(`pointermove.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.prev = tracker.point;\n        tracker.point = d3.pointer(e, target);\n        move && move(tracker);\n      })\n      .on(`pointerout.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.point = null;\n        out && out(tracker);\n      });\n  \n    start && start(tracker);\n  }\n\n\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data , labels, colorCol, mapping} = props;\n  const margin = {top:100, left:120, right:80, bottom:100}\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([])\n  const defaultLasso = [[0,0]]\n\n  const [searchQuery, setSearchQuery] = useState('Enter Query ...');\n  const [stringToNumberMap, setStringToNumberMap] = useState({'0':'none'});\n\n  function selectIndices(data, gridRows, gridCols) {\n    // Calculate grid cell size based on data bounds and desired grid dimensions\n    const xMin = d3.min(data, d => d[0]);\n    const xMax = d3.max(data, d => d[0]);\n    const yMin = d3.min(data, d => d[1]);\n    const yMax = d3.max(data, d => d[1]);\n    const cellWidth = (xMax - xMin) / gridCols;\n    const cellHeight = (yMax - yMin) / gridRows;\n  \n    // Initialize an empty grid\n    let grid = Array.from({ length: gridRows }, () => Array.from({ length: gridCols }, () => []));\n  \n    // Assign points to the appropriate grid cells\n    data.forEach((point, index) => {\n      const col = Math.min(Math.floor((point[0] - xMin) / cellWidth), gridCols - 1);\n      const row = Math.min(Math.floor((point[1] - yMin) / cellHeight), gridRows - 1);\n      grid[row][col].push(index); // Store the index of the point\n    });\n  \n    // Select one point from each occupied cell\n    const selectedIndices = [];\n    grid.forEach(row => row.forEach(cell => {\n      if (cell.length > 0) {\n        const randomIndex = cell[Math.floor(Math.random() * cell.length)];\n        selectedIndices.push(randomIndex);\n      }\n    }));\n  \n    return selectedIndices;\n  }\n  \n\n\n  useEffect(() => {\n    data.forEach((d,i)=>{d.id = i})\n    const svg = d3.select(ref.current);\n\n\n    function lasso() {\n        const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n        const lasso = function(selection) {\n          const node = selection.node();\n          const polygon = [];\n      \n          selection\n            .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n            .on(\"pointerdown\", e => {\n              trackPointer(e, {\n                start: p => {\n                  polygon.length = 0;\n                  dispatch.call(\"start\", node, polygon);\n                },\n                move: p => {\n                  polygon.push(p.point);\n                  dispatch.call(\"lasso\", node, polygon);\n                },\n                end: p => {\n                  dispatch.call(\"end\", node, polygon);\n                }\n              });\n            });\n        };\n        lasso.on = function(type, _) {\n          return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n        };\n      \n        return lasso;\n      }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n    d3.selectAll(\".autotooltip\").remove();\n    \n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n    function draw(polygon) {\n        //d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n        // selectioncontent\n       // const selectioncontent = d3.select(\"#selectioncontent\").append(\"div\")\n        //var content = '<table>'\n\n        let table = document.getElementById(\"myTable\");\n        table.innerHTML = \"\";\n\n        l.datum({\n          type: \"LineString\",\n          coordinates: polygon\n        }).attr(\"d\", path).style('z-index',-10);\n    \n        const selected = [];\n    \n        // note: d3.polygonContains uses the even-odd rule\n        // which is reflected in the CSS for the lasso shape\n        circles.classed(\n          \"selected\",\n          polygon.length > 2\n            ? d => {d3.polygonContains(polygon, [xScale(d[0]),yScale(d[1])]) && selected.push(d) }//&& (content += \" <tr><td>\"+d[2] + \"</td></tr>\" )}\n            : false\n        );\n        //content += '</table>'\n\n        /*for (const [key, idx] of Object.entries(stringToNumberMap)){\n            console.log(key,\"<font color=\\\"red\\\">\"+key+\"</font>\")\n            content = content.replaceAll(key,\"<font color=\\\"\"+colors[idx]+\"\\\">\"+key+\"</font>\")\n        }*/\n\n        var TableBackgroundNormalColor = \"#ffffff\";\n        var TableBackgroundMouseoverColor = \"#b8b6b6\";\n\n        // These two functions need no customization.\n        function ChangeBackgroundColor(row,id) { \n            row.style.backgroundColor =  row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n\n            row.style.border= '1px solid black !important'\n\n            svg.selectAll('circle').transition(100).attr(\"r\", function(d) {\n                var dIsInSubset = d.id == id;\n                return dIsInSubset ? r_big : r_small\n              })\n        \n        }\n        function RestoreBackgroundColor(row) { \n            row.style.backgroundColor =  row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n            //row.style.backgroundColor = TableBackgroundNormalColor; \n            svg.selectAll('circle').transition(100).attr(\"r\", r_small)\n        }\n\n        selected.forEach(d=>{\n            let tr = document.createElement(\"tr\");\n            tr.innerHTML =`<td>${d[2]}</td>`;\n            tr.style.backgroundColor = addAlpha(colors[color_idx[d.id]],0.4)\n\n            //tr.addEventListener('mouseover', () => console.log(d));\n            tr.addEventListener('mouseover', () => {console.log(d);ChangeBackgroundColor(tr,d.id)});\n            tr.addEventListener('mouseout', () => {console.log(d);RestoreBackgroundColor(tr)});\n\n            table.appendChild(tr);\n\n        })\n        svg.value = { polygon, selected };\n\n        //selectioncontent.html(content)\n        //selectioncontent.addEventListener('mouseover', () => console.log(datum));\n\n\n\n      }\n    \n\n    \n\n    \n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width-margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height-margin.bottom, margin.top]);\n\n\n    const randomIndices = selectIndices(data, 2, 2);\n\n    // Select random points using the indices\n    const randomDataPoints = randomIndices.map(index => data[index]);\n\n    // Function to create tooltip\n    const createTooltip = (d) => {\n        const tooltipDiv = d3.select(\"body\").append(\"div\")\n            .attr(\"class\", `autotooltip tooltip-${d.id}`)\n            .style(\"opacity\", 0)\n            .style(\"background-color\", \"white\")\n            .style(\"border\", \"solid\")\n            .style(\"border-width\", \"2px\")\n            .style(\"border-radius\", \"5px\")\n            .style(\"padding\", \"5px\")\n            .style(\"margin-right\", \"50px\")\n            .style(\"position\", \"absolute\");\n\n        // Set tooltip text and position\n        tooltipDiv.html(d[2].slice(0, 50)+'...')\n            .style(\"left\", (xScale(d[0])+50) + \"px\")\n            .style(\"top\", (yScale(d[1])) + \"px\")\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 1);\n    };\n\n    // Create and show tooltips for random points\n    randomDataPoints.forEach(d => createTooltip(d));\n\n\n\n\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"margin-right\", \"50px\")\n        .style(\"position\", \"absolute\");\n\n  //console.log(data)\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n    .size([width, height])\n    .bandwidth(40)\n    .thresholds(3)\n    (data);\n\n\n\n    //console.log(contours)\n    \n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/ \n\n    //SetcolorCol\n    if (colorCol!=-1){\n        var array = getColumn(data,colorCol)\n        var stringToNumberMap = encodeArray(array) ;\n        var color_idx = getEncodedArray(array, stringToNumberMap).map(number => number + 2);\n\n\n\n\n    }else{\n        var color_idx = getColumn(data,3)\n\n    }\n\n\n\n\n    console.log(color_idx)\n     // Bind data to circles\n     const circles = svg.selectAll('circle').data(data);\n\n     // Enter new circles\n     circles.enter().append('circle')\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]))\n         .attr('r', d => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small)\n         .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%40])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .style(\"z-index\", 2)\n        .on(\"mouseover\", (event, d) => {\n          d3.selectAll(\".autotooltip\").transition().duration(100).style(\"opacity\", 0);\n\n            svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            //.attr('r', r_small);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 4)  // Add this line for the boundary width\n                //.attr('r', r_small);\n\n            let highlightedText = d[2];\n            if (searchQuery) {\n                  const regex = new RegExp(`(${searchQuery})`, 'gi');\n                  highlightedText = highlightedText.replace(regex, \"<span style='background-color: yellow;'>$1</span>\");\n                }\n\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(highlightedText.slice(0, 700))\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (event,d) => {\n          svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n\n          // Show tooltips for random points again\n        //d3.selectAll(\".tooltip\").remove(); // First remove all existing tooltips\n        d3.selectAll(\".autotooltip\").transition().duration(100).style(\"opacity\", 1);\n\n\n\n\n           d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 0.9) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width*/\n\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        })\n\n      circles.attr('r', d => d[2].toLowerCase().includes(searchQuery.toLowerCase()) ? r_big : r_small); // Adjust the dot size based on the search query\n\n     \n     // Update existing circles\n     circles.attr('fill', (d,i) =>  colors[color_idx[i]%40]).transition().ease(d3.easeLinear).duration(1500)\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]))\n\n      \n     // Remove old circles\n     circles.exit().remove();\n\n     svg.call(lasso().on(\"start lasso end\", draw));\n     draw(defaultLasso);\n    \n    /*var points=svg.selectAll('circle')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]))\n        .attr('r', 4)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .on(\"mouseover\", (event, d) => {\n\n            svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            .attr('r', 4);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width\n                .attr('r', 10);\n\n\n\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        }).transition() // start a transition\n        .duration(2000) // 2 seconds;\n\n        \n        \n        if (jitter){\n            points.attr(\"cx\", function(d,i) { return xScale(d[0])+ 2*Math.random() });\n            points.attr(\"cy\", function(d,i) { return yScale(d[1])+ 2*Math.random() });\n            \n        }*/\n\n\n\n    // Bind data to text elements and add labels\n/*if(labels){\n  svg.selectAll('text.label')\n  .data(labels)\n  .enter()\n  .append('text')\n  .attr('class', 'label')\n  .attr('fill', 'black')  \n  .attr('x', d => xScale(d[0])) \n  .attr('y', d => yScale(d[1]))\n  .attr('dy', '.35em')  \n  .attr('text-anchor', 'middle')\n  .attr('opacity', 0)\n  .text((d,i) => d[2])//`Cluster ${i}`\n  .attr('stroke', 'black')  \n  .attr('stroke-width', '0.3px') \n  .attr('font-size', '28px')\n  .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n  ;\n}*/\n  \n\n  }, [data, labels,colorCol, width, height, searchQuery]);\n\n  return (\n    <>\n    <div style={{ position: 'fixed', top: '2%', left: '82%', backgroundColor: 'rgba(0, 0, 0, 0.02)',\n                 boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.5)',  // Drop shadow\n                borderRadius: '40px' ,                         // Curved edges\n                fontFamily: 'Arial, sans-serif',\n                overflowY: 'scroll',\n                padding: '10px',\n                fontSize: '22px', // Larger font size for better readability\n                borderRadius: '10px', // Rounded corners\n                color: '#495057', // Text color                \n                }}>\n           <label for=\"search\"><b>Search:</b> </label>\n\n        <input id=\"search\" name=\"search\" style={{ fontSize: '20px',  }}\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={searchQuery}\n      onChange={(e) => {console.log(e.target.value);return setSearchQuery(e.target.value)}}\n\n    /></div>\n        <svg ref={ref} width={width} height={height}></svg>\n;\n    </>\n  )\n}\n\nexport default Scatterplot;\n//            //<div style={{ width:'150px',}}>{pieCharts}</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}