{"ast":null,"code":"import { EventDispatcher, Matrix4, Plane, Raycaster, Vector2, Vector3 } from 'three';\nconst _plane = new Plane();\nconst _raycaster = new Raycaster();\nconst _pointer = new Vector2();\nconst _offset = new Vector3();\nconst _intersection = new Vector3();\nconst _worldPosition = new Vector3();\nconst _inverseMatrix = new Matrix4();\nclass DragControls extends EventDispatcher {\n  constructor(_objects, _camera, _domElement) {\n    super();\n    _domElement.style.touchAction = 'none'; // disable touch scroll\n\n    let _selected = null,\n      _hovered = null;\n    const _intersections = [];\n\n    //\n\n    const scope = this;\n    function activate() {\n      _domElement.addEventListener('pointermove', onPointerMove);\n      _domElement.addEventListener('pointerdown', onPointerDown);\n      _domElement.addEventListener('pointerup', onPointerCancel);\n      _domElement.addEventListener('pointerleave', onPointerCancel);\n    }\n    function deactivate() {\n      _domElement.removeEventListener('pointermove', onPointerMove);\n      _domElement.removeEventListener('pointerdown', onPointerDown);\n      _domElement.removeEventListener('pointerup', onPointerCancel);\n      _domElement.removeEventListener('pointerleave', onPointerCancel);\n      _domElement.style.cursor = '';\n    }\n    function dispose() {\n      deactivate();\n    }\n    function getObjects() {\n      return _objects;\n    }\n    function getRaycaster() {\n      return _raycaster;\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      updatePointer(event);\n      _raycaster.setFromCamera(_pointer, _camera);\n      if (_selected) {\n        if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n          _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\n        }\n        scope.dispatchEvent({\n          type: 'drag',\n          object: _selected\n        });\n        return;\n      }\n\n      // hover support\n\n      if (event.pointerType === 'mouse' || event.pointerType === 'pen') {\n        _intersections.length = 0;\n        _raycaster.setFromCamera(_pointer, _camera);\n        _raycaster.intersectObjects(_objects, scope.recursive, _intersections);\n        if (_intersections.length > 0) {\n          const object = _intersections[0].object;\n          _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(object.matrixWorld));\n          if (_hovered !== object && _hovered !== null) {\n            scope.dispatchEvent({\n              type: 'hoveroff',\n              object: _hovered\n            });\n            _domElement.style.cursor = 'auto';\n            _hovered = null;\n          }\n          if (_hovered !== object) {\n            scope.dispatchEvent({\n              type: 'hoveron',\n              object: object\n            });\n            _domElement.style.cursor = 'pointer';\n            _hovered = object;\n          }\n        } else {\n          if (_hovered !== null) {\n            scope.dispatchEvent({\n              type: 'hoveroff',\n              object: _hovered\n            });\n            _domElement.style.cursor = 'auto';\n            _hovered = null;\n          }\n        }\n      }\n    }\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      updatePointer(event);\n      _intersections.length = 0;\n      _raycaster.setFromCamera(_pointer, _camera);\n      _raycaster.intersectObjects(_objects, scope.recursive, _intersections);\n      if (_intersections.length > 0) {\n        _selected = scope.transformGroup === true ? _objects[0] : _intersections[0].object;\n        _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n        if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\n          _inverseMatrix.copy(_selected.parent.matrixWorld).invert();\n          _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\n        }\n        _domElement.style.cursor = 'move';\n        scope.dispatchEvent({\n          type: 'dragstart',\n          object: _selected\n        });\n      }\n    }\n    function onPointerCancel() {\n      if (scope.enabled === false) return;\n      if (_selected) {\n        scope.dispatchEvent({\n          type: 'dragend',\n          object: _selected\n        });\n        _selected = null;\n      }\n      _domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n    }\n    function updatePointer(event) {\n      const rect = _domElement.getBoundingClientRect();\n      _pointer.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      _pointer.y = -(event.clientY - rect.top) / rect.height * 2 + 1;\n    }\n    activate();\n\n    // API\n\n    this.enabled = true;\n    this.recursive = true;\n    this.transformGroup = false;\n    this.activate = activate;\n    this.deactivate = deactivate;\n    this.dispose = dispose;\n    this.getObjects = getObjects;\n    this.getRaycaster = getRaycaster;\n  }\n}\nexport { DragControls };","map":{"version":3,"names":["EventDispatcher","Matrix4","Plane","Raycaster","Vector2","Vector3","_plane","_raycaster","_pointer","_offset","_intersection","_worldPosition","_inverseMatrix","DragControls","constructor","_objects","_camera","_domElement","style","touchAction","_selected","_hovered","_intersections","scope","activate","addEventListener","onPointerMove","onPointerDown","onPointerCancel","deactivate","removeEventListener","cursor","dispose","getObjects","getRaycaster","event","enabled","updatePointer","setFromCamera","ray","intersectPlane","position","copy","sub","applyMatrix4","dispatchEvent","type","object","pointerType","length","intersectObjects","recursive","setFromNormalAndCoplanarPoint","getWorldDirection","normal","setFromMatrixPosition","matrixWorld","transformGroup","parent","invert","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/three/examples/jsm/controls/DragControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMatrix4,\n\tPlane,\n\tRaycaster,\n\tVector2,\n\tVector3\n} from 'three';\n\nconst _plane = new Plane();\nconst _raycaster = new Raycaster();\n\nconst _pointer = new Vector2();\nconst _offset = new Vector3();\nconst _intersection = new Vector3();\nconst _worldPosition = new Vector3();\nconst _inverseMatrix = new Matrix4();\n\nclass DragControls extends EventDispatcher {\n\n\tconstructor( _objects, _camera, _domElement ) {\n\n\t\tsuper();\n\n\t\t_domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tlet _selected = null, _hovered = null;\n\n\t\tconst _intersections = [];\n\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tfunction activate() {\n\n\t\t\t_domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t_domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\t\t_domElement.addEventListener( 'pointerup', onPointerCancel );\n\t\t\t_domElement.addEventListener( 'pointerleave', onPointerCancel );\n\n\t\t}\n\n\t\tfunction deactivate() {\n\n\t\t\t_domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t_domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\t_domElement.removeEventListener( 'pointerup', onPointerCancel );\n\t\t\t_domElement.removeEventListener( 'pointerleave', onPointerCancel );\n\n\t\t\t_domElement.style.cursor = '';\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tdeactivate();\n\n\t\t}\n\n\t\tfunction getObjects() {\n\n\t\t\treturn _objects;\n\n\t\t}\n\n\t\tfunction getRaycaster() {\n\n\t\t\treturn _raycaster;\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tupdatePointer( event );\n\n\t\t\t_raycaster.setFromCamera( _pointer, _camera );\n\n\t\t\tif ( _selected ) {\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t_selected.position.copy( _intersection.sub( _offset ).applyMatrix4( _inverseMatrix ) );\n\n\t\t\t\t}\n\n\t\t\t\tscope.dispatchEvent( { type: 'drag', object: _selected } );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// hover support\n\n\t\t\tif ( event.pointerType === 'mouse' || event.pointerType === 'pen' ) {\n\n\t\t\t\t_intersections.length = 0;\n\n\t\t\t\t_raycaster.setFromCamera( _pointer, _camera );\n\t\t\t\t_raycaster.intersectObjects( _objects, scope.recursive, _intersections );\n\n\t\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\t\tconst object = _intersections[ 0 ].object;\n\n\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( object.matrixWorld ) );\n\n\t\t\t\t\tif ( _hovered !== object && _hovered !== null ) {\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'hoveroff', object: _hovered } );\n\n\t\t\t\t\t\t_domElement.style.cursor = 'auto';\n\t\t\t\t\t\t_hovered = null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _hovered !== object ) {\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'hoveron', object: object } );\n\n\t\t\t\t\t\t_domElement.style.cursor = 'pointer';\n\t\t\t\t\t\t_hovered = object;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( _hovered !== null ) {\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'hoveroff', object: _hovered } );\n\n\t\t\t\t\t\t_domElement.style.cursor = 'auto';\n\t\t\t\t\t\t_hovered = null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tupdatePointer( event );\n\n\t\t\t_intersections.length = 0;\n\n\t\t\t_raycaster.setFromCamera( _pointer, _camera );\n\t\t\t_raycaster.intersectObjects( _objects, scope.recursive, _intersections );\n\n\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\t_selected = ( scope.transformGroup === true ) ? _objects[ 0 ] : _intersections[ 0 ].object;\n\n\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t_inverseMatrix.copy( _selected.parent.matrixWorld ).invert();\n\t\t\t\t\t_offset.copy( _intersection ).sub( _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\t_domElement.style.cursor = 'move';\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragstart', object: _selected } );\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction onPointerCancel() {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( _selected ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragend', object: _selected } );\n\n\t\t\t\t_selected = null;\n\n\t\t\t}\n\n\t\t\t_domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n\n\t\t}\n\n\t\tfunction updatePointer( event ) {\n\n\t\t\tconst rect = _domElement.getBoundingClientRect();\n\n\t\t\t_pointer.x = ( event.clientX - rect.left ) / rect.width * 2 - 1;\n\t\t\t_pointer.y = - ( event.clientY - rect.top ) / rect.height * 2 + 1;\n\n\t\t}\n\n\t\tactivate();\n\n\t\t// API\n\n\t\tthis.enabled = true;\n\t\tthis.recursive = true;\n\t\tthis.transformGroup = false;\n\n\t\tthis.activate = activate;\n\t\tthis.deactivate = deactivate;\n\t\tthis.dispose = dispose;\n\t\tthis.getObjects = getObjects;\n\t\tthis.getRaycaster = getRaycaster;\n\n\t}\n\n}\n\nexport { DragControls };\n"],"mappings":"AAAA,SACCA,eAAe,EACfC,OAAO,EACPC,KAAK,EACLC,SAAS,EACTC,OAAO,EACPC,OAAO,QACD,OAAO;AAEd,MAAMC,MAAM,GAAG,IAAIJ,KAAK,CAAC,CAAC;AAC1B,MAAMK,UAAU,GAAG,IAAIJ,SAAS,CAAC,CAAC;AAElC,MAAMK,QAAQ,GAAG,IAAIJ,OAAO,CAAC,CAAC;AAC9B,MAAMK,OAAO,GAAG,IAAIJ,OAAO,CAAC,CAAC;AAC7B,MAAMK,aAAa,GAAG,IAAIL,OAAO,CAAC,CAAC;AACnC,MAAMM,cAAc,GAAG,IAAIN,OAAO,CAAC,CAAC;AACpC,MAAMO,cAAc,GAAG,IAAIX,OAAO,CAAC,CAAC;AAEpC,MAAMY,YAAY,SAASb,eAAe,CAAC;EAE1Cc,WAAWA,CAAEC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAG;IAE7C,KAAK,CAAC,CAAC;IAEPA,WAAW,CAACC,KAAK,CAACC,WAAW,GAAG,MAAM,CAAC,CAAC;;IAExC,IAAIC,SAAS,GAAG,IAAI;MAAEC,QAAQ,GAAG,IAAI;IAErC,MAAMC,cAAc,GAAG,EAAE;;IAEzB;;IAEA,MAAMC,KAAK,GAAG,IAAI;IAElB,SAASC,QAAQA,CAAA,EAAG;MAEnBP,WAAW,CAACQ,gBAAgB,CAAE,aAAa,EAAEC,aAAc,CAAC;MAC5DT,WAAW,CAACQ,gBAAgB,CAAE,aAAa,EAAEE,aAAc,CAAC;MAC5DV,WAAW,CAACQ,gBAAgB,CAAE,WAAW,EAAEG,eAAgB,CAAC;MAC5DX,WAAW,CAACQ,gBAAgB,CAAE,cAAc,EAAEG,eAAgB,CAAC;IAEhE;IAEA,SAASC,UAAUA,CAAA,EAAG;MAErBZ,WAAW,CAACa,mBAAmB,CAAE,aAAa,EAAEJ,aAAc,CAAC;MAC/DT,WAAW,CAACa,mBAAmB,CAAE,aAAa,EAAEH,aAAc,CAAC;MAC/DV,WAAW,CAACa,mBAAmB,CAAE,WAAW,EAAEF,eAAgB,CAAC;MAC/DX,WAAW,CAACa,mBAAmB,CAAE,cAAc,EAAEF,eAAgB,CAAC;MAElEX,WAAW,CAACC,KAAK,CAACa,MAAM,GAAG,EAAE;IAE9B;IAEA,SAASC,OAAOA,CAAA,EAAG;MAElBH,UAAU,CAAC,CAAC;IAEb;IAEA,SAASI,UAAUA,CAAA,EAAG;MAErB,OAAOlB,QAAQ;IAEhB;IAEA,SAASmB,YAAYA,CAAA,EAAG;MAEvB,OAAO3B,UAAU;IAElB;IAEA,SAASmB,aAAaA,CAAES,KAAK,EAAG;MAE/B,IAAKZ,KAAK,CAACa,OAAO,KAAK,KAAK,EAAG;MAE/BC,aAAa,CAAEF,KAAM,CAAC;MAEtB5B,UAAU,CAAC+B,aAAa,CAAE9B,QAAQ,EAAEQ,OAAQ,CAAC;MAE7C,IAAKI,SAAS,EAAG;QAEhB,IAAKb,UAAU,CAACgC,GAAG,CAACC,cAAc,CAAElC,MAAM,EAAEI,aAAc,CAAC,EAAG;UAE7DU,SAAS,CAACqB,QAAQ,CAACC,IAAI,CAAEhC,aAAa,CAACiC,GAAG,CAAElC,OAAQ,CAAC,CAACmC,YAAY,CAAEhC,cAAe,CAAE,CAAC;QAEvF;QAEAW,KAAK,CAACsB,aAAa,CAAE;UAAEC,IAAI,EAAE,MAAM;UAAEC,MAAM,EAAE3B;QAAU,CAAE,CAAC;QAE1D;MAED;;MAEA;;MAEA,IAAKe,KAAK,CAACa,WAAW,KAAK,OAAO,IAAIb,KAAK,CAACa,WAAW,KAAK,KAAK,EAAG;QAEnE1B,cAAc,CAAC2B,MAAM,GAAG,CAAC;QAEzB1C,UAAU,CAAC+B,aAAa,CAAE9B,QAAQ,EAAEQ,OAAQ,CAAC;QAC7CT,UAAU,CAAC2C,gBAAgB,CAAEnC,QAAQ,EAAEQ,KAAK,CAAC4B,SAAS,EAAE7B,cAAe,CAAC;QAExE,IAAKA,cAAc,CAAC2B,MAAM,GAAG,CAAC,EAAG;UAEhC,MAAMF,MAAM,GAAGzB,cAAc,CAAE,CAAC,CAAE,CAACyB,MAAM;UAEzCzC,MAAM,CAAC8C,6BAA6B,CAAEpC,OAAO,CAACqC,iBAAiB,CAAE/C,MAAM,CAACgD,MAAO,CAAC,EAAE3C,cAAc,CAAC4C,qBAAqB,CAAER,MAAM,CAACS,WAAY,CAAE,CAAC;UAE9I,IAAKnC,QAAQ,KAAK0B,MAAM,IAAI1B,QAAQ,KAAK,IAAI,EAAG;YAE/CE,KAAK,CAACsB,aAAa,CAAE;cAAEC,IAAI,EAAE,UAAU;cAAEC,MAAM,EAAE1B;YAAS,CAAE,CAAC;YAE7DJ,WAAW,CAACC,KAAK,CAACa,MAAM,GAAG,MAAM;YACjCV,QAAQ,GAAG,IAAI;UAEhB;UAEA,IAAKA,QAAQ,KAAK0B,MAAM,EAAG;YAE1BxB,KAAK,CAACsB,aAAa,CAAE;cAAEC,IAAI,EAAE,SAAS;cAAEC,MAAM,EAAEA;YAAO,CAAE,CAAC;YAE1D9B,WAAW,CAACC,KAAK,CAACa,MAAM,GAAG,SAAS;YACpCV,QAAQ,GAAG0B,MAAM;UAElB;QAED,CAAC,MAAM;UAEN,IAAK1B,QAAQ,KAAK,IAAI,EAAG;YAExBE,KAAK,CAACsB,aAAa,CAAE;cAAEC,IAAI,EAAE,UAAU;cAAEC,MAAM,EAAE1B;YAAS,CAAE,CAAC;YAE7DJ,WAAW,CAACC,KAAK,CAACa,MAAM,GAAG,MAAM;YACjCV,QAAQ,GAAG,IAAI;UAEhB;QAED;MAED;IAED;IAEA,SAASM,aAAaA,CAAEQ,KAAK,EAAG;MAE/B,IAAKZ,KAAK,CAACa,OAAO,KAAK,KAAK,EAAG;MAE/BC,aAAa,CAAEF,KAAM,CAAC;MAEtBb,cAAc,CAAC2B,MAAM,GAAG,CAAC;MAEzB1C,UAAU,CAAC+B,aAAa,CAAE9B,QAAQ,EAAEQ,OAAQ,CAAC;MAC7CT,UAAU,CAAC2C,gBAAgB,CAAEnC,QAAQ,EAAEQ,KAAK,CAAC4B,SAAS,EAAE7B,cAAe,CAAC;MAExE,IAAKA,cAAc,CAAC2B,MAAM,GAAG,CAAC,EAAG;QAEhC7B,SAAS,GAAKG,KAAK,CAACkC,cAAc,KAAK,IAAI,GAAK1C,QAAQ,CAAE,CAAC,CAAE,GAAGO,cAAc,CAAE,CAAC,CAAE,CAACyB,MAAM;QAE1FzC,MAAM,CAAC8C,6BAA6B,CAAEpC,OAAO,CAACqC,iBAAiB,CAAE/C,MAAM,CAACgD,MAAO,CAAC,EAAE3C,cAAc,CAAC4C,qBAAqB,CAAEnC,SAAS,CAACoC,WAAY,CAAE,CAAC;QAEjJ,IAAKjD,UAAU,CAACgC,GAAG,CAACC,cAAc,CAAElC,MAAM,EAAEI,aAAc,CAAC,EAAG;UAE7DE,cAAc,CAAC8B,IAAI,CAAEtB,SAAS,CAACsC,MAAM,CAACF,WAAY,CAAC,CAACG,MAAM,CAAC,CAAC;UAC5DlD,OAAO,CAACiC,IAAI,CAAEhC,aAAc,CAAC,CAACiC,GAAG,CAAEhC,cAAc,CAAC4C,qBAAqB,CAAEnC,SAAS,CAACoC,WAAY,CAAE,CAAC;QAEnG;QAEAvC,WAAW,CAACC,KAAK,CAACa,MAAM,GAAG,MAAM;QAEjCR,KAAK,CAACsB,aAAa,CAAE;UAAEC,IAAI,EAAE,WAAW;UAAEC,MAAM,EAAE3B;QAAU,CAAE,CAAC;MAEhE;IAGD;IAEA,SAASQ,eAAeA,CAAA,EAAG;MAE1B,IAAKL,KAAK,CAACa,OAAO,KAAK,KAAK,EAAG;MAE/B,IAAKhB,SAAS,EAAG;QAEhBG,KAAK,CAACsB,aAAa,CAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE3B;QAAU,CAAE,CAAC;QAE7DA,SAAS,GAAG,IAAI;MAEjB;MAEAH,WAAW,CAACC,KAAK,CAACa,MAAM,GAAGV,QAAQ,GAAG,SAAS,GAAG,MAAM;IAEzD;IAEA,SAASgB,aAAaA,CAAEF,KAAK,EAAG;MAE/B,MAAMyB,IAAI,GAAG3C,WAAW,CAAC4C,qBAAqB,CAAC,CAAC;MAEhDrD,QAAQ,CAACsD,CAAC,GAAG,CAAE3B,KAAK,CAAC4B,OAAO,GAAGH,IAAI,CAACI,IAAI,IAAKJ,IAAI,CAACK,KAAK,GAAG,CAAC,GAAG,CAAC;MAC/DzD,QAAQ,CAAC0D,CAAC,GAAG,EAAI/B,KAAK,CAACgC,OAAO,GAAGP,IAAI,CAACQ,GAAG,CAAE,GAAGR,IAAI,CAACS,MAAM,GAAG,CAAC,GAAG,CAAC;IAElE;IAEA7C,QAAQ,CAAC,CAAC;;IAEV;;IAEA,IAAI,CAACY,OAAO,GAAG,IAAI;IACnB,IAAI,CAACe,SAAS,GAAG,IAAI;IACrB,IAAI,CAACM,cAAc,GAAG,KAAK;IAE3B,IAAI,CAACjC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACK,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACG,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY;EAEjC;AAED;AAEA,SAASrB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}