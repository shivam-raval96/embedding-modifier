{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nfunction getPieDistribution(data, labels) {\n  let distribution = {};\n  for (let i = 0; i < labels.length; i++) {\n    let label = labels[i];\n    let item = data[i];\n    if (!distribution[label]) {\n      distribution[label] = {};\n    }\n    if (!distribution[label][item]) {\n      distribution[label][item] = 0;\n    }\n    distribution[label][item]++;\n  }\n  return distribution;\n}\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  const {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    jitter\n  } = props;\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([]);\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //console.log(contours)\n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n     contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      var stringToNumberMap = encodeArray(array);\n    } else {\n      var array = getColumn(data, 3);\n      var stringToNumberMap = encodeArray(getColumn(data, 3));\n    }\n    var color_idx = getEncodedArray(array, stringToNumberMap);\n    let result = getPieDistribution(getColumn(data, colorCol), getColumn(data, 3));\n    console.log(colorCol, stringToNumberMap);\n\n    // Bind data to circles\n    const circles = svg.selectAll('circle').data(data);\n\n    // Enter new circles\n    circles.enter().append('circle').attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1])).attr('r', 5).style(\"opacity\", 0.9).attr('fill', (d, i) => colors[color_idx[i] % 10]).attr('stroke', 'black') // Add this line for the boundary color\n    .attr('stroke-width', 0.5) // Add this line for the boundary width\n    .style(\"z-index\", 1).on(\"mouseover\", (event, d) => {\n      svg.selectAll('circle').transition().duration(100).style(\"opacity\", 0.9).attr('stroke-width', 0.5).attr('r', 4);\n      d3.select(event.currentTarget).transition().duration(100).style(\"opacity\", 1).attr('stroke-width', 0.5) // Add this line for the boundary width\n      .attr('r', 10);\n      tooltip.transition().duration(100).style(\"opacity\", .9);\n      tooltip.html(d[2]).style(\"left\", event.pageX + 5 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", d => {\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    });\n\n    // Update existing circles\n    circles.attr('fill', (d, i) => colors[color_idx[i] % 10]).transition().ease(d3.easeLinear).duration(1500).attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1]));\n\n    // Remove old circles\n    circles.exit().remove();\n\n    /*var points=svg.selectAll('circle')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]))\n        .attr('r', 4)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .on(\"mouseover\", (event, d) => {\n             svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            .attr('r', 4);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width\n                .attr('r', 10);\n               tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        }).transition() // start a transition\n        .duration(2000) // 2 seconds;\n         \n        \n        if (jitter){\n            points.attr(\"cx\", function(d,i) { return xScale(d[0])+ 2*Math.random() });\n            points.attr(\"cy\", function(d,i) { return yScale(d[1])+ 2*Math.random() });\n            \n        }*/\n\n    // Bind data to text elements and add labels\n\n    svg.selectAll('text.label').data(labels).enter().append('text').attr('class', 'label').attr('fill', 'black').attr('x', d => xScale(d[0])).attr('y', d => yScale(d[1])).attr('dy', '.35em').attr('text-anchor', 'middle').attr('opacity', 0).text((d, i) => `Cluster ${i}`).attr('stroke', 'black').attr('stroke-width', '0.3px').attr('font-size', '28px').attr('font-weight', '500').transition().duration(1000).attr('opacity', 1);\n    var labeldata_all = [];\n    for (const [label, value] of Object.entries(result)) {\n      var piedata = [];\n      var i = 0;\n      for (const [key, count] of Object.entries(value)) {\n        piedata.push({\n          title: key,\n          value: count,\n          color: colors[stringToNumberMap[key]]\n        });\n        i += 1;\n      }\n      labeldata_all.push(piedata);\n    }\n    var pies = [];\n    labeldata_all.forEach((e, i) => {\n      pies.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'relative',\n            top: '40px',\n            left: '20px'\n          },\n          children: [\"Cluster \", i]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          data: e,\n          label: ({\n            dataEntry\n          }) => dataEntry.title,\n          labelStyle: index => ({\n            fontSize: '8px',\n            fontFamily: 'sans-serif'\n          }),\n          center: [65, 50],\n          radius: 20,\n          labelPosition: 120\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 97\n        }, this)]\n      }, void 0, true));\n    });\n    setPieCharts(pies);\n    console.log(array);\n  }, [data, labels, width, height, colorCol, jitter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend\",\n      style: {\n        position: 'absolute',\n        top: '-2%',\n        left: \"85%\",\n        width: 150,\n        display: 'block'\n      },\n      children: pieCharts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"ImE97drHzRNGYqV6cl4XwSY/aDM=\");\n_c = Scatterplot;\nexport default Scatterplot;\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","colors2","colors","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","getPieDistribution","data","labels","distribution","i","length","label","item","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","width","height","colorCol","jitter","margin","top","left","right","bottom","ref","pieCharts","setPieCharts","svg","current","lasso","dispatch","selection","node","polygon","preventDefault","p","call","push","type","_","arguments","selectAll","remove","path","geoPath","l","append","attr","xScale","scaleLinear","domain","min","d","max","range","yScale","tooltip","style","contours","contourDensity","y","size","bandwidth","thresholds","color_idx","result","console","log","circles","enter","event","transition","duration","currentTarget","html","pageX","pageY","ease","easeLinear","exit","text","labeldata_all","value","Object","entries","piedata","key","count","title","color","pies","children","position","fileName","_jsxFileName","lineNumber","columnNumber","dataEntry","labelStyle","index","fontSize","fontFamily","center","radius","labelPosition","display","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\n\n\nconst colors2 = [\n    \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \n    \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \n    \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \n    \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n    \"#d62728\", \"#bcbd22\",\"#000000\",\"#17becf\", \"#FFD700\",\"#9467bd\",\n     \"#808080\",\"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\",\"#e377c2\"\n]\n\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n    // Step 1: Identify unique strings\n    const uniqueStrings = new Set(array);\n\n\n    // Step 2: Map strings to numbers\n    const stringToNumberMap = {};\n    let number = 0;\n    uniqueStrings.forEach(str => {\n        stringToNumberMap[str] = number++;\n    });\n\n    // Step 3: Generate encoded array\n    return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap){\n\n    return array.map(str => stringToNumberMap[str]);\n\n}\n\nfunction getPieDistribution(data, labels) {\n    let distribution = {};\n\n    for (let i = 0; i < labels.length; i++) {\n        let label = labels[i];\n        let item = data[i];\n\n        if (!distribution[label]) {\n            distribution[label] = {};\n        }\n\n        if (!distribution[label][item]) {\n            distribution[label][item] = 0;\n        }\n\n        distribution[label][item]++;\n    }\n\n    return distribution;\n}\n\nfunction trackPointer(e, { start, move, out, end }) {\n    const tracker = {},\n      id = (tracker.id = e.pointerId),\n      target = e.target;\n    tracker.point = d3.pointer(e, target);\n    target.setPointerCapture(id);\n  \n    d3.select(target)\n      .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        d3.select(target).on(`.${id}`, null);\n        target.releasePointerCapture(id);\n        end && end(tracker);\n      })\n      .on(`pointermove.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.prev = tracker.point;\n        tracker.point = d3.pointer(e, target);\n        move && move(tracker);\n      })\n      .on(`pointerout.${id}`, (e) => {\n        if (e.pointerId !== id) return;\n        tracker.sourceEvent = e;\n        tracker.point = null;\n        out && out(tracker);\n      });\n  \n    start && start(tracker);\n  }\n\n\n\n\n\nfunction Scatterplot(props) {\n  const { width, height, data , labels, colorCol, jitter} = props;\n  const margin = {top:100, left:120, right:80, bottom:100}\n  const ref = useRef();\n  const [pieCharts, setPieCharts] = useState([])\n\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n\n    function lasso() {\n        const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n        const lasso = function(selection) {\n          const node = selection.node();\n          const polygon = [];\n      \n          selection\n            .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n            .on(\"pointerdown\", e => {\n              trackPointer(e, {\n                start: p => {\n                  polygon.length = 0;\n                  dispatch.call(\"start\", node, polygon);\n                },\n                move: p => {\n                  polygon.push(p.point);\n                  dispatch.call(\"lasso\", node, polygon);\n                },\n                end: p => {\n                  dispatch.call(\"end\", node, polygon);\n                }\n              });\n            });\n        };\n        lasso.on = function(type, _) {\n          return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n        };\n      \n        return lasso;\n      }\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    \n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width-margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height-margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"margin-right\", \"50px\")\n        .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n    .size([width, height])\n    .bandwidth(40)\n    .thresholds(3)\n    (data);\n\n\n\n    //console.log(contours)\n    \n\n    // Append the contours.\n    /*var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)*/ \n\n    //SetcolorCol\n    if (colorCol!=-1){\n        var array = getColumn(data,colorCol)\n        var stringToNumberMap = encodeArray(array);\n\n\n    }else{\n        var array = getColumn(data,3)\n        var stringToNumberMap= encodeArray(getColumn(data,3))\n\n    }\n\n\n\n    var color_idx = getEncodedArray(array, stringToNumberMap)\n\n    let result = getPieDistribution(getColumn(data,colorCol), getColumn(data,3));\n\n    console.log(colorCol,stringToNumberMap)\n\n     // Bind data to circles\n     const circles = svg.selectAll('circle').data(data);\n\n     // Enter new circles\n     circles.enter().append('circle')\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]))\n         .attr('r', 5)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .style(\"z-index\", 1)\n        .on(\"mouseover\", (event, d) => {\n\n            svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            .attr('r', 4);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width\n                .attr('r', 10);\n\n\n\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        })\n\n     // Update existing circles\n     circles.attr('fill', (d,i) =>  colors[color_idx[i]%10]).transition().ease(d3.easeLinear).duration(1500)\n         .attr('cx', d => xScale(d[0]))\n         .attr('cy', d => yScale(d[1]));\n\n     // Remove old circles\n     circles.exit().remove();\n    \n    /*var points=svg.selectAll('circle')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]))\n        .attr('r', 4)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .on(\"mouseover\", (event, d) => {\n\n            svg.selectAll('circle')\n            .transition().duration(100)\n            .style(\"opacity\", 0.9) \n            .attr('stroke-width', 0.5) \n            .attr('r', 4);\n            d3.select(event.currentTarget).transition().duration(100)\n                .style(\"opacity\", 1) \n                .attr('stroke-width', 0.5)  // Add this line for the boundary width\n                .attr('r', 10);\n\n\n\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        }).transition() // start a transition\n        .duration(2000) // 2 seconds;\n\n        \n        \n        if (jitter){\n            points.attr(\"cx\", function(d,i) { return xScale(d[0])+ 2*Math.random() });\n            points.attr(\"cy\", function(d,i) { return yScale(d[1])+ 2*Math.random() });\n            \n        }*/\n\n\n\n    // Bind data to text elements and add labels\n\n    svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;\n    \n        var labeldata_all = []\n        for (const [label, value] of Object.entries(result)) {\n            var piedata = []\n            var i =0\n            for (const [key, count] of Object.entries(value)){\n                \n                piedata.push({ title: key, value: count, color: colors[stringToNumberMap[key]] })\n                i+=1\n            }\n            labeldata_all.push(piedata)\n          }\n\n\n   \n        \n        var pies = []\n        labeldata_all.forEach((e,i)=>{\n            pies.push(<><p style={{position:'relative', top:'40px',left:'20px'}}>Cluster {i}</p><PieChart data={e} label={({ dataEntry }) => dataEntry.title}\n        labelStyle={(index) => ({\n            fontSize: '8px',\n            fontFamily: 'sans-serif',\n          })}\n          center={[65,50]}\n          radius={20}\n          labelPosition={120}/></>)\n        })\n\n        setPieCharts(pies)\n        console.log(array)\n\n  }, [data, labels, width, height, colorCol, jitter]);\n\n  return (\n    <>\n            \n        <svg ref={ref} width={width} height={height}></svg>\n        <div id = 'legend' style={{position:'absolute', top:'-2%', left:\"85%\",width:150, display:'block'}}>\n        \n        \n            {pieCharts}\n            </div>;\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}