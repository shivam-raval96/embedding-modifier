{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#0000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n  console.log(uniqueStrings);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return array.map(str => stringToNumberMap[str]);\n}\nfunction Scatterplot(props) {\n  _s();\n  const {\n    width,\n    height,\n    data,\n    labels,\n    colorCol\n  } = props;\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [labelData, setLabelData] = useState([]);\n  const [jitter, setJitter] = useState(true);\n  console.log(colorCol);\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.selectAll('*').remove();\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //console.log(contours)\n\n    // Append the contours.\n    svg.selectAll('contour').attr(\"stroke-linejoin\", \"round\").attr(\"stroke\", 'black').data(contours).join(\"path\").style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2).attr(\"fill\", (d, i) => 'gray').attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n    //.attr(\"stroke\", 'red')\n    .attr(\"d\", d3.geoPath());\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var color_idx = encodeArray(getColumn(data, colorCol));\n      console.log(data, color_idx); // Output: [0, 0, 1, 0]\n    } else {\n      var color_idx = encodeArray(getColumn(data, 3));\n    }\n    var points = svg.selectAll('circle').data(data).enter().append('circle').attr('cx', d => xScale(d[0])).attr('cy', d => yScale(d[1])).attr('r', 4).style(\"opacity\", 0.9).attr('fill', (d, i) => colors[color_idx[i] % 10]).attr('stroke', 'black') // Add this line for the boundary color\n    .attr('stroke-width', 0.5) // Add this line for the boundary width\n    .on(\"mouseover\", (event, d) => {\n      tooltip.transition().duration(100).style(\"opacity\", .9);\n      tooltip.html(d[2]).style(\"left\", event.pageX + 5 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", d => {\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    });\n    points.attr(\"cx\", function (d, i) {\n      return xScale(d[0]) + 5 * Math.random();\n    });\n    points.attr(\"cy\", function (d, i) {\n      return yScale(d[1]) + 5 * Math.random();\n    });\n    setJitter(jitter + 1);\n\n    // Bind data to text elements and add labels\n    svg.selectAll('text.label').data(labels).enter().append('text').attr('class', 'label').attr('fill', 'black').attr('x', d => xScale(d[0])).attr('y', d => yScale(d[1])).attr('dy', '.35em').attr('text-anchor', 'middle').text(d => `${d[2]}`).attr('stroke', 'white').attr('stroke-width', '0.3px').attr('font-size', '17px').attr('font-weight', '800');\n    setLabelData([[{\n      title: 'Red',\n      value: 3,\n      color: colors[0]\n    }, {\n      title: 'Others',\n      value: 1,\n      color: '#C13C37'\n    }], [{\n      title: 'Blue',\n      value: 3,\n      color: colors[1]\n    }, {\n      title: 'Others',\n      value: 1,\n      color: '#C13C37'\n    }], [{\n      title: 'Green',\n      value: 3,\n      color: colors[2]\n    }, {\n      title: 'Others',\n      value: 1,\n      color: '#C13C37'\n    }]]);\n  }, [data, labels, width, height, colorCol, jitter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend\",\n      style: {\n        position: 'absolute',\n        top: '80%',\n        left: \"1%\",\n        width: 30,\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Scatterplot, \"MhiTimQtPJfXQKNB41GWATnCdQQ=\");\n_c = Scatterplot;\nexport default Scatterplot;\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","colors2","colors","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","console","log","stringToNumberMap","number","forEach","str","Scatterplot","props","_s","width","height","data","labels","colorCol","margin","top","left","right","bottom","ref","labelData","setLabelData","jitter","setJitter","svg","select","current","selectAll","remove","xScale","scaleLinear","domain","min","d","max","range","yScale","tooltip","append","attr","style","contours","contourDensity","y","size","bandwidth","thresholds","join","i","geoPath","color_idx","points","enter","on","event","transition","duration","html","pageX","pageY","Math","random","text","title","value","color","children","fileName","_jsxFileName","lineNumber","columnNumber","id","position","display","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdata.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\n\n\nconst colors2 = [\n    \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \n    \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \n    \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \n    \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n    \"#d62728\", \"#bcbd22\",\"#0000\",\"#17becf\", \"#FFD700\",\"#9467bd\",\n     \"#808080\",\"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\",\"#e377c2\"\n]\n\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n    // Step 1: Identify unique strings\n    const uniqueStrings = new Set(array);\n\n    console.log(uniqueStrings )\n\n    // Step 2: Map strings to numbers\n    const stringToNumberMap = {};\n    let number = 0;\n    uniqueStrings.forEach(str => {\n        stringToNumberMap[str] = number++;\n    });\n\n    // Step 3: Generate encoded array\n    return array.map(str => stringToNumberMap[str]);\n}\n\n\n\nfunction Scatterplot(props) {\n  const { width, height, data , labels, colorCol} = props;\n  const margin = {top:100, left:120, right:80, bottom:100}\n  const ref = useRef();\n  const [labelData, setLabelData] = useState([])\n  const [jitter, setJitter] = useState(true)\n\n\n  console.log(colorCol)\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n\n    svg.selectAll('*').remove()\n    \n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width-margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height-margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        .style(\"margin-right\", \"50px\")\n        .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n    .size([width, height])\n    .bandwidth(40)\n    .thresholds(3)\n    (data);\n\n\n\n    //console.log(contours)\n    \n\n    // Append the contours.\n    svg.selectAll('contour').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(contours)\n        .join(\"path\")\n        .style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .attr(\"d\", d3.geoPath());\n\n\n    //SetcolorCol\n    if (colorCol!=-1){\n        var color_idx = encodeArray(getColumn(data,colorCol));\n\n        console.log(data,color_idx); // Output: [0, 0, 1, 0]\n    }else{\n        var color_idx = encodeArray(getColumn(data,3))\n    }\n        \n    var points=svg.selectAll('circle')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('cx', d => xScale(d[0]))\n        .attr('cy', d => yScale(d[1]))\n        .attr('r', 4)\n        .style(\"opacity\", 0.9)\n        .attr('fill', (d,i) =>  colors[color_idx[i]%10])\n        .attr('stroke', 'black')  // Add this line for the boundary color\n        .attr('stroke-width', 0.5)  // Add this line for the boundary width\n        .on(\"mouseover\", (event, d) => {\n            tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .9);\n            tooltip.html(d[2])\n                .style(\"left\", (event.pageX + 5) + \"px\")\n                .style(\"top\", (event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        });\n\n        \n\n        \n          points.attr(\"cx\", function(d,i) { return xScale(d[0])+ 5*Math.random() });\n          points.attr(\"cy\", function(d,i) { return yScale(d[1])+ 5*Math.random() });\n\n\n        setJitter(jitter+1)\n\n    // Bind data to text elements and add labels\n    svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .text(d => `${d[2]}`)\n        .attr('stroke', 'white')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '17px')\n        .attr('font-weight', '800') ;\n\n\n\n   \n        \n        setLabelData( [\n            [{ title: 'Red', value: 3, color: colors[0] },{ title: 'Others', value: 1, color: '#C13C37' },],\n            [{ title: 'Blue', value: 3, color: colors[1]  },{ title: 'Others', value: 1, color: '#C13C37' },],\n            [{ title: 'Green', value: 3, color: colors[2]  },{ title: 'Others', value: 1, color: '#C13C37' },],\n\n        ])\n\n      \n\n  }, [data, labels, width, height, colorCol, jitter]);\n\n  return (\n    <>\n            \n        <svg ref={ref} width={width} height={height}></svg>\n        <div id = 'legend' style={{position:'absolute', top:'80%', left:\"1%\",width:30, display:'none'}}>\n\n            \n            </div>;\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKnD,MAAMC,OAAO,GAAG,CACZ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAChE,SAAS,EAAE,SAAS,CACvB;AAED,MAAMC,MAAM,GAAG,CACX,SAAS,EAAE,SAAS,EAAC,OAAO,EAAC,SAAS,EAAE,SAAS,EAAC,SAAS,EAC1D,SAAS,EAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,SAAS,CAClE;AAED,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACF,CAAC,CAAC,CAAC;AAEhD,SAASG,WAAWA,CAACC,KAAK,EAAE;EACxB;EACA,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAACF,KAAK,CAAC;EAEpCG,OAAO,CAACC,GAAG,CAACH,aAAc,CAAC;;EAE3B;EACA,MAAMI,iBAAiB,GAAG,CAAC,CAAC;EAC5B,IAAIC,MAAM,GAAG,CAAC;EACdL,aAAa,CAACM,OAAO,CAACC,GAAG,IAAI;IACzBH,iBAAiB,CAACG,GAAG,CAAC,GAAGF,MAAM,EAAE;EACrC,CAAC,CAAC;;EAEF;EACA,OAAON,KAAK,CAACH,GAAG,CAACW,GAAG,IAAIH,iBAAiB,CAACG,GAAG,CAAC,CAAC;AACnD;AAIA,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI;IAAGC,MAAM;IAAEC;EAAQ,CAAC,GAAGN,KAAK;EACvD,MAAMO,MAAM,GAAG;IAACC,GAAG,EAAC,GAAG;IAAEC,IAAI,EAAC,GAAG;IAAEC,KAAK,EAAC,EAAE;IAAEC,MAAM,EAAC;EAAG,CAAC;EACxD,MAAMC,GAAG,GAAGvC,MAAM,CAAC,CAAC;EACpB,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwC,MAAM,EAAEC,SAAS,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAG1CkB,OAAO,CAACC,GAAG,CAACY,QAAQ,CAAC;EAErBhC,SAAS,CAAC,MAAM;IACd,MAAM2C,GAAG,GAAGzC,EAAE,CAAC0C,MAAM,CAACN,GAAG,CAACO,OAAO,CAAC;IAGlCF,GAAG,CAACG,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAE3B;IACA,MAAMC,MAAM,GAAG9C,EAAE,CAAC+C,WAAW,CAAC,CAAC,CAC5BC,MAAM,CAAC,CAAChD,EAAE,CAACiD,GAAG,CAACrB,IAAI,EAAEsB,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAElD,EAAE,CAACmD,GAAG,CAACvB,IAAI,EAAEsB,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1DE,KAAK,CAAC,CAACrB,MAAM,CAACE,IAAI,EAAEP,KAAK,GAACK,MAAM,CAACG,KAAK,CAAC,CAAC;IAE3C,MAAMmB,MAAM,GAAGrD,EAAE,CAAC+C,WAAW,CAAC,CAAC,CAC5BC,MAAM,CAAC,CAAChD,EAAE,CAACiD,GAAG,CAACrB,IAAI,EAAEsB,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAElD,EAAE,CAACmD,GAAG,CAACvB,IAAI,EAAEsB,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1DE,KAAK,CAAC,CAACzB,MAAM,GAACI,MAAM,CAACI,MAAM,EAAEJ,MAAM,CAACC,GAAG,CAAC,CAAC;;IAG5C;IACA,MAAMsB,OAAO,GAAGtD,EAAE,CAAC0C,MAAM,CAAC,MAAM,CAAC,CAACa,MAAM,CAAC,KAAK,CAAC,CAC1CC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBA,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAClCA,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CACxBA,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAC5BA,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAC7BA,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CACvBA,KAAK,CAAC,cAAc,EAAE,MAAM,CAAC,CAC7BA,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC;;IAGlC;IACA;IACA;IACA,MAAMC,QAAQ,GAAG1D,EAAE,CAAC2D,cAAc,CAAC,CAAC,CACnC/C,CAAC,CAACsC,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpBU,CAAC,CAACV,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpBW,IAAI,CAAC,CAACnC,KAAK,EAAEC,MAAM,CAAC,CAAC,CACrBmC,SAAS,CAAC,EAAE,CAAC,CACbC,UAAU,CAAC,CAAC,CAAC,CACbnC,IAAI,CAAC;;IAIN;;IAGA;IACAa,GAAG,CAACG,SAAS,CAAC,SAAS,CAAC,CAACY,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CACpDA,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvB5B,IAAI,CAAC8B,QAAQ,CAAC,CACdM,IAAI,CAAC,MAAM,CAAC,CACZP,KAAK,CAAC,SAAS,EAAE,CAACP,CAAC,EAAEe,CAAC,KAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAC3CT,IAAI,CAAC,MAAM,EAAE,CAACN,CAAC,EAAEe,CAAC,KAAK,MAAM,CAAC,CAC9BT,IAAI,CAAC,cAAc,EAAE,CAACN,CAAC,EAAEe,CAAC,KAAKA,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC;IAChD;IAAA,CACCT,IAAI,CAAC,GAAG,EAAExD,EAAE,CAACkE,OAAO,CAAC,CAAC,CAAC;;IAG5B;IACA,IAAIpC,QAAQ,IAAE,CAAC,CAAC,EAAC;MACb,IAAIqC,SAAS,GAAGtD,WAAW,CAACL,SAAS,CAACoB,IAAI,EAACE,QAAQ,CAAC,CAAC;MAErDb,OAAO,CAACC,GAAG,CAACU,IAAI,EAACuC,SAAS,CAAC,CAAC,CAAC;IACjC,CAAC,MAAI;MACD,IAAIA,SAAS,GAAGtD,WAAW,CAACL,SAAS,CAACoB,IAAI,EAAC,CAAC,CAAC,CAAC;IAClD;IAEA,IAAIwC,MAAM,GAAC3B,GAAG,CAACG,SAAS,CAAC,QAAQ,CAAC,CAC7BhB,IAAI,CAACA,IAAI,CAAC,CACVyC,KAAK,CAAC,CAAC,CACPd,MAAM,CAAC,QAAQ,CAAC,CAChBC,IAAI,CAAC,IAAI,EAAEN,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7BM,IAAI,CAAC,IAAI,EAAEN,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7BM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CACrBD,IAAI,CAAC,MAAM,EAAE,CAACN,CAAC,EAACe,CAAC,KAAM1D,MAAM,CAAC4D,SAAS,CAACF,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAC/CT,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAE;IAAA,CACzBA,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAE;IAAA,CAC3Bc,EAAE,CAAC,WAAW,EAAE,CAACC,KAAK,EAAErB,CAAC,KAAK;MAC3BI,OAAO,CAACkB,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACbhB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC;MACzBH,OAAO,CAACoB,IAAI,CAACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CACbO,KAAK,CAAC,MAAM,EAAGc,KAAK,CAACI,KAAK,GAAG,CAAC,GAAI,IAAI,CAAC,CACvClB,KAAK,CAAC,KAAK,EAAGc,KAAK,CAACK,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;IAChD,CAAC,CAAC,CACDN,EAAE,CAAC,UAAU,EAAGpB,CAAC,IAAK;MACnBI,OAAO,CAACkB,UAAU,CAAC,CAAC,CACfC,QAAQ,CAAC,GAAG,CAAC,CACbhB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;IAKAW,MAAM,CAACZ,IAAI,CAAC,IAAI,EAAE,UAASN,CAAC,EAACe,CAAC,EAAE;MAAE,OAAOnB,MAAM,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAE,CAAC,GAAC2B,IAAI,CAACC,MAAM,CAAC,CAAC;IAAC,CAAC,CAAC;IACzEV,MAAM,CAACZ,IAAI,CAAC,IAAI,EAAE,UAASN,CAAC,EAACe,CAAC,EAAE;MAAE,OAAOZ,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,GAAE,CAAC,GAAC2B,IAAI,CAACC,MAAM,CAAC,CAAC;IAAC,CAAC,CAAC;IAG3EtC,SAAS,CAACD,MAAM,GAAC,CAAC,CAAC;;IAEvB;IACAE,GAAG,CAACG,SAAS,CAAC,YAAY,CAAC,CACtBhB,IAAI,CAACC,MAAM,CAAC,CACZwC,KAAK,CAAC,CAAC,CACPd,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAEN,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5BM,IAAI,CAAC,GAAG,EAAEN,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5BM,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BuB,IAAI,CAAC7B,CAAC,IAAK,GAAEA,CAAC,CAAC,CAAC,CAAE,EAAC,CAAC,CACpBM,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAC7BA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC;IAM3BlB,YAAY,CAAE,CACV,CAAC;MAAE0C,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE3E,MAAM,CAAC,CAAC;IAAE,CAAC,EAAC;MAAEyE,KAAK,EAAE,QAAQ;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAU,CAAC,CAAE,EAC/F,CAAC;MAAEF,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE3E,MAAM,CAAC,CAAC;IAAG,CAAC,EAAC;MAAEyE,KAAK,EAAE,QAAQ;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAU,CAAC,CAAE,EACjG,CAAC;MAAEF,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE3E,MAAM,CAAC,CAAC;IAAG,CAAC,EAAC;MAAEyE,KAAK,EAAE,QAAQ;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAU,CAAC,CAAE,CAErG,CAAC;EAIR,CAAC,EAAE,CAACtD,IAAI,EAAEC,MAAM,EAAEH,KAAK,EAAEC,MAAM,EAAEG,QAAQ,EAAES,MAAM,CAAC,CAAC;EAEnD,oBACEpC,OAAA,CAAAE,SAAA;IAAA8E,QAAA,gBAEIhF,OAAA;MAAKiC,GAAG,EAAEA,GAAI;MAACV,KAAK,EAAEA,KAAM;MAACC,MAAM,EAAEA;IAAO;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnDpF,OAAA;MAAKqF,EAAE,EAAG,QAAQ;MAAC/B,KAAK,EAAE;QAACgC,QAAQ,EAAC,UAAU;QAAEzD,GAAG,EAAC,KAAK;QAAEC,IAAI,EAAC,IAAI;QAACP,KAAK,EAAC,EAAE;QAAEgE,OAAO,EAAC;MAAM;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtF,CAAC,KACd;EAAA,eAAE,CAAC;AAEP;AAAC9D,EAAA,CAxJQF,WAAW;AAAAoE,EAAA,GAAXpE,WAAW;AA0JpB,eAAeA,WAAW;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}