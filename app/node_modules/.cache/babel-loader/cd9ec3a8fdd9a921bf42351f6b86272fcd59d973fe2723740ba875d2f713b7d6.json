{"ast":null,"code":"import { range as sequence } from \"d3-array\";\nimport ordinal from \"./ordinal\";\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n    domain = scale.domain,\n    ordinalRange = scale.range,\n    range = [0, 1],\n    step,\n    bandwidth,\n    round = false,\n    paddingInner = 0,\n    paddingOuter = 0,\n    align = 0.5;\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n      reverse = range[1] < range[0],\n      start = range[reverse - 0],\n      stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n  scale.rangeRound = function (_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n  scale.step = function () {\n    return step;\n  };\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n  scale.copy = function () {\n    return band().domain(domain()).range(range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n  return rescale();\n}\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n  scale.copy = function () {\n    return pointish(copy());\n  };\n  return scale;\n}\nexport function point() {\n  return pointish(band().paddingInner(1));\n}","map":{"version":3,"names":["range","sequence","ordinal","band","scale","unknown","undefined","domain","ordinalRange","step","bandwidth","round","paddingInner","paddingOuter","align","rescale","n","length","reverse","start","stop","Math","max","floor","values","map","i","_","arguments","slice","rangeRound","padding","min","copy","pointish","point"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/d3fc-label-layout/node_modules/d3-scale/src/band.js"],"sourcesContent":["import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}