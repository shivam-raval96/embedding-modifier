{"ast":null,"code":"import { ticks, tickIncrement } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain(),\n      i0 = 0,\n      i1 = d.length - 1,\n      start = d[i0],\n      stop = d[i1],\n      step;\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    step = tickIncrement(start, stop, count);\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n    return scale;\n  };\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n  return linearish(scale);\n}","map":{"version":3,"names":["ticks","tickIncrement","interpolateNumber","reinterpolate","default","continuous","copy","deinterpolateLinear","deinterpolate","tickFormat","linearish","scale","domain","count","d","length","specifier","nice","i0","i1","start","stop","step","Math","floor","ceil","linear"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/node_modules/d3fc-label-layout/node_modules/d3-scale/src/linear.js"],"sourcesContent":["import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}