{"ast":null,"code":"var _jsxFileName = \"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet currentImg = '';\nconst r_small = 5;\nconst r_big = 15;\nconst colors2 = [\"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\", \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\", \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\", \"#aec7e8\", \"#1f77b4\"];\nconst colors = [\"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\", \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"];\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\nfunction getEncodedArray(array, stringToNumberMap) {\n  return array.map(str => stringToNumberMap[str]);\n}\nfunction trackPointer(e, {\n  start,\n  move,\n  out,\n  end\n}) {\n  const tracker = {},\n    id = tracker.id = e.pointerId,\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n  d3.select(target).on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    d3.select(target).on(`.${id}`, null);\n    target.releasePointerCapture(id);\n    end && end(tracker);\n  }).on(`pointermove.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.prev = tracker.point;\n    tracker.point = d3.pointer(e, target);\n    move && move(tracker);\n  }).on(`pointerout.${id}`, e => {\n    if (e.pointerId !== id) return;\n    tracker.sourceEvent = e;\n    tracker.point = null;\n    out && out(tracker);\n  });\n  start && start(tracker);\n}\nfunction Scatterplot(props) {\n  _s();\n  var {\n    width,\n    height,\n    data,\n    labels,\n    colorCol,\n    attributes\n  } = props;\n  console.log(data);\n  const margin = {\n    top: 100,\n    left: 120,\n    right: 80,\n    bottom: 100\n  };\n  const ref = useRef();\n  const [stringToNumberMap, setStringToNumberMap] = useState({\n    '0': 'none'\n  });\n  // const [currentImg, setCurrentImg] = useState('')\n\n  let isZooming = false;\n  let size = 30; // Default size of images\n  let enlargedSize = size * 6;\n  data.forEach((d, i) => {\n    d.id = i;\n    d.image = 'art/' + d[4];\n  });\n  useEffect(() => {\n    d3.selectAll(\".autotooltip\").remove();\n    d3.selectAll(\".tooltip\").remove();\n    data.forEach((d, i) => {\n      d.id = i;\n    });\n    const svg = d3.select(ref.current);\n    // Define zoom behavior\n    let isShiftPressed = false;\n    let currentTransform = d3.zoomIdentity; // Initial transform\n\n    const zoom = d3.zoom().scaleExtent([1, 10]).filter(event => isShiftPressed) // Only allow zooming if Shift is pressed\n    .on(\"start\", () => {\n      d3.select('.lasso').remove(); // Remove the lasso path\n      isZooming = true;\n    }).on(\"zoom\", event => {\n      currentTransform = event.transform; // Store the current transform\n\n      const currentZoom = event.transform.k; // Get current zoom level\n      // Adjust the size of the images based on the zoom level\n      const newSize = size / currentZoom ** 0.5;\n      enlargedSize = newSize * 6;\n      svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n      svg.selectAll('image').attr('width', newSize).attr('height', newSize).attr('x', d => xScale(d[0]) - newSize / 2) // Adjust the x position based on the new size\n      .attr('y', d => yScale(d[1]) - newSize / 2); // Adjust the y position based on the new size\n    }).on(\"end\", () => {\n      isZooming = false;\n    });\n    function lasso() {\n      const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n      const lasso = function (selection) {\n        const node = selection.node();\n        const polygon = [];\n        selection.filter(() => !isShiftPressed) // Only allow lassoing if Shift is NOT pressed\n        .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n        .on(\"pointerdown\", e => {\n          trackPointer(e, {\n            start: p => {\n              polygon.length = 0;\n              dispatch.call(\"start\", node, polygon);\n            },\n            move: p => {\n              polygon.push(p.point);\n              dispatch.call(\"lasso\", node, polygon);\n            },\n            end: p => {\n              dispatch.call(\"end\", node, polygon);\n            }\n          });\n        });\n      };\n      lasso.on = function (type, _) {\n        return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n      };\n      return lasso;\n    }\n    function draw(polygon, data, attributes) {\n      if (isShiftPressed) {\n        // Do not initiate lasso if Shift is pressed\n        return;\n      }\n      let table = document.getElementById(\"myTable\");\n      table.innerHTML = \"\"; // Clear existing table content\n\n      // Create and append the header row\n      const headerRow = table.insertRow();\n      const headerTitles = [\"Text\", ...Object.keys(attributes)];\n      headerTitles.forEach(title => {\n        const th = document.createElement(\"th\"); // Create a table header cell\n        th.textContent = title; // Set the text of the header\n        th.classList.add(\"table-header\"); // Apply the CSS class from app.css\n        headerRow.appendChild(th); // Add the header cell to the header row\n      });\n\n      l.datum({\n        type: \"LineString\",\n        coordinates: polygon\n      }).attr(\"d\", path).style('z-index', -10);\n      const selected = [];\n\n      // Select or identify the data points within the polygon\n      images.classed(\"selected\", polygon.length > 2 ? d => {\n        // Transform data point coordinates to the \"zoomed\" space\n        const transformedPoint = [currentTransform.applyX(xScale(d[0])), currentTransform.applyY(yScale(d[1]))];\n        if (d3.polygonContains(polygon, transformedPoint)) {\n          selected.push(d);\n          return true;\n        }\n        return false;\n      } : false);\n      if (selected.length === 0) {\n        // If no selection, show all data\n        selected.push(...data);\n      }\n      var TableBackgroundNormalColor = \"#ffffff\";\n      var TableBackgroundMouseoverColor = \"#b8b6b6\";\n      function ChangeBackgroundColor(row, id) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n        row.style.border = '1px solid black !important';\n        svg.selectAll('circle').transition(100).attr(\"r\", function (d) {\n          return d.id === id ? r_big : r_small;\n        });\n      }\n      function RestoreBackgroundColor(row) {\n        row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n        svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n      }\n      selected.forEach(d => {\n        let tr = document.createElement(\"tr\");\n        let rowData = `<td>${d[2].slice(0, 250)}</td>`; // Original data point name or identifier\n\n        // Append attribute values for this data point\n        Object.keys(attributes).forEach(attr => {\n          rowData += `<td>${attributes[attr][d.id]}</td>`; // Assumes `d.id` is a valid index for attribute arrays\n        });\n\n        tr.innerHTML = rowData;\n        tr.style.backgroundColor = 'white';\n        tr.addEventListener('mouseover', () => {\n          ChangeBackgroundColor(tr, d.id);\n        });\n        tr.addEventListener('mouseout', () => {\n          RestoreBackgroundColor(tr);\n        });\n        table.appendChild(tr);\n      });\n      svg.value = {\n        polygon,\n        selected\n      };\n    }\n\n    // Use D3's drag behavior for the lass\n\n    // Attach the lasso behavior to the SVG\n    svg.call(lasso().on(\"start lasso end\", function (event) {\n      draw(event, data, attributes);\n    }));\n\n    // Apply the zoom behavior to the SVG element\n    svg.call(zoom);\n    const keydown = event => {\n      if (event.key === \"Shift\") {\n        isShiftPressed = true;\n      }\n    };\n    const keyup = event => {\n      if (event.key === \"Shift\") {\n        isShiftPressed = false;\n      }\n    };\n    document.addEventListener(\"keydown\", keydown);\n    document.addEventListener(\"keyup\", keyup);\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove();\n    svg.selectAll(\"path\").remove();\n    d3.select(\"#selectioncontent\").selectAll('*').remove();\n    const path = d3.geoPath();\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\");\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear().domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])]).range([height - margin.bottom, margin.top]);\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\").style(\"margin-right\", \"50px\").style(\"position\", \"absolute\");\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity().x(d => xScale(d[0])).y(d => yScale(d[1])).size([width, height]).bandwidth(40).thresholds(3)(data);\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol);\n      setStringToNumberMap(encodeArray(array));\n    } else {\n      var array = getColumn(data, 3);\n      setStringToNumberMap(encodeArray(getColumn(data, 3)));\n    }\n    var color_idx = getEncodedArray(array, stringToNumberMap);\n    console.log(colorCol, stringToNumberMap);\n\n    // Create a group for visual elements that should be zoomable and panable\n    let zoomableGroup = svg.select('g.zoomable');\n    if (zoomableGroup.empty()) {\n      zoomableGroup = svg.append('g').classed('zoomable', true);\n    }\n\n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    // Bind data to images\n    let images = zoomableGroup.selectAll('image').data(data, d => d.id); // Use a key function for object constancy (if not already defined, ensure each data item has a unique 'id')\n\n    // Enter new images\n    images.enter().append('image').attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n    .attr('width', size).attr('height', size).style(\"opacity\", 0).style(\"stroke\", \"red\") // set the line colour\n    .attr('x', d => xScale(d[0]) - size / 2).attr('y', d => yScale(d[1]) - size / 2)\n    // .style(\"z-index\", 1)\n    .merge(images).transition().duration(1500).style(\"opacity\", .8).attr('x', d => xScale(d[0]) - size / 2).attr('y', d => yScale(d[1]) - size / 2);\n    images.on(\"mouseover\", (event, d) => {\n      if (isZooming) return; // Skip if zooming\n      // console.log(\"c\", currentImg);\n      // console.log(\"d\", d.image);\n      // console.log(d.image === currentImg);\n      if (d.image === currentImg) {\n        currentImg = '';\n        return;\n      }\n      currentImg = d.image;\n      // console.log(\"e\", currentImg);\n\n      d3.select(event.currentTarget).raise().transition().duration(300).attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n      .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n      .attr('width', enlargedSize).attr('height', enlargedSize).style(\"opacity\", 0.9).on(\"end\", function () {\n        d3.select(this).style(\"pointer-events\", \"none\");\n      });\n      // .style(\"z-index\", 20);  // needs to be higher than other images\n\n      console.log(d);\n      //let tooltipContent = `<div><p>Title: ${d[4]}</p><p>Artist: ${d[5]}</p><p>Medium: ${d[11]}</p><p>Genre: ${d[8]}</p><p>Date/Period: ${d[10]}</p></div>`;\n      let tooltipContent = `<div><p>${d[2]}</p></div>`;\n      tooltip.transition().duration(100).style(\"opacity\", 100);\n      tooltip.html(tooltipContent).style(\"left\", event.pageX - 10 + enlargedSize / 2 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", (event, d) => {\n      tooltip.transition().duration(1500).style(\"opacity\", 0);\n      d3.select(event.currentTarget).transition().duration(1500).attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n      .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n      .attr('width', size).attr('height', size).on(\"end\", function () {\n        // Once the transition ends, reset pointer-events to auto\n        d3.select(this).style(\"pointer-events\", \"auto\");\n        // console.log(\"out\", d.image)\n        // if (d.image === currentImg) {\n        //   currentImg = '';\n        //   console.log(\"cu out\", currentImg)\n        // }\n      });\n    });\n\n    // Exit selection: Remove elements that are no longer present.\n    images.exit().transition().duration(1500).style(\"opacity\", 0).remove();\n    // *️⃣ Disable lasso for now\n    // svg.call(lasso().on(\"start lasso end\", draw));\n    // draw(defaultLasso);\n\n    //dots.style(\"opacity\", 1);\n\n    //console.log(contours)\n\n    // Append the contours.\n    var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\").attr(\"stroke\", 'black').data(images).join(\"path\").style(\"opacity\", 0).attr(\"fill\", (d, i) => 'gray').attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n    //.attr(\"stroke\", 'red')\n    .style(\"z-index\", -1).attr(\"d\", d3.geoPath());\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2);\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n\n    return () => {\n      document.removeEventListener(\"keydown\", keydown);\n      document.removeEventListener(\"keyup\", keyup);\n    };\n  }, [data, labels, width, height, colorCol, attributes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Scatterplot, \"T+xGUQDYICGs/OVg7wSXRfq0OY8=\");\n_c = Scatterplot;\nexport default Scatterplot;\nvar _c;\n$RefreshReg$(_c, \"Scatterplot\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","PieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","currentImg","r_small","r_big","colors2","colors","addAlpha","color","opacity","_opacity","Math","round","min","max","slice","toString","toUpperCase","getColumn","arr","n","map","x","encodeArray","array","uniqueStrings","Set","stringToNumberMap","number","forEach","str","getEncodedArray","trackPointer","e","start","move","out","end","tracker","id","pointerId","target","point","pointer","setPointerCapture","select","on","sourceEvent","releasePointerCapture","prev","Scatterplot","props","_s","width","height","data","labels","colorCol","attributes","console","log","margin","top","left","right","bottom","ref","setStringToNumberMap","isZooming","size","enlargedSize","d","i","image","selectAll","remove","svg","current","isShiftPressed","currentTransform","zoomIdentity","zoom","scaleExtent","filter","event","transform","currentZoom","k","newSize","attr","xScale","yScale","lasso","dispatch","selection","node","polygon","preventDefault","p","length","call","push","type","_","arguments","draw","table","document","getElementById","innerHTML","headerRow","insertRow","headerTitles","Object","keys","title","th","createElement","textContent","classList","add","appendChild","l","datum","coordinates","path","style","selected","images","classed","transformedPoint","applyX","applyY","polygonContains","TableBackgroundNormalColor","TableBackgroundMouseoverColor","ChangeBackgroundColor","row","backgroundColor","replace","border","transition","RestoreBackgroundColor","tr","rowData","addEventListener","value","keydown","key","keyup","geoPath","append","text","scaleLinear","domain","range","tooltip","contours","contourDensity","y","bandwidth","thresholds","color_idx","zoomableGroup","empty","enter","process","env","PUBLIC_URL","merge","duration","currentTarget","raise","tooltipContent","html","pageX","pageY","exit","contourPaths","join","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/embedding-modifier/app/src/plotdataImg.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nlet currentImg = ''\n\nconst r_small = 5\nconst r_big = 15\n\nconst colors2 = [\n  \"#9edae5\", \"#17becf\", \"#dbdb8d\", \"#bcbd22\", \"#c7c7c7\", \"#7f7f7f\",\n  \"#f7b6d2\", \"#e377c2\", \"#c49c94\", \"#8c564b\", \"#c5b0d5\", \"#9467bd\",\n  \"#ff9896\", \"#d62728\", \"#98df8a\", \"#2ca02c\", \"#ffbb78\", \"#ff7f0e\",\n  \"#aec7e8\", \"#1f77b4\"\n]\n\nconst colors = [\n  \"#d62728\", \"#bcbd22\", \"#000000\", \"#17becf\", \"#FFD700\", \"#9467bd\",\n  \"#808080\", \"#1f77b4\", \"#2ca02c\", \"#ff7f0e\", \"#7f7f7f\", \"#e377c2\"\n]\nfunction addAlpha(color, opacity) {\n  // coerce values so ti is between 0 and 1.\n  var _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color.slice(0, 7) + _opacity.toString(16).toUpperCase();\n}\nconst getColumn = (arr, n) => arr.map(x => x[n]);\n\nfunction encodeArray(array) {\n  // Step 1: Identify unique strings\n  const uniqueStrings = new Set(array);\n\n\n  // Step 2: Map strings to numbers\n  const stringToNumberMap = {};\n  let number = 0;\n  uniqueStrings.forEach(str => {\n    stringToNumberMap[str] = number++;\n  });\n\n  // Step 3: Generate encoded array\n  return stringToNumberMap;\n}\n\nfunction getEncodedArray(array, stringToNumberMap) {\n\n  return array.map(str => stringToNumberMap[str]);\n\n}\n\n\n\n\nfunction trackPointer(e, { start, move, out, end }) {\n  const tracker = {},\n    id = (tracker.id = e.pointerId),\n    target = e.target;\n  tracker.point = d3.pointer(e, target);\n  target.setPointerCapture(id);\n\n  d3.select(target)\n    .on(`pointerup.${id} pointercancel.${id} lostpointercapture.${id}`, (e) => {\n      if (e.pointerId !== id) return;\n      tracker.sourceEvent = e;\n      d3.select(target).on(`.${id}`, null);\n      target.releasePointerCapture(id);\n      end && end(tracker);\n    })\n    .on(`pointermove.${id}`, (e) => {\n      if (e.pointerId !== id) return;\n      tracker.sourceEvent = e;\n      tracker.prev = tracker.point;\n      tracker.point = d3.pointer(e, target);\n      move && move(tracker);\n    })\n    .on(`pointerout.${id}`, (e) => {\n      if (e.pointerId !== id) return;\n      tracker.sourceEvent = e;\n      tracker.point = null;\n      out && out(tracker);\n    });\n\n  start && start(tracker);\n}\n\n\n\nfunction Scatterplot(props) {\n  var { width, height, data, labels, colorCol, attributes } = props;\n  console.log(data)\n  const margin = { top: 100, left: 120, right: 80, bottom: 100 }\n  const ref = useRef();\n  const [stringToNumberMap, setStringToNumberMap] = useState({ '0': 'none' });\n  // const [currentImg, setCurrentImg] = useState('')\n\n  let isZooming = false;\n  let size = 30; // Default size of images\n  let enlargedSize =size* 6\n\n  data.forEach((d, i) => {\n    d.id = i\n    d.image = 'art/'+d[4]\n  })\n\n  useEffect(() => {    \n    d3.selectAll(\".autotooltip\").remove();\n    d3.selectAll(\".tooltip\").remove();\n\n\n    data.forEach((d, i) => {\n      d.id = i\n    })\n\n\n\n    const svg = d3.select(ref.current);\n    // Define zoom behavior\n    let isShiftPressed = false;\n    let currentTransform = d3.zoomIdentity; // Initial transform\n\n\n    const zoom = d3.zoom()\n      .scaleExtent([1, 10])\n      .filter(event => isShiftPressed) // Only allow zooming if Shift is pressed\n      .on(\"start\", () => {\n        d3.select('.lasso').remove(); // Remove the lasso path\n        isZooming = true;\n      })\n      .on(\"zoom\", (event) => {\n        currentTransform = event.transform; // Store the current transform\n\n        const currentZoom = event.transform.k; // Get current zoom level\n        // Adjust the size of the images based on the zoom level\n        const newSize = size / currentZoom**0.5;\n        enlargedSize =newSize* 6\n\n        svg.selectAll('g.zoomable').attr(\"transform\", event.transform);\n\n        svg.selectAll('image')\n           .attr('width', newSize)\n           .attr('height', newSize)\n           .attr('x', d => xScale(d[0]) - newSize / 2) // Adjust the x position based on the new size\n           .attr('y', d => yScale(d[1]) - newSize / 2); // Adjust the y position based on the new size\n\n        \n      \n      })\n      .on(\"end\", () => {\n        isZooming = false;\n      });\n\n      function lasso() {\n        const dispatch = d3.dispatch(\"start\", \"lasso\", \"end\");\n        const lasso = function(selection) {\n          const node = selection.node();\n          const polygon = [];\n     \n          selection\n            .filter(() => !isShiftPressed) // Only allow lassoing if Shift is NOT pressed\n            .on(\"touchmove\", e => e.preventDefault()) // prevent scrolling\n            .on(\"pointerdown\", e => {\n              trackPointer(e, {\n                start: p => {\n                  polygon.length = 0;\n                  dispatch.call(\"start\", node, polygon);\n                },\n                move: p => {\n                  polygon.push(p.point);\n                  dispatch.call(\"lasso\", node, polygon);\n                },\n                end: p => {\n                  dispatch.call(\"end\", node, polygon);\n                }\n              });\n            });\n        };\n        lasso.on = function(type, _) {\n          return _ ? (dispatch.on(...arguments), lasso) : dispatch.on(...arguments);\n        };\n     \n        return lasso;\n      }\n\n      function draw(polygon, data, attributes) {\n        if (isShiftPressed) {\n          // Do not initiate lasso if Shift is pressed\n          return;\n        }\n        let table = document.getElementById(\"myTable\");\n        table.innerHTML = \"\"; // Clear existing table content\n      \n        // Create and append the header row\n        const headerRow = table.insertRow();\n        const headerTitles = [\"Text\", ...Object.keys(attributes)];\n        headerTitles.forEach(title => {\n          const th = document.createElement(\"th\"); // Create a table header cell\n          th.textContent = title; // Set the text of the header\n          th.classList.add(\"table-header\"); // Apply the CSS class from app.css\n          headerRow.appendChild(th); // Add the header cell to the header row\n        });\n      \n    \n        l.datum({\n            type: \"LineString\",\n            coordinates: polygon\n        }).attr(\"d\", path).style('z-index',-10);\n    \n        const selected = [];\n    \n        // Select or identify the data points within the polygon\n        images.classed(\n            \"selected\",\n            polygon.length > 2\n                ? d => {\n                  // Transform data point coordinates to the \"zoomed\" space\n                  const transformedPoint = [\n                    currentTransform.applyX(xScale(d[0])),\n                    currentTransform.applyY(yScale(d[1]))\n                  ];\n                    if (d3.polygonContains(polygon, transformedPoint)) {\n                        selected.push(d);\n                        return true;\n                    }\n                    return false;\n                }\n                : false\n        );\n    \n        if (selected.length === 0) {\n            // If no selection, show all data\n            selected.push(...data);\n        }\n    \n        var TableBackgroundNormalColor = \"#ffffff\";\n        var TableBackgroundMouseoverColor = \"#b8b6b6\";\n    \n        function ChangeBackgroundColor(row, id) {\n            row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.8);\n            row.style.border= '1px solid black !important';\n            svg.selectAll('circle').transition(100).attr(\"r\", function(d) {\n                return d.id === id ? r_big : r_small;\n            });\n        }\n    \n        function RestoreBackgroundColor(row) {\n            row.style.backgroundColor = row.style.backgroundColor.replace(/[^,]+(?=\\))/, 0.4);\n            svg.selectAll('circle').transition(100).attr(\"r\", r_small);\n        }\n    \n        selected.forEach(d => {\n            let tr = document.createElement(\"tr\");\n            let rowData = `<td>${d[2].slice(0,250)}</td>`; // Original data point name or identifier\n    \n            // Append attribute values for this data point\n            Object.keys(attributes).forEach(attr => {\n                rowData += `<td>${attributes[attr][d.id]}</td>`; // Assumes `d.id` is a valid index for attribute arrays\n            });\n    \n            tr.innerHTML = rowData;\n            tr.style.backgroundColor = 'white';\n    \n            tr.addEventListener('mouseover', () => {ChangeBackgroundColor(tr, d.id)});\n            tr.addEventListener('mouseout', () => {RestoreBackgroundColor(tr)});\n    \n            table.appendChild(tr);\n        });\n    \n        svg.value = { polygon, selected };\n    }\n\n      // Use D3's drag behavior for the lass\n\n    // Attach the lasso behavior to the SVG\n    svg.call(lasso().on(\"start lasso end\", function(event) {\n      draw(event, data, attributes);\n  }));\n\n    // Apply the zoom behavior to the SVG element\n    svg.call(zoom);\n\n    const keydown = (event) => {\n      if (event.key === \"Shift\") {\n        isShiftPressed = true;\n      }\n    };\n  \n    const keyup = (event) => {\n      if (event.key === \"Shift\") {\n        isShiftPressed = false;\n      }\n    };\n  \n    document.addEventListener(\"keydown\", keydown);\n    document.addEventListener(\"keyup\", keyup);\n\n\n\n    //svg.selectAll('*').remove()\n    svg.selectAll('text.label').remove()\n    svg.selectAll(\"path\").remove()\n    d3.select(\"#selectioncontent\").selectAll('*').remove()\n\n\n    const path = d3.geoPath()\n    const l = svg.append(\"path\").attr(\"class\", \"lasso\")\n\n    svg.append(\"defs\").append(\"style\").text(`\n    .selected {r: 2.5; fill: red}\n    .lasso { fill-rule: evenodd; fill-opacity: 0.1; stroke-width: 1.5; stroke: #000; z-index: 0;}\n  `);\n\n\n\n\n\n\n\n\n    // Set scales for the scatterplot\n    const xScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(data, d => d[1]), d3.max(data, d => d[1])])\n      .range([height - margin.bottom, margin.top]);\n\n\n    // Tooltips\n    const tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0)\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"solid\")\n      .style(\"border-width\", \"2px\")\n      .style(\"border-radius\", \"5px\")\n      .style(\"padding\", \"5px\")\n      .style(\"margin-right\", \"50px\")\n      .style(\"position\", \"absolute\");\n\n\n    // Bind data to circles and add tooltips\n    //console.log(labels)\n    // Compute the density contours.\n    const contours = d3.contourDensity()\n      .x(d => xScale(d[0]))\n      .y(d => yScale(d[1]))\n      .size([width, height])\n      .bandwidth(40)\n      .thresholds(3)\n      (data);\n\n\n\n\n    //SetcolorCol\n    if (colorCol != -1) {\n      var array = getColumn(data, colorCol)\n      setStringToNumberMap(encodeArray(array));\n\n\n\n    } else {\n      var array = getColumn(data, 3)\n      setStringToNumberMap(encodeArray(getColumn(data, 3)))\n    }\n\n\n\n    var color_idx = getEncodedArray(array, stringToNumberMap)\n\n    console.log(colorCol, stringToNumberMap)\n\n\n\n\n    // Create a group for visual elements that should be zoomable and panable\n    let zoomableGroup = svg.select('g.zoomable');\n    if (zoomableGroup.empty()) {\n          zoomableGroup = svg.append('g').classed('zoomable', true);\n        }\n\n        \n\n        \n    // Now, when adding your circles or images, append them to `zoomableGroup` instead of directly to `svg`\n    // Bind data to images\n    let images = zoomableGroup.selectAll('image')\n      .data(data, d => d.id); // Use a key function for object constancy (if not already defined, ensure each data item has a unique 'id')\n\n\n    // Enter new images\n    images.enter().append('image')\n      .attr('xlink:href', d => process.env.PUBLIC_URL + '/' + d.image) // Assuming this is correct\n      .attr('width', size)\n      .attr('height', size)\n      .style(\"opacity\", 0)\n      .style(\"stroke\", \"red\")    // set the line colour\n      .attr('x', d => xScale(d[0]) - size / 2)\n      .attr('y', d => yScale(d[1]) - size / 2)\n      // .style(\"z-index\", 1)\n      .merge(images)\n      .transition().duration(1500)\n      .style(\"opacity\", .8)\n      .attr('x', d => xScale(d[0]) - size / 2)\n      .attr('y', d => yScale(d[1]) - size / 2)\n  \n\n\n    images\n      .on(\"mouseover\", (event, d) => {\n        if (isZooming) return; // Skip if zooming\n        // console.log(\"c\", currentImg);\n        // console.log(\"d\", d.image);\n        // console.log(d.image === currentImg);\n        if (d.image === currentImg) {\n          currentImg = ''\n          return\n        }\n        currentImg = d.image\n        // console.log(\"e\", currentImg);\n\n        d3.select(event.currentTarget)\n          .raise()\n          .transition().duration(300)\n          .attr('x', d => xScale(d[0]) - enlargedSize / 2) // Recalculate x to keep the image centered\n          .attr('y', d => yScale(d[1]) - enlargedSize / 2) // Recalculate y to keep the image centered\n          .attr('width', enlargedSize)\n          .attr('height', enlargedSize)\n          .style(\"opacity\", 0.9)\n          .on(\"end\", function() {\n            d3.select(this).style(\"pointer-events\", \"none\");\n          });\n          // .style(\"z-index\", 20);  // needs to be higher than other images\n        \n        console.log(d);\n        //let tooltipContent = `<div><p>Title: ${d[4]}</p><p>Artist: ${d[5]}</p><p>Medium: ${d[11]}</p><p>Genre: ${d[8]}</p><p>Date/Period: ${d[10]}</p></div>`;\n        let tooltipContent = `<div><p>${d[2]}</p></div>`;\n\n        tooltip.transition()\n          .duration(100)\n          .style(\"opacity\", 100);\n        tooltip.html(tooltipContent)\n          .style(\"left\", (event.pageX -10 + (enlargedSize / 2)) + \"px\")\n          .style(\"top\", (event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", (event, d) => {\n        tooltip.transition()\n          .duration(1500)\n          .style(\"opacity\", 0);\n        d3.select(event.currentTarget)\n          .transition().duration(1500)\n          .attr('x', d => xScale(d[0]) - size / 2) // Reset x to original centered position\n          .attr('y', d => yScale(d[1]) - size / 2) // Reset y to original centered position\n          .attr('width', size)\n          .attr('height', size)\n          .on(\"end\", function() { // Once the transition ends, reset pointer-events to auto\n            d3.select(this).style(\"pointer-events\", \"auto\");\n            // console.log(\"out\", d.image)\n            // if (d.image === currentImg) {\n            //   currentImg = '';\n            //   console.log(\"cu out\", currentImg)\n            // }\n          });\n      });\n\n  // Exit selection: Remove elements that are no longer present.\n  images.exit()\n    .transition().duration(1500)\n    .style(\"opacity\", 0)\n    .remove();    \n    // *️⃣ Disable lasso for now\n    // svg.call(lasso().on(\"start lasso end\", draw));\n    // draw(defaultLasso);\n\n  \n\n    //dots.style(\"opacity\", 1);\n\n\n\n    //console.log(contours)\n\n\n    // Append the contours.\n    var contourPaths = svg.selectAll('contours').attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke\", 'black')\n        .data(images)\n        .join(\"path\")\n        .style(\"opacity\", 0) \n        .attr(\"fill\", (d, i) => 'gray')\n        .attr(\"stroke-width\", (d, i) => i % 5 ? 0.25 : 1)\n        //.attr(\"stroke\", 'red')\n        .style(\"z-index\", -1)\n        .attr(\"d\", d3.geoPath());\n\n    contourPaths.transition().duration(2500).style(\"opacity\", (d, i) => i % 5 ? 0 : 0.2)\n\n\n\n\n\n    // Bind data to text elements and add labels\n\n    /*svg.selectAll('text.label')\n        .data(labels)\n        .enter()\n        .append('text')\n        .attr('class', 'label')\n        .attr('fill', 'black')  \n        .attr('x', d => xScale(d[0])) \n        .attr('y', d => yScale(d[1]))\n        .attr('dy', '.35em')  \n        .attr('text-anchor', 'middle')\n        .attr('opacity', 0)\n        .text((d,i) => `Cluster ${i}`)\n        .attr('stroke', 'black')  \n        .attr('stroke-width', '0.3px') \n        .attr('font-size', '28px')\n        .attr('font-weight', '500').transition().duration(1000).attr('opacity', 1)\n        ;*/\n\n    return () => {\n          document.removeEventListener(\"keydown\", keydown);\n          document.removeEventListener(\"keyup\", keyup);\n        };\n\n  }, [data, labels, width, height, colorCol,attributes]);\n\n  return (\n    <>\n\n      <svg ref={ref} width={width} height={height}></svg>\n    </>\n  )\n}\n\nexport default Scatterplot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}